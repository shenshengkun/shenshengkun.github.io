<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[kubectl-debug]]></title>
    <url>%2Fposts%2F028aakr3.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s-ControllerManager工作流程]]></title>
    <url>%2Fposts%2Fdl657gr1.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s-schedule工作流程]]></title>
    <url>%2Fposts%2Fdk8k79hg.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[kustomize管理Kubernetes应用]]></title>
    <url>%2Fposts%2Fpjaj999a.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s做命名空间配额]]></title>
    <url>%2Fposts%2Fldfl76la.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! U2FsdGVkX1+pqWpDTuFNuF11ox9IXyfW4h60mrqtc8S4jRFQNzpbKcz3kSYkdRTSU6Hw0mEbB0LxfoKun+k/mbFJC6Bjk6o3u7JaLXIX75ncIIsiXFCFjTzBZj85Uq9mRcScxQC/ahqs7E50+HWXGttuJ1dlyIyHk4wH+fOoqspKCVY+2+F+3Orh8oWUyXzQzMapLcooTbdYpyJbUH9R3Ho3h0MpnZduwYdOnC3UW2yS7a+i9NyL7SyJSb17QcChZgd8SBDpB2UD17EgnYn4XsX6Z/OQivLkuE4B9y13fa9YBrlT9R+Lh2L4/Q/KlmJMYHHJ3dfP5MKzICg/lxLzCi1oHUf30vQQ3ER9cCiVtB1RjnKoNvvFvJFlEpLHQ7J5lgF8kGCVhr+hid+pI7EbVENOBOFJnoFmjUmYL0fDwdsE+gx7JpKHBg57WPJYcxpvC8QhnvWVZjdQYcgWq+EHQ7O7gwLA7hxH5vk2ZJy0sSltYeGmLQQpizXvDoR4EUY8grKsEVc0dDJYx6wvKHKL1CEr0D6C1mlTdMdtvdLyMuByjtenHbSmAsjjK3TgEkhx5PwUI4ZHNra3Fg6o5UfqaOtfV695A7yG42vLs6QG7/Od0ZpMNg+GYQINVtzxvmJAkZSuM+5GSNCHOS9ARgMn7/8CxqDBV/v7QsH1prwRSTxVY25JDNqQ5EOjyS+dlWZcKuFPQFRS1zatOkstbvE4YJzCF9wX8F8EBwQK+2qHk5DdIDSLjw0Pm4LOSn7bf+qH+uhu7ZlNj4fwbhjI3Q9N/PJRZj4eHgAzPR+50zO2KrQ9vO848gdlvbQ9JyFRXjNoWLSiEnp+GUAJxlSdEsZINIlVEEGhlPrUMgyRPXsbtcErXDLyjxgCMXG88bQd828S574N1/qvygbjmu92oPRjMwdZPq/qhWZ42dLWKVsoeMgmWvoTV4F/ojx44XwJWhQ2eBt/Ljs2k6d01d46MTXMCfB1OzmMHGfynjr+SYuHyAripgLB1ovREAh+sp/SdyNOvRVb5YI6vnT4HibSxmsHz4ViNOzreW+DljmwTf+G+NkUoRkd9zPVe1zaEGzLzeLuvtLP0OQncYTM1JCyzbWhcPqLO4kK2atKRaGo6rEGv3s4FkjHVPsTUzGxosWYiHLzIRNIaw3CpkzUGyQPmTj83XJGNgkaPGJJjezRwcpBYU1OpQWAHLQ3ZHjdJw5N7yOU40DpadHrIBcfLoVriXkwhvN6Lo3w6jgYkAEE1gQFKGa5vpBlyCr9zJFvwWXSL2ZOhpkaX5vVHuSnUK5qwr22xv86jDUkekanmwbeMkPWgSIWYNGVSPmpdkUerzc1F3sHro49Q8bfje5hKxW0Ui9fOgZhR7jVsJSQQxu7TTL8NjcGLoCPS88anU2+qGLXwmXqFWLn7zbcrCflHL4mpLj6yudHtIM0F1igAcx8bHvLPY//jRZSD86r4SlUwy3RBboDkQbsWM0jzjHoCB/nAru2KkSfyNv7OGuzK86syVVDs8vGmHfQsbQWPEu0GOv6x4l/lEvokSobEInMdQLFmqEV7mMCf4O6uFhgDf+DBsX02Qa5CQxPTgSnK3InQqPjKwdfnYTtlAtkRxUqU4xWwc9xlneRCIK0G80Zgu79VNIHfZU20Fe3sBw32niKWNwVJOUnG9gWfUJ8NQn50BRhfNATge+gVRMj0W7n+6Yfk55rcVqDLig/qf+vpj5nzZfdWODaR3APxZb26DMP87afOFmXB+9z6AvtnMPFUYaV6B+od912Cmbcxel9/Cis3Q18rwIqe5rpyH4lEIIlPN5/aZfIIY9NBaL0w6WF6wOfiRr0ACoXQ0nCkWcnAIeKbvdI4wVie5GI5tc4gCSkzIAPenWa296QAfTL/+GBBu2s0pKUCQYCV5nauXEtJh5kUeXsCBnH3Rvq4HVdU1C/0YZAT7Pnr6oHa32IVfHtuNgo2qn3SXiGguRjxsC6Rx/kt6Gly6ehiO/jsulFmMQjvEcF4pmvdEycdwNSQ3xB+iK6F5xmUSDxi8/RIVTCkRKave4BXvfivjPJDRQWjz23ms6/jmRTrjoHCwXy3NqMn7ESYIDhnxOrwGE4Ytnp1xoaCQsFPbzYZBuSB/EpqVf0eu8a4e6Y4BcT4PH/qubb/W+P/jyy7oZQ5hwB1lniUf9F8Qmlnd7BFHelSxoWdDNFTNxEodbveuG+nZ1HKB9y3kfxn3Oa0A9UI1jIdHHbQmcEVaaNZNEYg/QvTyIBrC685jTFU6aVIp9Sd93X7v4fARXR1bqVuJ9KosE7WpJxGdWVvHKXVbZjtGZ58fDOpFa9k6cyFItVpd/Zhe1e4MvQB4az6YeUrqfhLIZhI3RVpUmYPqr+CyxpQe/J9k1QAZAQb5uFxgHXF0Z2dylsjt6//ubFkQ4fOlBbk3Xwzcugsq4RTnCv/oRVgu8gKZ7WCrP7DZjGygezdEs/5fzG9J5b7EAsOSUjmT8zG2GfLexxhMLMJyId0ION0XNyY40Glk7qB8xH3gi+dYhtYqi3C+u/iAEV/k0opZG4n9LLhRhrbae84IQKIqq/uWzQWZqfoOjwAwD7DoyV2WXWttMoDr3bksinZrObj5pXpDHbpY94uTVnBckD/U9xVmiPZumfQHn+zf+7b5kmaklrYQKX8lt9AwLO47IO+ysJRm0F5QMM8taIPreUXmOM+Ej8QJjgREVjsf2cEAgW/Q+Z0dbdr0EZ/VQSrg8lTgXSeCvsc2ElYIrqfcGhSFrta1nFho0xlocNzTLuO/sUYJDZFau3l6QR5ETExDhzbQ6DcawZilQhPpd80OuSdtwkNLVmNi6fpQZM1NmvxFD9HK3RuAN2NHdD1R+GP99wkTvCmwQGnrZ5pxs4oArd/nBdLPhOe65uNN2vxOmwtmmSZurYtj/JX++8Nlxl7435lcKFgle8ndqfCH0xQza+/FaI5cKABAvYBLY2shkwyYWK7Z9hUHP3cnMJRorKsdMY8S240WPPr3LQAOVgrb/3xwUuPhOsmWalmHTDwPe0JfgMY/S578NdXW0WHG131bMSF3qnh5lnIxjyWcV8oieYi/CvP44Gt1tIF1CmufHzRrWYcevQ/8692QdZBXArdvfvyX7VyaX/+ejXwFuZSXR4TI2tVZWglF4T67m9ogiwDt/nST3iOcmrZrr8UwuiQmvLvlvQgkuuNvw7Fi23fD+1gQVydmeqKnjiSsFbqeixdU4JX7Y/YQPPUdDUwrS5C+FpzSTj4WTev1rlxIUpdKy6L/Fc10b0TD51EWVS8QawGsNPKNt8+mcTtomFuQfgHiPuARuS3BGOFlLPYBO1RwrxveCvJMNriYaarD5fl8lvr815asKZqXQcxe/us38XmNcuGMsTI/hDHCWyiLQQrMnCOVf9XBnPO/GsuFXSmiuu7MY2McIgebAwnXjQC/XTazGK6G4jYhU4oToQ9P5gGYZWixDOqng1aE91UkWzfZijO4mIdoIyuLxjwlOMJJaIBHmmMQJ4KSppeG+EHmKTggZD+UzQCDLkWskSbKi5ezEjmLIl8pI/koie+4nWqBCqfs2142JchHQTyy75+hmRcll9UslMAx25aD97inLhmSXX/+Ipy3tD8L90/uWSjP4ZTdeg9nN8prn/od3S9QG/OrYBqj5ATBv5fZ31IgCMsI4B+WqusSH0jeEyqcocMA8x+GNFpiuBLJPgbvB/prt+Mh8Ty2i1+H+ZK9ZzizMIB5pr9bGMzz++KbNgztaMLXvG1nafxG3ItethVgXH8X+XTxSWvrMGZNvL2486UZ/npPazwmP72XSKUrIgqFD1UwYIZSf/NVHJoyHT/EKOhRfEGsF4uEc4/wXUZD9ikr027c0E2LbasO+MK8JRPfJwh00hvcHzQLWTXcYuybS7CwweYjwcqq/+vsqFbHZ/l7tQYkoNDEfHGclnOakqH6ni2SrZgo2czZWWNwVebWqNjeHo352xzbzajuwHUNInXiLKseQQ0SyIXzEIJ6EXilY9CGzYw6Kf//YS5HarVgHMAXwlovsMcWX8K8Gs3HaWlPMD3QYE3r1VUIJ0QCgAYvY0Xw48UxmgNLYYr6bxoLbv7bXpt1Ga3KgDuFp6REi8RIuWvQjj5HB4ADBXh8RdTIm7qf//J/LLL9NmKfFSejnZUoy7NpFKcTgYOpr0Hkb0zkXtJiJa3+IaOtISQHNRHRM5RdxMlD2tEQkBj7kmdruwUVVUwhd0ASHmnZ36gN4QDlaP9TGOGHcFXIiEvKSKhJ7Zv6NSLOo+DPhxpKzHUsR2YAHUebBxte6nAZs6z6eu4NMSBvYibup9XSnJjVIu70DEDnlKlYeO8xCEBzr18n3K9ONzkOUF+Huzd7JLt9R26qqUg/Iu1M7+iozU8+nE0fn6izVekxOqettJQMySWg7/LHAKEV0LPx99Gd5YJvH0JbitNe4yIM6eTANChQNjhiJnwB5YBqOOzrgHBPokgTpdL4J6MU6hGaKENj8+AYVVgfShueNOHihbnA6EgsGaoc/x6KXweMnU6vUyQFq23xhYnqgYU5qEBNYr/JbffUll+CFcQtEI60Q39brpXkYy7Q9vF5PK7XI0EULVUP9FqhGTI1sBuF3VV44SjnV72Z6ktnxQz68HJnodk8+IDYjnO/Qi8aB1aoYmsIuqT69cjfc1t9JekQqPPomz6EwJ1Qieam3hu4R/3fEPvqRHagTFrnLD/ahlAGJZt8Tw8TkRFh/syg5oorNeF1dNZ0+pf2+DEJz+WwVRt0AHzGxwgCUZfNa2tmYcDFNlgblNVB1g47A98ngh/jPPMgdG6kgDEWTrcf4kSmt0KWbsvOMrRx5G7YU9Yz7ur76bYl5EgeNCihowTeVnk86UKrlHPKMl4YmxLQA00rrzcCvTYIJG0tY3z/ufm1D3bkFVn1AjQ91nUoQCOmPAxnRuuDDDxQGKVcuimeb2eUa+IA0pPVoDEc9Am+Dl8wbQD1lDxu1bcmQH9Yf6nO+ApR4IBUEiMYbJ5Fh6G7U8+KPqFK0gRKyb15HpoL1IwbKtUMaxEBN1Jj0DQSOwt5SfZgn9DDi0DAAONQfia+ptyEwRcARfyyd2I+3LnfH3PpXMe6x7JVQ5mO4UWjQLnbYDkxLwoCG9XMkt8ewmaW2EWVQR6XTyD+R99JcXtp20OvK+fbZeX/27ol6rh8SHEAMFLDaMRgI372Wot8Pv2AlMvvTlEKmKN80vsPuxaOuurF2IWiuI4YNJhHDp1ETgbpLOp44Q6GzScuKZssXNm5RitOq5tr8g8F7o6oSeHJLrWRhNGZ/++/5jsGPtzOc+9skdrXFB9kl6v5GFL+uCcCOe8Kzg58XDJoAAR1+OBa0JcIQ9s7+ji2Vlqczx6E/1PT8V5Dr7o5dOaF9Q6ibYBPUv2kqXpXuWmCiy/PSGuLrZi2ltsXJSUMBmfhaodfEMl+TRHLk34psGap8yeqZr/g3ZLLURSl8NjU7K9FUpceUc1iDMAIO6Qp/LlSduNsEDkjGjCAKjyiGpFJeDKi7Ko2HCq9b/jDuvy4y6mmbL7PP2fAfgzG8K1xeJz8+7tM6CtNVFBpTfUkzJgJRnOn8/m/VcyaBdwVmhYvzstiNS4o6k+X1sksCje/iZh/pO1NyAQu9tCyAIKq0x1i8vwqv4klrp9mTGrgZ8ASsezX2r+FjhycTpTcVB4bFTtALDTwj6O3iUwAiJp41tecy2E3ziOQjvcnkQGKLQFxNMKeBm6sFCb9DdT8PYgopzkJqJPkPIp3DwT9tqpAJqycKn+2emjkv90htmVz4+SsjojsUsv/+t9fwYX2I9FQ34Yw5zvFzTiem6ahZydniKLNWbcbb8nmKBz0jyFTwb+sjOC8cdk8rvzH0/eV5jn+jSQGUlgBOaKSgQ5COhLLWgwxksUnvv5zSXpKxoZhv4xBr9DriNrzjL7MHPfatfbqJftg8sT2U9okAV/ml4vHoot5/rGqXluyBFSyKzbb75WtlotiCBRbu8DZLmBTiRDl/ONNc7ekSNNWtjNDMTKEexoZ9yh/MVwSCMNENUNyDpMLu7QsPuxMETuIVuUYuwATn4sdjD/OCbSASnSawVQUoPmffFurGxeI5z+cP+I8rS3EXYJnULns5AXis+zrH2SnOeWa4JPP/oJ4j1jWAhyW2mrNnPFSt/JgEKi+egWtS2QICff3q6t1eDT/qqiskg5/g8wwc2lvaxYLRgxm8DMT849Bpi4plkOc9ETFbJf0E1EXu7o41VSxVrh/1ipvv5ndqUCphdSKYV05BOcLGAnfqgaqWHiYpDyKz8xCmcIB167ww8qjD5GWxlhgRh8MW8pPd4qzugu1JRp8dpSrF/hDj7jtfXBm/021u3zb5Ip4tYUD/ahhFARpVT5PB4PYIFRav8rH9zxduZq91UCLGgIyd6ViP/V6X9+hyqESG2YMgy52whCijWGRUTWVh0gxUeQSEx0iQUSzD3poZd2YnLNDqrkTe+iBr3uBarmPWJ78gd7yi3W/Q/xQe8PoHV47PCCOO9O20TaUqTzQ0sXGAP4Zd6ovO2yfq+r99eg+WKjUl8n8DDlxprE3xTsZF8V3zex5bYwpL+3mGiI62LIcFbWIVeyHoDQmGXLo5kQkjy+pAAhr3Ei3rLunvfMhiY87tuCf1Z1CSwGKwvIxV9hRuzLXSnkwe6YaACwlMtzaacbWX33atIGcLEV41e+XptehSRmrO+JgvrChBzh5vq+xOWI0QmnxjwIfKAVmv9GWvnKY+5TroOoyEIkWUKg7Z48vmffb0/m5OhRtoUkV1sZPguYCHAsvCkqsFlpWjcYPJgCWuRAi7PPrqUvX8XOWTLitC5za0tgZbh8EIwFmmf0lM9IyrOORGTumH3YPOEJ+bs2g8Kv0KQsddWDgq2CPur8OkyEjeAvqN22P0oeQYYo2SRB65eTrt95OlVMawIBgSFq5RpLJMUu+JUEUhmP6pBqCJMjWHY4bAA5tENovUzf660SiZ0n9R/DxeaqxUZR+KpHSHlUfRIjyZ+l4L6bDOTOnfB6a+Cx41MZD3Wn020kK+OR+qFNEHKK8kn3J/ZPRVgYHFFljSYzKz7pxtBgLSipVuWzHRQ2a3fFFcoXkV6J7hFAc7YHJgLl07Ud+peuPFjbp5m7oPENOZfDIqaHFhx4XJEU3253H0BD4N//D6gZ1T0BqK7ZIEzTLf0vXpGgN69A1XJVti2sP0wpa073I9enrHM9JGIhgr0/ppGnAbnbEM83l+fPBOUXA7xIuXee1Z/EhS/C2bKmzx3rPOHFS49JI2TCCMGWLzMDxQfw420znaParzgNu7Y6bJPU7Fd7oG2ipy3BO6nD4jT94Dzm2gr302Oe7c4Bf0KSdyJWUpeLc6BgigjL/J9oo9h6bcIyjdKhaXcBcIOfXMtHbh7F290oomIPGpQJocusIczyGwJI+b8gIsnM3wBh+jNJCnOtfFqbAXLk3WAKm3TfRmeKvxEqPwUo3B/+Z9hvOxmRJOewaiG9t7oGY43vI+8uHiMMtFu4ONQkvXj2apdGRRKtX0YpQN3z6548dXP71pJaLPRNcBzHOIww5zgEFfN0XJNAeAhNSMdiF+G5VUuE3DoOM8OAij0KLpo1wv/Vy3aCFC8vGgPjqnApDo4QiFe6AyFu15qS83mdaqI6B3Pa6F/eAHVNgvzg3KoWumghCJhOVMLVxr0a5aafK7M5izBaytq/xtKHFuWuibjk1+SAZDKbqDwT7wcxx+d37AWraUDDLp4IhOSWlUpONPQM43VyBtwu3CBAQ4aoZwqgsAP7yJkxpWtcB7EVHCa/fzGLNDjK5l3+o/Iu6+z1zeu65VpT3Je0QFuKv5cyTgn5DvE+c8KzuHX5q5cCmBGx6LF6PTJ1QuYSYwqQOOXVmsr+YgxcE+xB1RsYw7txqsAINapuUFv0W8VKbNRu3SkIcr4venZW2AHFuVSSRGwOV/Z6exNMts4BDDKeHqj9F1ecDopkEFUDrGaorDeNu3ojeMnSRlQ06BmhkFnQYlBBYQTTBxkyzMFj2jOf2M7zFBC6E46qaTtY1K0V+xjIkoMR+8lpsmBN8x1ILBvPeMQ4kSs/bwnVtMqks2DMxlfx0/Q+eqiDdK+ZtrJQg/CytLYZz98xNHdN2vN9etJF6dzaxfbza+5sZHUIWopUj2ARjFCjgw9bXKLuicC0VhCpSzhZhnID1ZSCF3gy4Sc6h0Fou6QAQZ0/3OIQ5THayRFgxfRobIFBetmCGsONWuqVnAC1IJPXeHU0uUD8AuOQBmdGovTIqTBpdgz8UbNVCjWm23o9GImaGWWHu5ifdDV2V8mxad8JAcC1R8Knr3RHhy6FS2MGpINktL0MF/3XhpnsoXpNdAd6XXoJPDVRKqg54l3rZcM2umr/FOX1IIfwRlZ7ByFGxwWFi7P40ihae2wHo0ZDnmG6deu62pEn8EvCqb5KZgBYD9qBXHAqRW6D9Pk2UEOwP1VubnLMYjWAhsBUZNE3wI7SJD5MIIfL84wixRNasfRyn0R5pyK0ddd+5kBCg4Puua0pRfSyQTwzn4TTDflB6PLYtXriBTRHpmpfWUlmWMSXe3Qj9oo6LkJW0pTZjRNgzj6bZQdmAUWfKYbEwP1N1uRGqeu2INX7/exnLk4WK4GSeQWCElkhsK3w1B6ZYE/RRLEuI3Ry07bYS5u0gHfM6v3yyAmcvvLfpBgQ7XNNDDtDCaFm0fRPkhol8sXNyOZLg2n1pT2uPtByLeC3joKAbbTgUsSJsqp+t1ad4jOS414nX/Gqou33gxEzdkXtA5GBGyQnhFsZW4UH+xHG0yU8IrhpNRqFTk6bDbz1czmlnwoeSkTt2Q8oso9TCvU0ZF2tvh8hAZqv9Sc4N2SpJS/NS2KY7BU9Zmy+bGR1P2wT9n2/FlykhvjzutwayrTsSmiQUBv4xsqDVxURikNfqRtaBuBqQJqXnSXFXatbwNtx7eUKFdqUgA41zVlEylOp8BtC6vTHqNCGAjG0sY2NLBLyK0wDeUHxpyw1To3rTmb6XiTBcydlSrxiWkCjSx7k7c4XTVVbKNMWw5MncWRrC/gnsebTlD6MjXAn7CpXX4CQ62s61VESLE0aAxJqOwsh1zvTnu/PmUzsepMjJ2y2EG6+4ymXWOgTW+6jCxQRYy8NVwEsfrEki5PzA0R/Sa7YdPkLAWz0ZGzfRQw8ZYCNBayAmxAGIJqPLrW5cXzSevYYUf1MqhPbXOgKBi4AEDHIxvUt2Zx/EICU6YyyezWBtdhunid2Dxub3qMSqgEOPg7j8SM+mrzpZzw9jkxmvTMwH3JP76KX9AkG7pVcXEiaxocWvo/7YP8daHxPS+SnCZzn5fKQOFwcLaE/MyfPtnIc6YswPlTforgTd9qlFcjs3pSJTQxTxUmxW0VGg1GfzcDEHOMH5rxVhZoOSlckbwAuq4uGoKi0oyDLUU+BjC7lE9OYtK8q9jQer31hK+aWNw2FjXm0gtVwRvykSXijYxpG2qQQM9oqNfVz/csAVGLkxyYa0RAZeikptFu0ghaaZs1KVSkTIy9jQun8gU+YgmZQSGqN2j9Ckonqf6Gaq6JNpGWYdDS54mfYEghN39mC1Jf6V5ToWN+1aEHtOWmWkfeg0S52SDEZS0Km3i1oZS9QNizoG6MhlMkTzj+sybcG5snXPIogo3AtSnHViOVxKmUl4GJRPYKveS45SW9R0XBTTBQ7vSDZbpjmXmngFFliBrDz6GP9bRnRXFMNtYfZGFpdRlPX3lDbjELLtddoyEtX5IcEb0Co3BNTgUEMgsSPRV1qTdDj93eEGFu8pgWcXx+treTDhgv401pSTViQ1eK4LCr5KlnyKts5S6T5y0uG3wIuJ5LR96inqsh5nOX0qy8tC8Tbjvf/B7AIdH7QZG7D5Ocod0cd390GJwHHm49JE1Wx5rVDhqpJmhBwUjHG7eLZ77fa3S0WTr7TGGFHHqtm7h+xAbNffYY8rHeRwtW83bYYq7PHJN0j8o72ZXMhKNV8bSj8UNivnt7T99qbhoUmzcL8939LrG109Ixlg68jPap1yDI/sPTWloa4/d0BDlG7hXcXSBgS9i4/TZ59qvTRwrZTpNFqarwfF+KYuUjucuVXyDX8Uim4txcdjcaauWn8KYOuftDgXmGfuKKF7GmwhE+5s10QMX+THwhTwjGfNHzJrNCnRc9xESax5beGvsmhPB4dPA3ke2Q4CW7sQ49O5RJuThyvGE4Eg8uKnhiQohsxaot/USKvdORmb7VC3N8wX1Sg/dZ9pKL18JzjVUOQyumEbYfmYTGULU7vYuDVHHjuxY8iZU+hKEW80JOq03kEHmxdqHu1IPmTV8Tzt7sAKxhV8Hbn+enQUOsUGOY6fpAbAIjdBZCeLPxuxUJFepbysO3RWHafIgRdtSaTxWiJC2sTrE39UK5yqSMAmUhHJjg2xdBwq/2HTkRZxbU6TtbGbpDMU8SOV+H8K5Il5ic/xFoFn5jivQD46PGNbOdQDujd44+FoiLpBCsBMsdWHHc4hQkoEqHR0b5ZaxFAzA12ujfJ7hc/X8rW5ftqdG2ZcKBga9YpZCnrt3AKBhvg4rQbbcnNiCmo/APqZ5QBT76qqS7RBWZARTmMen/ShzKzI0QCrJWYz1Uw3L7P0DjB+WXwrOtYMZj46NmdV9Nv7gDKwhWfpDxPmOFNomXttUOGcGoThIGhQFSVWvozkQ8VUBOi+BXVU22v4ZwnpYonsL8gPqlAsopKiv4RjcDj8A4WAnwGjZ0EapmK7J5OBGgfH1NUVdS+wLxvJOaBTWcxcCZL3W9jiyZ/pEy+vpqDctp1023ND6HiUoPCCygeziAscZVu78Jtitx+ZKb91PtcNBosbSr2THb4GW+kgMZRJxagA/lzo6eumQKKjyukDv+5H3kzx22NBYfWykhSkoQ43Yes5AZ7EzSoLMzhl96iMnaHgb4Llu1JWf2wtdZ8LhYqK4ZKq8aSi/d1YgomQR35GShrzSjqGHlTDnTOum1C9egZdnBQIUmPvDJvOirHYIRRfr0MQM3zhtf32lRKy2QGuaYyJc5UPBEoogJ8+XFGPwrPOpUpcSaBgTOyi9/kA0db9QwS7u92j3Gl0TsFm9lumXUetGUgK7uTTeqGPRRO3/a6COGAnGkR6d+9Wa4s78mfiII5G7rTUDnFRVYjkBcKUrIpBdzxfCLMCldzja244rPRAQz/8DUojw7UCPjpIc8nqz86PnMxhPAGcq3YNXuA2RSFl0uMH9+WPAWELiwLgDBgbybnQ7gBvnLCa5Y/7jf81m2OZMcIQqAUxI5SXeEPjt/Qw5E6ux2CAA1rqo4aTJJPrK9EuvRuiX8a29ENAdUv/7iC360RDW1H3zGQvm/eymioWYVr1f2jpYEhR7zSZ7kYgckpaHmjrs9l0eXyOKfFHtOX8EsKMqbuJWir38z/YAu2M119QQmrO4xTIlWIBX4bN1mOXMZL6ZrGjxMpbcFhBZ0rM+H6LWigTVHRjsI7M9fUOhcu2rvTuogS788IEF3k/zkWDSW7qag+fQcWRq9R/Y1KM2/lzVKMHDYb/um/6UE4bhXHt+qKoikatrK86VXFObnp6pv73E730arDn8V0HQN4Y1iNFVZZPijVIgvnHvoqIV/HJ00boqvYhyzuZJ4YXNY7YJZi0FyDXq+ygSIl6li4cQ11qqX5y/35xlOkdeoYdF1dTQvtn8fb6u0a2SkiNxPSB5cZOdgRsx8Q9cO0sHPsL2ZEq5wjSCsFZsv01kDAFsE3aFOVfowFMyfZqWPWIoV/Rng/T+9qB7/L04OxOYQsQ6Olr0KnjRmVxZyZjomFIBTi6PaBz2hj8BMR5cDboZEHkUFODwyFbdt2uFqUqzL0WTMtOINWfl44MjypjzFCO/s034RizNMs8iXe+kKJAzrfiUCUq5YGAE5vrDr9s0YnZxnNmRymjmUVg0hIJjin0RaR+Juvu4Ugsgy3g33Eb0DDDHiuwX0Euecuc7MMZOUR61tSO3GqcSg9ye/EHsLj9ztxdfFcjS/Tj7hswLpZhBVusuw7iZs0dgcXDwZ46842OncqHwBjKj+40YnsKNZTsjP/zmDaXdAlcVrCyzOh75NSEiEWZXQzpKo72PApIIou/8OvAD2peOy3V/WfA2hZ4H3nhdfNI2nEpzFhgJ+d++M1QJTNkCIXFV3fpwDyYiAvwpSF8KIUpyCynee5KrW0Zf9/yiMbTwWpRzVDEb6WmNAMNEcnwE2reui85TZvHtQmb56EQpE3AGagme5++LQSyQscGiKrggc/ntpSMkUZUFLSZ943fI+xwPrQ6yyUHWPp8cfOXDd9A+22nv9CcuSrcYEAmXV+9iiRZtOxV414vOBFAB3L1waJIey5lDRGk+Gi/J609YYeb3hX1BDWbKPvAGmV9qbXZJwHXeW6Z/v+gEBOtCBS47k3pzPeJcwwsymdOYFjS+xEDRWnZyTbYCytvN2k2XCGo9tL5fdY4Q0wa5g/9ecu4/4OonLQvL/w+Nq80GmDqorxUk2eBoaj5UtJUlJ6VI53RpYhHFdA5md9HWyUR0pStJ1yHYAaeNz1V6HvMJKtFyZTuuW0m1rxDlIUtTb5/OhggpUhVgO7LPBikfAiDj/RQfDzDjvGLohTKUqkMKJ5ouuP6kq1GyeHDPDMjE7zy9Gb0PGHpJnWApHJxFGJBKWpziezrxEiDMVVDKSnlNkJ4Yng4dmhuZZlnvoExBtuH+T4gtB509TSfnL8TnwlKQmp//3gMkeRBs0X1lPojTCPs3C7yyUSXRTPoMKaCNVe9I/s2wFNEW7myONANcFUW8MoOQhUNeZWdisXUFZkvHqHdOkq+0nxotkWAUEfL52+gm51rN91xVXF3q8pogPsB6SWTYe+vcK8cwbWlSFYN0yva1t239HjhIs+XwIyR97m7Rwr3rx0YyixqfBiiavrMbTR35wh7AJjRdamOEN4TOnxCB/31nWy1/6kzfTEM9UW84dPXJtaMlBAINx4+WEF4AlK2YRXf0CL4kqUmd+ayuaDWl8cApQuaajXeb2boOodHtHZX2SKO+1C06Ja/C6FDUBgexXJUvnOBzGY0mnPgo/DMyPJopwDwn3uetjFv7i4BDmTzAof+pFgWduaqirPB9cpe458XzDCyxydx9pQNCAkAFqAjMSAFSbNg6KuaYxyePbVBA5OB61+0ixOtHhdRjmaJDoKI3Nl0nGFmdMX74IYeFZCLJrg9gsvHAreNaIQIan4suIhs4rmkMaqs4HGD08DciIqhX4IkYqoZxir4tX0gMqmOTQy1CmDLSeUOL8RsInep4oMjlhTkW8Y0Lizfc1LcavHm6JizlaBHqcGN8PzZS6HiX0YJZIjE8SIi8koBQU/KAaGDkqFDgCp/rfN9RFtq+0O0NavThljABqDH5aLWzughxthMDITSIGVZ+tOz3y3EHutZkmEhwwHbApZWg7wYwP9FOpjUCAc6ysj/JQix0CIlyNWgxNrkf4b9FF+eFhPvyvU8vxjjhgpnHMlDNNFMM1glTRYSLedWUTB1r74fOIHEhFo6jJSA+EvpEhWh1HjvOp2yfP3H3jU/olpd7kZ6rkhtNhGvWxiN4IMUiXJgX9zgYfxKWpgr8gPyZxnQPOMq48cC+FaxN1EWKIUr+PGFEihB4/dFNYZIoo+9ncy7+vMjIacbexYzsl1t4i0Gnu17jDWtD83VcnkaYFhbLmSJjZa1gDc8yQFAsvVlSB0rppBYSFiRtVqRM8puhb0GN+hWDfsCvX4xl/YO5DMsWFYNRnyKS9JrFntNB01aZh3LK2ArFIAmzrvU7HMZH6P8FQqP7UkQTu3Pu7PNNxTPCfe+hhXxKVnG8DW8kTM4IUSrmrv+6z2qE0JHFMH+3WiNI9QEhlJvdGehr7N/sVvmU6+F/1U2HUdK6RyzHm8dT+WZJ4eeqbB19TydVOAToSocgJvPm4mHTUo90CIndYYso4olB9Vhl8FdeETIOUZzcPYAqj+/Y4CFF1tYUqZ40KrX+Tt1P6R+d9FNtb19M5OITpILO5gVQ1Vyappzqj35zNMXtBfCkcIGpRKqBPzjvMCR8Zj0pXjZEURsxDBbimhdDlMQUunaJSDycNsgN6mkmrBhxk1/99j5HuKWcKaAq4MpTReJ1/XTZjHXU3iigCpbmqLKD3SBNhF/76UttvZHFoR39xsrzej1f2taCxuJa5Qwf769LnXoccrqnqj4oj6sstWwPh1Zvo6+7WqdA4NAz55CEEostBx3K5M7xpV4aWamFSeeN3q70bUgqHZZY9PZfb5FQJQSYrICe5aPVGv9tfjjKCdX2R6uVEfE1F4qPT3d0ojWfCVk/VwgIhc5OxqR4+iUTbRXGF9Z+gpfoicOnq/LE0W++Cqhm3obAGgkrBgMJFACJQ1lc4NZguxknWSo7gH807EKmYrSAbPHhZanSDduXpujHTWRFhNFIxHejeEcSRQ3HwONPwPYfUEjdZf8+qhvrMNBLWJTQp4hLqZfLWoINTkKAWMwNUt2epJ7li6uqWH4hG6g2iBE4tMxdyh/vYd7A8OpFb90tX4ZbPcaHKOG2DumcY9+kVNqlabWt+e5R2jjComvPT6iBLopzCbt8n7HxKw4bWuW099P4RowI8vFbLbovSU7g/WF9XFVrWJEIGTUQN7cJfDnb4UTPOXbcQk5U5FFL0LzzWJbyBjSIisnN4FNeyeRDuuFStEcBZ7pXwp+25RuorvIiecHGZf5I6345KaQ9k5kM+krgQjciBWs7nZzFxfTuSSeg66hT2J+sjnsCTSRfZFjHU4agrjNeJrV1N34MPYO3740/9ReBrv79SSAm2vHFVNnSgcd0dtKDmT7xWyY8Gk6EJeG1mc0jRYolnGEt5DhHuF8XJgcwvgqF0Faf3Vup/npYzpzGwTEa5NDjgpFgB9xlz/fWmtS6QGg+oHUHiqL52k+v4tCABJJtRfXBU3vf0LLojmeP6dq/+rZ/dwTrsQgPBvE3JWueu4Fxyzd/7WZcQ9jdwPp0feIuR9QELJCMTKd23okpHGqMxPmWLcr2is7HQuWyOZIEszXSb5LHNxvgsEd0FoIdRThQcTxaVj40GhzRKDenECE8SobRTTv64+p/TkrPIx2fomcuBwqnEQf+g/Lvud6yd0pJzoEPRKYhFF2SDnyCSA8ih7QNwQroSgjv40UO7QyuHlnOM7F5QrTHR+yEAr//cDD78gx8vNzHwke2JyFXfagYnu0DYJHbL1A0ZNs5q7VI9vbec8nSekcRoTpSbemejTaeERLZUkpApKjlT9t0i6+FYsxKq79exDwIz8WkyBrx08jJX1X7uUaywroeB3nlEjCj5/Eaof6KTzUfB/2RnUPEOy7Hpwq98ZBeWK5uqw1zzPjcN8k1Sas5jEI3ClUSlZxwMd6jCKRHcJF1amInonNrH7bFp6MpF6TI8pOG7JCtfdt9botlJJRm9oVB4o6FRiXLEUWNItGr8wClc8KxpR8jOmgfK+6T4fBCrNrqmChezDQWs/DXZbM+GMHQq63Cq/xzfyKqD+HbS2VckRsllb/ELHAmH9VeeVwvwSInbqEDjUpXWQh9MOkYwC+9zGSg9TsCvft0Za0+iVFXOycwj5RwEl2MaJ0Va4LNci1m+DaVc8K86tZNEfUszIYbnxhNHb5D11e+TNYPpY2A4SwxrmhkICBLxUd65NR2e2ZYUVaXlDkqDKJUB/tBi+AN33/KwuKrPt023Coc7e/+Kj8CEEleRiaUS5G3SkPn1ftPYSHbHzPkHXt8stFWcaHiCSomTmchYRxyCM+J8dv4mg62j2LoQNfd9HK1bIg2kN7aGibLJMTFXfLC5/+/hABAmG8/60Q265rGwWbxmdPChNcY1nvRBaWZurwhUQ2H20UKrCDN4mgRf1N1H11rghW48+ghdyvatMQcV7oZ32Ja1xNDyOt6EzX+tsxgvfZIrGItU0JDOSEaNGXzvzY3VH7fFKUAGjbRvYmLQpQ+bFucK+BsmNWj7KYoz3IY+NbmiVvBDo45u2CzIoA3Rlstt6s5MNfl02osJ0HzF5+FdmDDJs7Hhv0NVyCftyny+CVJZv39r8CXJKEu8HJ/DCrmUPsg217RxXZannUjsAx8ts78A0bJwZ3cgcshNdT3522LrwtbErETZfMUq7S2Ss7OSfEXKvs0lMfKHp/vAXshMOXlHjriBG0Qb+1xsGE8fLvr9m64opxki5YrbteyNEk9SNHjq+ysL90Vv6/QFsGc5q8wiAgjiw8B1BNFIUdsaejFcxhdOFv3L4IIIF+BMAkZ81qDDQZRuKzkVpH1cQcFbuXvKS6qBHlxQ0rRGmrU9MQrkLZfdzTnA2oWKbQf8npq1rcYjdc6kYxF3tej4PYsdKCjZf1b5IJ7qi+WyaklLjCeYYcixPkY56PJRiKGqiUlot+vg5R9FMQJi+ikLIQX20mmu6klQlkSgypc3udft3HqXU80moslV+CjpSibBzYwgLMlvKSp/PL/Z4+sbDB9bvdR9m7Q1Q58BxLxBQ2/Mu/xty2lIKpc6vy7purIjx4/O2zFgm4Eog/SQMjdoIFyzct7KbfZWnTHNKPj5ZLhXctuG4IoMXB2Yh8KAdc2T5nuVuT1tQEVlXtVPjI525wrErmvSnjgoG37jekJaDTzoO2Wf9AFUzdrfmVRLY7/hJ7jYV81s4ABt1rRZ7N+5tVw9xbCD2MOeGYVIh4PdMLN8M1CIH1lhc8KrEKBr+/1IHTvc6a886phRqjFEOaG1BKD2SKDXbEkQ+47D7+B5GYAPh/R30BX2UEA8R95xRxmBV+LlDcrKyh+lWNrqbsmx0jts9X4Q9s22dFengrQNQAjn/T8fRbypcMxxPCL+rb/YXXrFb1YLvv7bp21nYhrKczHlvp6ljkolzZBjAzytKMm4oQpSAnrqJdDgPcM6yg3GKu58WZCv+1lj4Cxe6togkkyf2zg7e27ZYZPlPnvPgpbvxxWTYV5y/zgameWJkBUsjMx/9Dsm0uCwoXQSqUIN3D9Wq64byOR6WYEcDUopbCt1GGx6m15d6hxxY8uU8Z/y1z3gcjq5bVfD6kpA6PFJeQy1WsbpCX27xp7BiSEAAhrBCV0FFAfdHdQrozmh9k71ZRQFq1BxKHQVHcTNJ06YLKgRqd2Cydq6WcY5GGAKb9iebcbDS4Fn8dHdBLucp+c9I2sHj2hnannnP6SmyMvEQjEL7Gmn2cp146ATpbAynPToAg06sokIOqnF1KqitL+5WZqUeIy6x9rXvtmIkINolUcxphkWqaOLWsNQ39eRhZ+azpoozYdjexaA5vK7ALarSd3I6szUm5PGv9tEiyRSV+SMxy179sAFlb8OM60BkOmH5qh13Kc8ViXtFlS9UlKjj5pP5yNwnswzvuTdYLT502KG8Rviatd5Zbu79re3yda5kdzVvmcTOShafZu6ZUEnJ5ViNAp4ipPB9r6EEpO7IPjKW/EwsOI0WOhx7NHsZ/3TTQmrxS7HcAy2vmeY7uoY+V0g9LwS7VZw4oiuLqz3NOtYqxpzwrfZJ+/a0GoXZko3yC2cTMPKt3nfO4ZsDGKeYVPU4z8D0jDVTmswt2YyMBYMnbe2JZ+a724Qgc6Z7+ERlREL9JocIR7xDm2QwU/+/fLEWVrtskGs7cku32pVLe/8MUMbVQ==]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s设置LXCFS]]></title>
    <url>%2Fposts%2Fdd6348aa.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Kubernetes垃圾回收机制]]></title>
    <url>%2Fposts%2Fladj543a8.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[prometheus监控redis集群]]></title>
    <url>%2Fposts%2Fskd32aaa.html</url>
    <content type="text"><![CDATA[安装redis_exporter12345678cd /usr/localwget https://github.com/oliver006/redis_exporter/releases/download/v1.0.3/redis_exporter-v1.0.3.linux-amd64.tar.gztar -zxvf redis_exporter-v1.0.3.linux-amd64.tar.gz mv redis_exporter-v1.0.3.linux-amd64 redis_exportercd redis_exporter启动nohup ./redis_exporter -redis.addr 192.168.7.21:6379 192.168.7.21:6380 192.168.7.22:6379 192.168.7.22:6380 192.168.7.23:6379 192.168.7.23:6380 &amp; prometheus配置123456789101112131415161718192021222324252627282930313233343536 - job_name: &apos;redis-cluster&apos; static_configs: - targets: - redis://192.168.7.21:6379 - redis://192.168.7.21:6380 - redis://192.168.7.22:6379 - redis://192.168.7.22:6380 - redis://192.168.7.23:6379 - redis://192.168.7.23:6380 metrics_path: /scrape params: check-keys: [&quot;metrics:*&quot;] relabel_configs: - source_labels: [__address__] target_label: __param_target - source_labels: [__param_target] target_label: instance - target_label: __address__ replacement: 192.168.7.21:9121 报警：############ redis cluster 监控 ############ - alert: redis连接数超过1000 expr: redis_connected_clients &gt; 1000 for: 2m labels: status: 监控redis连接数 annotations: description: &quot;&#123;&#123;$labels.instance&#125;&#125;: 当前客户端连接数量为&#123;&#123; $value &#125;&#125;&quot; summary: &quot;redis连接数超过1000&quot; grafana导入模板quot;__inputs&quot;: [ &#123; &quot;name&quot;: &quot;DS_PROMETHEUS&quot;, &quot;label&quot;: &quot;Prometheus&quot;, &quot;description&quot;: &quot;&quot;, &quot;type&quot;: &quot;datasource&quot;, &quot;pluginId&quot;: &quot;prometheus&quot;, &quot;pluginName&quot;: &quot;Prometheus&quot; &#125; ], &quot;__requires&quot;: [ &#123; &quot;type&quot;: &quot;grafana&quot;, &quot;id&quot;: &quot;grafana&quot;, &quot;name&quot;: &quot;Grafana&quot;, &quot;version&quot;: &quot;5.4.3&quot; &#125;, &#123; &quot;type&quot;: &quot;panel&quot;, &quot;id&quot;: &quot;graph&quot;, &quot;name&quot;: &quot;Graph&quot;, &quot;version&quot;: &quot;5.0.0&quot; &#125;, &#123; &quot;type&quot;: &quot;datasource&quot;, &quot;id&quot;: &quot;prometheus&quot;, &quot;name&quot;: &quot;Prometheus&quot;, &quot;version&quot;: &quot;5.0.0&quot; &#125;, &#123; &quot;type&quot;: &quot;panel&quot;, &quot;id&quot;: &quot;singlestat&quot;, &quot;name&quot;: &quot;Singlestat&quot;, &quot;version&quot;: &quot;5.0.0&quot; &#125; ], &quot;annotations&quot;: &#123; &quot;list&quot;: [ &#123; &quot;builtIn&quot;: 1, &quot;datasource&quot;: &quot;-- Grafana --&quot;, &quot;enable&quot;: true, &quot;hide&quot;: true, &quot;iconColor&quot;: &quot;rgba(0, 211, 255, 1)&quot;, &quot;name&quot;: &quot;Annotations &amp; Alerts&quot;, &quot;type&quot;: &quot;dashboard&quot; &#125; ] &#125;, &quot;description&quot;: &quot;Prometheus dashboard for Redis servers&quot;, &quot;editable&quot;: true, &quot;gnetId&quot;: 2751, &quot;graphTooltip&quot;: 0, &quot;id&quot;: null, &quot;iteration&quot;: 1564967488877, &quot;links&quot;: [], &quot;panels&quot;: [ &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: false, &quot;colors&quot;: [ &quot;rgba(41, 200, 35, 0.97)&quot;, &quot;rgba(237, 129, 40, 0.89)&quot;, &quot;rgba(245, 54, 54, 0.9)&quot; ], &quot;datasource&quot;: &quot;$&#123;DS_PROMETHEUS&#125;&quot;, &quot;decimals&quot;: 0, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;format&quot;: &quot;s&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;gridPos&quot;: &#123; &quot;h&quot;: 7, &quot;w&quot;: 4, &quot;x&quot;: 0, &quot;y&quot;: 0 &#125;, &quot;id&quot;: 9, &quot;interval&quot;: null, &quot;isNew&quot;: true, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: false, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: false &#125;, &quot;tableColumn&quot;: &quot;__name__&quot;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;redis_uptime_in_seconds&#123;instance=\&quot;$instance\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;interval&quot;: &quot;&quot;, &quot;intervalFactor&quot;: 2, &quot;legendFormat&quot;: &quot;&quot;, &quot;metric&quot;: &quot;&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 1800 &#125; ], &quot;thresholds&quot;: &quot;&quot;, &quot;title&quot;: &quot;Redis Uptime&quot;, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;70%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;avg&quot; &#125;, &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: false, &quot;colors&quot;: [ &quot;rgba(245, 54, 54, 0.9)&quot;, &quot;rgba(237, 129, 40, 0.89)&quot;, &quot;rgba(50, 172, 45, 0.97)&quot; ], &quot;datasource&quot;: &quot;$&#123;DS_PROMETHEUS&#125;&quot;, &quot;decimals&quot;: 0, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;format&quot;: &quot;none&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;gridPos&quot;: &#123; &quot;h&quot;: 7, &quot;w&quot;: 4, &quot;x&quot;: 4, &quot;y&quot;: 0 &#125;, &quot;hideTimeOverride&quot;: true, &quot;id&quot;: 12, &quot;interval&quot;: null, &quot;isNew&quot;: true, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: false, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: true &#125;, &quot;tableColumn&quot;: &quot;&quot;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;redis_connected_clients&#123;instance=\&quot;$instance\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;intervalFactor&quot;: 2, &quot;legendFormat&quot;: &quot;&quot;, &quot;metric&quot;: &quot;&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 2 &#125; ], &quot;thresholds&quot;: &quot;&quot;, &quot;timeFrom&quot;: &quot;1m&quot;, &quot;timeShift&quot;: null, &quot;title&quot;: &quot;Clients&quot;, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;80%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;current&quot; &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;dashLength&quot;: 10, &quot;dashes&quot;: false, &quot;datasource&quot;: &quot;$&#123;DS_PROMETHEUS&#125;&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;fill&quot;: 1, &quot;grid&quot;: &#123;&#125;, &quot;gridPos&quot;: &#123; &quot;h&quot;: 7, &quot;w&quot;: 8, &quot;x&quot;: 8, &quot;y&quot;: 0 &#125;, &quot;id&quot;: 2, &quot;isNew&quot;: true, &quot;legend&quot;: &#123; &quot;avg&quot;: false, &quot;current&quot;: false, &quot;max&quot;: false, &quot;min&quot;: false, &quot;show&quot;: false, &quot;total&quot;: false, &quot;values&quot;: false &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 2, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [], &quot;spaceLength&quot;: 10, &quot;stack&quot;: false, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;rate(redis_commands_processed_total&#123;instance=~\&quot;$instance\&quot;&#125;[5m])&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;interval&quot;: &quot;&quot;, &quot;intervalFactor&quot;: 2, &quot;legendFormat&quot;: &quot;&quot;, &quot;metric&quot;: &quot;A&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 240, &quot;target&quot;: &quot;&quot; &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeRegions&quot;: [], &quot;timeShift&quot;: null, &quot;title&quot;: &quot;Commands Executed / sec&quot;, &quot;tooltip&quot;: &#123; &quot;msResolution&quot;: false, &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;cumulative&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;buckets&quot;: null, &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125; ], &quot;yaxis&quot;: &#123; &quot;align&quot;: false, &quot;alignLevel&quot;: null &#125; &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;dashLength&quot;: 10, &quot;dashes&quot;: false, &quot;datasource&quot;: &quot;$&#123;DS_PROMETHEUS&#125;&quot;, &quot;decimals&quot;: 2, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;fill&quot;: 1, &quot;grid&quot;: &#123;&#125;, &quot;gridPos&quot;: &#123; &quot;h&quot;: 7, &quot;w&quot;: 8, &quot;x&quot;: 16, &quot;y&quot;: 0 &#125;, &quot;id&quot;: 1, &quot;isNew&quot;: true, &quot;legend&quot;: &#123; &quot;avg&quot;: false, &quot;current&quot;: false, &quot;max&quot;: false, &quot;min&quot;: false, &quot;show&quot;: false, &quot;total&quot;: false, &quot;values&quot;: false &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 2, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;percentage&quot;: true, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [], &quot;spaceLength&quot;: 10, &quot;stack&quot;: false, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;irate(redis_keyspace_hits_total&#123;instance=\&quot;$instance\&quot;&#125;[5m])&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;hide&quot;: false, &quot;interval&quot;: &quot;&quot;, &quot;intervalFactor&quot;: 2, &quot;legendFormat&quot;: &quot;hits&quot;, &quot;metric&quot;: &quot;&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 240, &quot;target&quot;: &quot;&quot; &#125;, &#123; &quot;expr&quot;: &quot;irate(redis_keyspace_misses_total&#123;instance=\&quot;$instance\&quot;&#125;[5m])&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;hide&quot;: false, &quot;interval&quot;: &quot;&quot;, &quot;intervalFactor&quot;: 2, &quot;legendFormat&quot;: &quot;misses&quot;, &quot;metric&quot;: &quot;&quot;, &quot;refId&quot;: &quot;B&quot;, &quot;step&quot;: 240, &quot;target&quot;: &quot;&quot; &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeRegions&quot;: [], &quot;timeShift&quot;: null, &quot;title&quot;: &quot;Hits / Misses per Sec&quot;, &quot;tooltip&quot;: &#123; &quot;msResolution&quot;: false, &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;buckets&quot;: null, &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: &quot;&quot;, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: 0, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125; ], &quot;yaxis&quot;: &#123; &quot;align&quot;: false, &quot;alignLevel&quot;: null &#125; &#125;, &#123; &quot;aliasColors&quot;: &#123; &quot;max&quot;: &quot;#BF1B00&quot; &#125;, &quot;bars&quot;: false, &quot;dashLength&quot;: 10, &quot;dashes&quot;: false, &quot;datasource&quot;: &quot;$&#123;DS_PROMETHEUS&#125;&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;fill&quot;: 1, &quot;grid&quot;: &#123;&#125;, &quot;gridPos&quot;: &#123; &quot;h&quot;: 7, &quot;w&quot;: 12, &quot;x&quot;: 0, &quot;y&quot;: 7 &#125;, &quot;id&quot;: 7, &quot;isNew&quot;: true, &quot;legend&quot;: &#123; &quot;avg&quot;: false, &quot;current&quot;: false, &quot;hideEmpty&quot;: false, &quot;hideZero&quot;: false, &quot;max&quot;: false, &quot;min&quot;: false, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: false &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 2, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;null as zero&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [], &quot;spaceLength&quot;: 10, &quot;stack&quot;: false, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;redis_memory_used_bytes&#123;instance=~\&quot;$instance\&quot;&#125; &quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;intervalFactor&quot;: 2, &quot;legendFormat&quot;: &quot;used&quot;, &quot;metric&quot;: &quot;&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 240, &quot;target&quot;: &quot;&quot; &#125;, &#123; &quot;expr&quot;: &quot;redis_config_maxmemory&#123;instance=~\&quot;$instance\&quot;&#125; &quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;hide&quot;: false, &quot;intervalFactor&quot;: 2, &quot;legendFormat&quot;: &quot;max&quot;, &quot;refId&quot;: &quot;B&quot;, &quot;step&quot;: 240 &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeRegions&quot;: [], &quot;timeShift&quot;: null, &quot;title&quot;: &quot;Total Memory Usage&quot;, &quot;tooltip&quot;: &#123; &quot;msResolution&quot;: false, &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;cumulative&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;buckets&quot;: null, &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;bytes&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: 0, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125; ], &quot;yaxis&quot;: &#123; &quot;align&quot;: false, &quot;alignLevel&quot;: null &#125; &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;dashLength&quot;: 10, &quot;dashes&quot;: false, &quot;datasource&quot;: &quot;$&#123;DS_PROMETHEUS&#125;&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;fill&quot;: 1, &quot;grid&quot;: &#123;&#125;, &quot;gridPos&quot;: &#123; &quot;h&quot;: 7, &quot;w&quot;: 12, &quot;x&quot;: 12, &quot;y&quot;: 7 &#125;, &quot;id&quot;: 10, &quot;isNew&quot;: true, &quot;legend&quot;: &#123; &quot;avg&quot;: false, &quot;current&quot;: false, &quot;max&quot;: false, &quot;min&quot;: false, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: false &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 2, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [], &quot;spaceLength&quot;: 10, &quot;stack&quot;: false, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;rate(redis_net_input_bytes_total&#123;instance=\&quot;$instance\&quot;&#125;[5m])&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;intervalFactor&quot;: 2, &quot;legendFormat&quot;: &quot;&#123;&#123; input &#125;&#125;&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 240 &#125;, &#123; &quot;expr&quot;: &quot;rate(redis_net_output_bytes_total&#123;instance=\&quot;$instance\&quot;&#125;[5m])&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;interval&quot;: &quot;&quot;, &quot;intervalFactor&quot;: 2, &quot;legendFormat&quot;: &quot;&#123;&#123; output &#125;&#125;&quot;, &quot;refId&quot;: &quot;B&quot;, &quot;step&quot;: 240 &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeRegions&quot;: [], &quot;timeShift&quot;: null, &quot;title&quot;: &quot;Network I/O&quot;, &quot;tooltip&quot;: &#123; &quot;msResolution&quot;: true, &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;cumulative&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;buckets&quot;: null, &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;bytes&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125; ], &quot;yaxis&quot;: &#123; &quot;align&quot;: false, &quot;alignLevel&quot;: null &#125; &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;dashLength&quot;: 10, &quot;dashes&quot;: false, &quot;datasource&quot;: &quot;$&#123;DS_PROMETHEUS&#125;&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;fill&quot;: 7, &quot;grid&quot;: &#123;&#125;, &quot;gridPos&quot;: &#123; &quot;h&quot;: 7, &quot;w&quot;: 12, &quot;x&quot;: 0, &quot;y&quot;: 14 &#125;, &quot;id&quot;: 5, &quot;isNew&quot;: true, &quot;legend&quot;: &#123; &quot;alignAsTable&quot;: true, &quot;avg&quot;: false, &quot;current&quot;: true, &quot;max&quot;: false, &quot;min&quot;: false, &quot;rightSide&quot;: true, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: true &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 2, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [], &quot;spaceLength&quot;: 10, &quot;stack&quot;: true, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;sum (redis_db_keys&#123;instance=~\&quot;$instance\&quot;&#125;) by (db)&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;interval&quot;: &quot;&quot;, &quot;intervalFactor&quot;: 2, &quot;legendFormat&quot;: &quot;&#123;&#123; db &#125;&#125; &quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 240, &quot;target&quot;: &quot;&quot; &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeRegions&quot;: [], &quot;timeShift&quot;: null, &quot;title&quot;: &quot;Total Items per DB&quot;, &quot;tooltip&quot;: &#123; &quot;msResolution&quot;: false, &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;buckets&quot;: null, &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;none&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125; ], &quot;yaxis&quot;: &#123; &quot;align&quot;: false, &quot;alignLevel&quot;: null &#125; &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;dashLength&quot;: 10, &quot;dashes&quot;: false, &quot;datasource&quot;: &quot;$&#123;DS_PROMETHEUS&#125;&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;fill&quot;: 7, &quot;grid&quot;: &#123;&#125;, &quot;gridPos&quot;: &#123; &quot;h&quot;: 7, &quot;w&quot;: 12, &quot;x&quot;: 12, &quot;y&quot;: 14 &#125;, &quot;id&quot;: 13, &quot;isNew&quot;: true, &quot;legend&quot;: &#123; &quot;avg&quot;: false, &quot;current&quot;: false, &quot;max&quot;: false, &quot;min&quot;: false, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: false &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 2, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [], &quot;spaceLength&quot;: 10, &quot;stack&quot;: true, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;sum (redis_db_keys&#123;instance=~\&quot;$instance\&quot;&#125;) - sum (redis_db_keys_expiring&#123;instance=~\&quot;$instance\&quot;&#125;) &quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;interval&quot;: &quot;&quot;, &quot;intervalFactor&quot;: 2, &quot;legendFormat&quot;: &quot;not expiring&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 240, &quot;target&quot;: &quot;&quot; &#125;, &#123; &quot;expr&quot;: &quot;sum (redis_db_keys_expiring&#123;instance=~\&quot;$instance\&quot;&#125;) &quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;interval&quot;: &quot;&quot;, &quot;intervalFactor&quot;: 2, &quot;legendFormat&quot;: &quot;expiring&quot;, &quot;metric&quot;: &quot;&quot;, &quot;refId&quot;: &quot;B&quot;, &quot;step&quot;: 240 &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeRegions&quot;: [], &quot;timeShift&quot;: null, &quot;title&quot;: &quot;Expiring vs Not-Expiring Keys&quot;, &quot;tooltip&quot;: &#123; &quot;msResolution&quot;: false, &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;buckets&quot;: null, &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125; ], &quot;yaxis&quot;: &#123; &quot;align&quot;: false, &quot;alignLevel&quot;: null &#125; &#125;, &#123; &quot;aliasColors&quot;: &#123; &quot;evicts&quot;: &quot;#890F02&quot;, &quot;memcached_items_evicted_total&#123;instance=\&quot;172.17.0.1:9150\&quot;,job=\&quot;prometheus\&quot;&#125;&quot;: &quot;#890F02&quot;, &quot;reclaims&quot;: &quot;#3F6833&quot; &#125;, &quot;bars&quot;: false, &quot;dashLength&quot;: 10, &quot;dashes&quot;: false, &quot;datasource&quot;: &quot;$&#123;DS_PROMETHEUS&#125;&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;fill&quot;: 1, &quot;grid&quot;: &#123;&#125;, &quot;gridPos&quot;: &#123; &quot;h&quot;: 7, &quot;w&quot;: 12, &quot;x&quot;: 0, &quot;y&quot;: 21 &#125;, &quot;id&quot;: 8, &quot;isNew&quot;: true, &quot;legend&quot;: &#123; &quot;avg&quot;: false, &quot;current&quot;: false, &quot;max&quot;: false, &quot;min&quot;: false, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: false &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 2, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [ &#123; &quot;alias&quot;: &quot;reclaims&quot;, &quot;yaxis&quot;: 2 &#125; ], &quot;spaceLength&quot;: 10, &quot;stack&quot;: false, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;sum(rate(redis_expired_keys_total&#123;instance=~\&quot;$instance\&quot;&#125;[5m])) by (instance)&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;interval&quot;: &quot;&quot;, &quot;intervalFactor&quot;: 2, &quot;legendFormat&quot;: &quot;expired&quot;, &quot;metric&quot;: &quot;&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 240, &quot;target&quot;: &quot;&quot; &#125;, &#123; &quot;expr&quot;: &quot;sum(rate(redis_evicted_keys_total&#123;instance=~\&quot;$instance\&quot;&#125;[5m])) by (instance)&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;interval&quot;: &quot;&quot;, &quot;intervalFactor&quot;: 2, &quot;legendFormat&quot;: &quot;evicted&quot;, &quot;refId&quot;: &quot;B&quot;, &quot;step&quot;: 240 &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeRegions&quot;: [], &quot;timeShift&quot;: null, &quot;title&quot;: &quot;Expired / Evicted&quot;, &quot;tooltip&quot;: &#123; &quot;msResolution&quot;: false, &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;cumulative&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;buckets&quot;: null, &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125; ], &quot;yaxis&quot;: &#123; &quot;align&quot;: false, &quot;alignLevel&quot;: null &#125; &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;dashLength&quot;: 10, &quot;dashes&quot;: false, &quot;datasource&quot;: &quot;$&#123;DS_PROMETHEUS&#125;&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;fill&quot;: 8, &quot;grid&quot;: &#123;&#125;, &quot;gridPos&quot;: &#123; &quot;h&quot;: 7, &quot;w&quot;: 12, &quot;x&quot;: 12, &quot;y&quot;: 21 &#125;, &quot;id&quot;: 14, &quot;isNew&quot;: true, &quot;legend&quot;: &#123; &quot;avg&quot;: false, &quot;current&quot;: false, &quot;max&quot;: false, &quot;min&quot;: false, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: false &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 1, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [], &quot;spaceLength&quot;: 10, &quot;stack&quot;: true, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;topk(5, irate(redis_commands_duration_seconds_total&#123;instance=~\&quot;$instance\&quot;&#125; [1m]))&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;interval&quot;: &quot;&quot;, &quot;intervalFactor&quot;: 2, &quot;legendFormat&quot;: &quot;&#123;&#123; cmd &#125;&#125;&quot;, &quot;metric&quot;: &quot;redis_command_calls_total&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 240 &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeRegions&quot;: [], &quot;timeShift&quot;: null, &quot;title&quot;: &quot;Command Calls / sec&quot;, &quot;tooltip&quot;: &#123; &quot;msResolution&quot;: true, &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;cumulative&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;buckets&quot;: null, &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125; ], &quot;yaxis&quot;: &#123; &quot;align&quot;: false, &quot;alignLevel&quot;: null &#125; &#125; ], &quot;refresh&quot;: &quot;30s&quot;, &quot;schemaVersion&quot;: 16, &quot;style&quot;: &quot;dark&quot;, &quot;tags&quot;: [ &quot;prometheus&quot;, &quot;redis&quot; ], &quot;templating&quot;: &#123; &quot;list&quot;: [ &#123; &quot;allValue&quot;: null, &quot;current&quot;: &#123;&#125;, &quot;datasource&quot;: &quot;$&#123;DS_PROMETHEUS&#125;&quot;, &quot;definition&quot;: &quot;label_values(redis_connected_clients, instance)&quot;, &quot;hide&quot;: 0, &quot;includeAll&quot;: false, &quot;label&quot;: null, &quot;multi&quot;: false, &quot;name&quot;: &quot;instance&quot;, &quot;options&quot;: [], &quot;query&quot;: &quot;label_values(redis_connected_clients, instance)&quot;, &quot;refresh&quot;: 1, &quot;regex&quot;: &quot;&quot;, &quot;skipUrlSync&quot;: false, &quot;sort&quot;: 0, &quot;tagValuesQuery&quot;: &quot;&quot;, &quot;tags&quot;: [], &quot;tagsQuery&quot;: &quot;&quot;, &quot;type&quot;: &quot;query&quot;, &quot;useTags&quot;: false &#125; ] &#125;, &quot;time&quot;: &#123; &quot;from&quot;: &quot;now-15m&quot;, &quot;to&quot;: &quot;now&quot; &#125;, &quot;timepicker&quot;: &#123; &quot;refresh_intervals&quot;: [ &quot;5s&quot;, &quot;10s&quot;, &quot;30s&quot;, &quot;1m&quot;, &quot;5m&quot;, &quot;15m&quot;, &quot;30m&quot;, &quot;1h&quot;, &quot;2h&quot;, &quot;1d&quot; ], &quot;time_options&quot;: [ &quot;5m&quot;, &quot;15m&quot;, &quot;1h&quot;, &quot;6h&quot;, &quot;12h&quot;, &quot;24h&quot;, &quot;2d&quot;, &quot;7d&quot;, &quot;30d&quot; ] &#125;, &quot;timezone&quot;: &quot;browser&quot;, &quot;title&quot;: &quot;Redis cluster&quot;, &quot;uid&quot;: &quot;ekHEbFvWk&quot;, &quot;version&quot;: 9&#125;]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[prometheus监控mysql集群]]></title>
    <url>%2Fposts%2F24jdja99.html</url>
    <content type="text"><![CDATA[安装mysql_exporter12345678910111213141516171819cd /usr/localwget https://github.com/prometheus/mysqld_exporter/releases/download/v0.12.1/mysqld_exporter-0.12.1.linux-amd64.tar.gztar -zxvf mysqld_exporter-0.12.1.linux-amd64.tar.gzmv mysqld_exporter-0.12.1.linux-amd64 mysqld_exportermysql的pxc集群添加账号密码：GRANT REPLICATION CLIENT, PROCESS ON . TO &apos;exporter&apos;@&apos;localhost&apos; identified by &apos;123456&apos;;GRANT SELECT ON performance_schema.* TO &apos;exporter&apos;@&apos;localhost&apos;;flush privileges;[root@pxc1 mysqld_exporter]# cat .my.cnf [client]host=192.168.7.201user=exporterpassword=123456启动：nohup ./mysqld_exporter --config.my-cnf=.my.cnf &amp; prometheus配置12345678910111213141516171819202122232425262728293031323334353637383940414243 - job_name: &apos;mysql-cluster&apos; static_configs: - targets: - &apos;192.168.7.201:9104&apos; - &apos;192.168.7.202:9104&apos; - &apos;192.168.7.203:9104&apos; 报警：############ mysql 监控 ############ - alert: MySQLGaleraNotReady expr: mysql_global_status_wsrep_ready != 1 for: 5m labels: severity: warning annotations: description: &quot;&#123;&#123;$labels.job&#125;&#125; on &#123;&#123;$labels.instance&#125;&#125; is not ready.&quot; summary: &quot;Galera cluster node not ready&quot; - alert: MySQLGaleraOutOfSync expr: (mysql_global_status_wsrep_local_state != 4 and mysql_global_variables_wsrep_desync == 0) for: 5m labels: severity: warning annotations: description: &quot;&#123;&#123;$labels.job&#125;&#125; on &#123;&#123;$labels.instance&#125;&#125; is not in sync (&#123;&#123;$value&#125;&#125;!= 4).&quot; summary: &quot;Galera cluster node out of sync&quot; - alert: MySQL is down expr: mysql_up == 0 for: 1m labels: severity: critical annotations: description: &quot;Instance &#123;&#123; $labels.instance &#125;&#125; MySQL is down&quot; summary: &quot;MySQL database is down. This requires immediate action!&quot; - alert: MySql 连接数超过最大连接数的80% expr: mysql_global_status_max_used_connections &gt; mysql_global_variables_max_connections * 0.8 for: 2m labels: severity: warning annotations: description: &quot;Instance &#123;&#123; $labels.instance &#125;&#125; Used more than 80% of max connections limited&quot; summary: &quot;Used more than 80% of max connections limited&quot; grafana导入模板https://grafana.com/grafana/dashboards/7362 mysqlhttps://grafana.com/grafana/dashboards/7377 pxc]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[jenkins的pipeline]]></title>
    <url>%2Fposts%2Fdld541al.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s部署jenkins动态slave]]></title>
    <url>%2Fposts%2Fdkkd644a.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[pxc集群部署]]></title>
    <url>%2Fposts%2Fdlfl674a.html</url>
    <content type="text"><![CDATA[pxc介绍​ galera产品是以galera cluster方式为mysql提高高可用集群解决方案的。galera cluster就是集成了galera插件的mysql集群。galera replication是codership提供的mysql数据同步方案，具有高可用性，方便扩展，并且可以实现多个mysql节点间的数据同步复制与读写，可保障数据库的服务高可用及数据强一致性。 ​ PXC属于一套近乎完美的mysql高可用集群解决方案，相比那些比较传统的基于主从复制模式的集群架构MHA和MM+keepalived，galera cluster最突出特点就是解决了诟病已久的数据复制延迟问题，基本上可以达到实时同步。而且节点与节点之间，他们相互的关系是对等的。本身galera cluster也是一种多主架构。galera cluster最关注的是数据的一致性，对待事物的行为时，要么在所有节点上执行，要么都不执行，它的实现机制决定了它对待一致性的行为非常严格，这也能非常完美的保证MySQL集群的数据一致性； ​ 对galera cluster的封装有两个，虽然名称不同，但实质都是一样的，使用的都是galera cluster。一个MySQL的创始人在自己全新的MariaDB上实现的MAriaDB cluster；一个是著名的MySQL服务和工具提供商percona实现的percona xtradb cluster，简称PXC 。 ​ 要搭建PXC架构至少需要3个mysql实例来组成一个集群，三个实例之间不是主从模式，而是各自为主，所以三者是对等关系，不分从属，这就叫multi-master架构。客户端写入和读取数据时，连接哪个实例都是一样的。读取到的数据时相同的，写入任意一个实例之后，集群自己会将新写入的数据同步到其他实例上，这种架构不共享任何数据，是一种高冗余架构。 部署部署准备工作 主机名 IP pxc1 192.168.6.201 192.168.6.200 pxc2 192.168.6.202 pxc3 192.168.6.203 关防火墙、selinux、ntp时间同步 安装pxcrpm安装123456789##安装yum源 yum install https://repo.percona.com/yum/percona-release-latest.noarch.rpm ##定位到pxc57的仓库 percona-release setup pxc57 #解压 tar vxf Percona-XtraBackup-2.4.14-ref675d4-el7-x86_64-bundle.tar tar vxf Percona-XtraDB-Cluster-5.7.25-31.35-r463-el7-x86_64-bundle.tar ##安装rpm包用yum localinstall 命令率先从本地安装，并根据本地rpm包会在线寻找未安装的依赖(pxc官网下载的安装包会依赖其他包) yum localinstall *.rpm 分别在三个节点创建数据存储目录123456mkdir -p /data/local/percona-xtradb-cluster/datachown -R mysql:mysql /data/local/percona-xtradb-cluster/datamkdir -p /data/local/percona-xtradb-cluster/runchown -R mysql:mysql /data/local/percona-xtradb-cluster/runmkdir -p /data/logs/mysqlchown -R mysql:mysql /data/logs/mysql 修改/etc/my.cnf配置文件，其他两台节点需要修改server_id和wsrep_node_addresspxc1： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960[root@pxc1 ~]# cat /etc/my.cnf[client]port = 3306socket = /data/local/percona-xtradb-cluster/run/mysql.sockdefault-character-set = utf8mb4[mysqld]user = mysqlinnodb_buffer_pool_size = 1024Mcharacter_set_server = utf8mb4datadir = /data/local/percona-xtradb-cluster/dataport = 3306server_id = 1socket = /data/local/percona-xtradb-cluster/run/mysql.sockpid-file = /data/local/percona-xtradb-cluster/run/mysql.pidlog-error = /data/logs/mysql/error.loglog_warnings = 2slow_query_log_file = /data/logs/mysql/slow.loglong_query_time = 2log_timestamps=SYSTEMlower_case_table_names = 1key_buffer_size = 1344Mevent_scheduler=ONsql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLESwsrep_provider=/usr/lib64/libgalera_smm.sowsrep_cluster_address=gcomm://192.168.6.201,192.168.6.202,192.168.6.203binlog_format=ROWpxc_strict_mode=PERMISSIVEmax_connect_errors=1000max_allowed_packet = 1024Mdefault_storage_engine=InnoDB#Innodbinnodb_flush_method = O_DIRECTinnodb_log_files_in_group = 5innodb_lock_wait_timeout = 50innodb_log_file_size = 1024Minnodb_flush_log_at_trx_commit = 1innodb_file_per_table = 1innodb_thread_concurrency = 8innodb_buffer_pool_size = 5Ginnodb_read_io_threads = 24innodb_write_io_threads = 24log_bin_trust_function_creators=1innodb_autoinc_lock_mode=2innodb_locks_unsafe_for_binlog=1# CACHES AND LIMITS #tmp_table_size = 32Mmax_heap_table_size = 32Mmax_connections = 1000thread_cache_size = 50open_files_limit = 65535table_definition_cache = 4096table_open_cache = 5000#wsrepwsrep_retry_autocommit=1wsrep_auto_increment_control=1wsrep_node_name = pxc1wsrep_node_address=192.168.6.201wsrep_sst_method=xtrabackup-v2wsrep_cluster_name=pxcwsrep_sst_auth=&quot;sstuser:secret&quot; pxc2： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960[root@pxc2 ~]# cat /etc/my.cnf[client]port = 3306socket = /data/local/percona-xtradb-cluster/run/mysql.sockdefault-character-set = utf8mb4[mysqld]user = mysqlinnodb_buffer_pool_size = 1024Mcharacter_set_server = utf8mb4datadir = /data/local/percona-xtradb-cluster/dataport = 3306server_id = 2socket = /data/local/percona-xtradb-cluster/run/mysql.sockpid-file = /data/local/percona-xtradb-cluster/run/mysql.pidlog-error = /data/logs/mysql/error.loglog_warnings = 2slow_query_log_file = /data/logs/mysql/slow.loglong_query_time = 2log_timestamps=SYSTEMlower_case_table_names = 1key_buffer_size = 1344Mevent_scheduler=ONsql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLESwsrep_provider=/usr/lib64/libgalera_smm.sowsrep_cluster_address=gcomm://192.168.6.201,192.168.6.202,192.168.6.203binlog_format=ROWpxc_strict_mode=PERMISSIVEmax_connect_errors=1000max_allowed_packet = 1024Mdefault_storage_engine=InnoDB#Innodbinnodb_flush_method = O_DIRECTinnodb_log_files_in_group = 5innodb_lock_wait_timeout = 50innodb_log_file_size = 1024Minnodb_flush_log_at_trx_commit = 1innodb_file_per_table = 1innodb_thread_concurrency = 8innodb_buffer_pool_size = 5Ginnodb_read_io_threads = 24innodb_write_io_threads = 24log_bin_trust_function_creators=1innodb_autoinc_lock_mode=2innodb_locks_unsafe_for_binlog=1# CACHES AND LIMITS #tmp_table_size = 32Mmax_heap_table_size = 32Mmax_connections = 1000thread_cache_size = 50open_files_limit = 65535table_definition_cache = 4096table_open_cache = 5000#wsrepwsrep_retry_autocommit=1wsrep_auto_increment_control=1wsrep_node_name = pxc2wsrep_node_address=192.168.6.202wsrep_sst_method=xtrabackup-v2wsrep_cluster_name=pxcwsrep_sst_auth=&quot;sstuser:secret&quot; pxc3: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960[root@pxc3 ~]# cat /etc/my.cnf[client]port = 3306socket = /data/local/percona-xtradb-cluster/run/mysql.sockdefault-character-set = utf8mb4[mysqld]user = mysqlinnodb_buffer_pool_size = 1024Mcharacter_set_server = utf8mb4datadir = /data/local/percona-xtradb-cluster/dataport = 3306server_id = 3socket = /data/local/percona-xtradb-cluster/run/mysql.sockpid-file = /data/local/percona-xtradb-cluster/run/mysql.pidlog-error = /data/logs/mysql/error.loglog_warnings = 2slow_query_log_file = /data/logs/mysql/slow.loglong_query_time = 2log_timestamps=SYSTEMlower_case_table_names = 1key_buffer_size = 1344Mevent_scheduler=ONsql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLESwsrep_provider=/usr/lib64/libgalera_smm.sowsrep_cluster_address=gcomm://192.168.6.201,192.168.6.202,192.168.6.203binlog_format=ROWpxc_strict_mode=PERMISSIVEmax_connect_errors=1000max_allowed_packet = 1024Mdefault_storage_engine=InnoDB#Innodbinnodb_flush_method = O_DIRECTinnodb_log_files_in_group = 5innodb_lock_wait_timeout = 50innodb_log_file_size = 1024Minnodb_flush_log_at_trx_commit = 1innodb_file_per_table = 1innodb_thread_concurrency = 8innodb_buffer_pool_size = 5Ginnodb_read_io_threads = 24innodb_write_io_threads = 24log_bin_trust_function_creators=1innodb_autoinc_lock_mode=2innodb_locks_unsafe_for_binlog=1# CACHES AND LIMITS #tmp_table_size = 32Mmax_heap_table_size = 32Mmax_connections = 1000thread_cache_size = 50open_files_limit = 65535table_definition_cache = 4096table_open_cache = 5000#wsrepwsrep_retry_autocommit=1wsrep_auto_increment_control=1wsrep_node_name = pxc3wsrep_node_address=192.168.6.203wsrep_sst_method=xtrabackup-v2wsrep_cluster_name=pxcwsrep_sst_auth=&quot;sstuser:secret&quot; 启动主节点： 1service mysql@bootstrap.service start 其他节点： 1service mysql start 启动第二个节点时遇到sst连接失败的问题1将wsrep.cnf 配置文件的wsrep_sst_method改为rsync,成功启动集群后停止集群，然后改回xtrabackup-v2,再启动集群节点。 修改密码1234567891011mysql5.7版本日志均在error.log 里面生成grep &quot;temporary password&quot; /data/logs/mysql/error.log使用改密码登陆MySQL，修改成自己想要的密码mysql&gt; alter user &apos;root&apos;@&apos;localhost&apos; idnetified by &apos;pxc&apos;;配置SST认证账号CREATE USER &apos;sstuser&apos;@&apos;192.168.%.%&apos; IDENTIFIED BY &apos;secret&apos;;GRANT RELOAD, LOCK TABLES, PROCESS, REPLICATION CLIENT ON *.* TO &apos;sstuser&apos;@&apos;192.168.%.%&apos;;FLUSH PRIVILEGES; 查看状态查看节点数： 1show global status like &apos;wsrep_cluster_size&apos;; 查看集群状态： 1show global status like &apos;wsrep%&apos;; 查看当前节点状态： 1show global status like &apos;wsrep_cluster_status&apos;; 安装keepalive1236.200为虚ip在192.168.6.201,6.202上yum -y install keepalived 主： 123456789101112131415161718192021222324252627282930313233343536[root@pxc1 ~]# cat /etc/keepalived/keepalived.conf global_defs &#123; router_id LVS_mysql&#125;vrrp_script Checkmysql &#123; script &quot;curl -k http://192.168.7.201:3306&quot; # vip interval 3 timeout 9 fall 2 rise 2&#125;vrrp_instance VI_1 &#123; state MASTER interface ens160 # 本地网卡名称 virtual_router_id 61 priority 120 # 权重,要唯一 advert_int 1 mcast_src_ip 192.168.7.201 # 本地IP nopreempt authentication &#123; auth_type PASS auth_pass sqP05dQgMSlzrxHj &#125; unicast_peer &#123; 192.168.7.202 192.168.7.203 &#125; virtual_ipaddress &#123; 192.168.7.200/24 # VIP &#125; track_script &#123; Checkmysql &#125;&#125; 从： 123456789101112131415161718192021222324252627282930313233343536[root@pxc2 ~]# cat /etc/keepalived/keepalived.conf global_defs &#123; router_id LVS_mysql&#125;vrrp_script Checkmysql &#123; script &quot;curl -k http://192.168.7.201:3306&quot; # vip interval 3 timeout 9 fall 2 rise 2&#125;vrrp_instance VI_1 &#123; state BACKUP interface ens160 # 本地网卡名称 virtual_router_id 61 priority 80 # 权重,要唯一 advert_int 1 mcast_src_ip 192.168.7.202 # 本地IP nopreempt authentication &#123; auth_type PASS auth_pass sqP05dQgMSlzrxHj &#125; unicast_peer &#123; 192.168.7.201 192.168.7.203 &#125; virtual_ipaddress &#123; 192.168.7.200/24 # VIP &#125; track_script &#123; Checkmysql &#125;&#125; 登录： 12345678910111213141516[root@pxc1 ~]# mysql -usstuser -psecret --host 192.168.6.200mysql: [Warning] Using a password on the command line interface can be insecure.Welcome to the MySQL monitor. Commands end with ; or \g.Your MySQL connection id is 1099Server version: 5.7.25-28-57 Percona XtraDB Cluster (GPL), Release rel28, Revision a2ef85f, WSREP version 31.35, wsrep_31.35Copyright (c) 2009-2019 Percona LLC and/or its affiliatesCopyright (c) 2000, 2019, Oracle and/or its affiliates. All rights reserved.Oracle is a registered trademark of Oracle Corporation and/or itsaffiliates. Other names may be trademarks of their respectiveowners.Type &apos;help;&apos; or &apos;\h&apos; for help. Type &apos;\c&apos; to clear the current input statement.mysql&gt;]]></content>
      <categories>
        <category>中间件</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s上用cephfs存储]]></title>
    <url>%2Fposts%2F0rfhdj22.html</url>
    <content type="text"><![CDATA[前言k8s对ceph rbd模式不支持ReadWriteMany（RWX）,为了满足k8s的灵活性需求,采用支持多点挂载的cephfs工作模式 安装ceph端123456ceph-deploy mds create ceph为cephfs创建存储池ceph osd pool create cephfs_data 8ceph osd pool create cephfs_metadata 8ceph fs new cephfs cephfs_metadata cephfs_data 查看： 12345678910111213141516171819[root@node1 ceph]# ceph fs lsname: cephfs, metadata pool: cephfs_metadata, data pools: [cephfs_data ][root@node1 ceph]# ceph -s cluster: id: cbc04385-1cdf-4512-a3f5-a5b3e8686a05 health: HEALTH_OK services: mon: 1 daemons, quorum ceph mgr: ceph(active) mds: cephfs-1/1/1 up &#123;0=ceph=up:active&#125; osd: 1 osds: 1 up, 1 in data: pools: 3 pools, 106 pgs objects: 73 objects, 137MiB usage: 3.82GiB used, 16.2GiB / 20.0GiB avail pgs: 106 active+clean k8s挂载ceph123456789101112131415161718192021222324[root@node1 ceph]# cat admin.secret AQA6EzBd5zAwIRAAgs+NyCjoAKuSrQKoFvQi9w==[root@node1 ceph]# mkdir /mnt/cephfs[root@node1 ceph]# mount -t ceph 192.168.6.101:6789:/ /mnt/cephfs -o name=admin,secretfile=/etc/ceph/admin.secret[root@node1 ceph]# df -hFilesystem Size Used Avail Use% Mounted ondevtmpfs 2.0G 0 2.0G 0% /devtmpfs 2.0G 0 2.0G 0% /dev/shmtmpfs 2.0G 198M 1.8G 10% /runtmpfs 2.0G 0 2.0G 0% /sys/fs/cgroup/dev/mapper/cl-root 36G 12G 24G 34% //dev/sda1 1014M 216M 799M 22% /boottmpfs 2.0G 12K 2.0G 1% /data/k8s/k8s/kubelet/pods/42d3eb88-aaba-11e9-b1ef-005056b1d2de/volumes/kubernetes.io~secret/coredns-token-qklgjoverlay 36G 12G 24G 34% /data/k8s/docker/data/overlay2/f651aa6ff6070b5a3acb8ba0e8d810a1d699a7853e0d3df802851fa64fc2c029/mergedshm 64M 0 64M 0% /data/k8s/docker/data/containers/531654eae411cc84ed7ed3c2d5e60afa2bd68cca57cf821636369be5869f6f7d/mounts/shmtmpfs 2.0G 12K 2.0G 1% /data/k8s/k8s/kubelet/pods/4eb99bd2-aaba-11e9-b1ef-005056b1d2de/volumes/kubernetes.io~secret/default-token-npj5xoverlay 36G 12G 24G 34% /data/k8s/docker/data/overlay2/1707081196a127bbf0f46f57a9a6831c8f6d87a6f92dad5a578375d24eb41580/mergedshm 64M 0 64M 0% /data/k8s/docker/data/containers/b6b70ef43252b12414afc08562ceb4002467ff700acb01941dce73cf9e40d88a/mounts/shmoverlay 36G 12G 24G 34% /data/k8s/docker/data/overlay2/3ccf15f58beb54a2b59ab2c5c421ac3a8f3f2d5896b5b12430a8f672783eeb84/mergedtmpfs 396M 0 396M 0% /run/user/0192.168.6.101:6789:/ 20G 3.9G 17G 20% /mnt/cephfs 创建secret1234567[root@node1 ceph]# cat cephfs-secret.yaml apiVersion: v1kind: Secretmetadata: name: ceph-secretdata: key: QVFBNkV6QmQ1ekF3SVJBQWdzK055Q2pvQUt1U3JRS29GdlFpOXc9PQ== pv1234567891011121314151617181920[root@node1 ceph]# cat cephfs-pv.yaml apiVersion: v1kind: PersistentVolumemetadata: name: cephfs-pv labels: pv: cephfs-pvspec: capacity: storage: 1Gi accessModes: - ReadWriteMany cephfs: monitors: - 192.168.6.101:6789 user: admin secretRef: name: ceph-secret readOnly: false persistentVolumeReclaimPolicy: Delete pvc1234567891011121314[root@node1 ceph]# cat cephfs-pvc.yaml kind: PersistentVolumeClaimapiVersion: v1metadata: name: cephfs-pvcspec: accessModes: - ReadWriteMany resources: requests: storage: 1Gi selector: matchLabels: pv: cephfs-pv]]></content>
      <categories>
        <category>ceph</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[rbd无法map]]></title>
    <url>%2Fposts%2Fdl9876la.html</url>
    <content type="text"><![CDATA[默认开启了rbd的一些属性12[root@ceph1 ~]# ceph --show-config|grep rbd|grep featuresrbd_default_features = 61 RBD属性表： 61的意思是上面图中的bit码相加得到的值对rbd进行内核的map操作 12345[root@ceph1 ~]# rbd map mytestrbd: sysfs write failedRBD image feature set mismatch. You can disable features unsupported by the kernel with &quot;rbd feature disable&quot;.In some cases useful info is found in syslog - try &quot;dmesg | tail&quot; or so.rbd: map failed: (6) No such device or address 根据提示查询打印的信息 12[root@ceph1 ~]# dmesg | tail[10440.462708] rbd: image mytest: image uses unsupported features: 0x3c 这个地方提示的很清楚了，不支持的属性0x3c，0x3c是16进制的数值，换算成10进制是3*16+12=6060的意思是不支持： 12332+16+8+4 = exclusive-lock, object-map, fast-diff, deep-flatten也就是不支持这些属性，现在动态关闭这些属性 关闭这些属性1rbd feature disable &#123;poolname&#125;/&#123;imagename&#125; &#123;feature&#125; 如果不想动态的关闭，那么在创建rbd之前，在配置文件中设置这个参数即可 1234567rbd_default_features = 3关于属性支持的，目前到内核4.6仍然只支持layering,striping = 1 + 2这两个属性]]></content>
      <categories>
        <category>ceph</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[prometheus监控ceph集群]]></title>
    <url>%2Fposts%2Fdk8973fg.html</url>
    <content type="text"><![CDATA[安装ceph_exporter1234567891011121314151617181920212223242526yum install golang -yyum install librados2-devel librbd1-devel -y# 配置go PATH环境变量：[root@ceph1 bin]# cat /etc/profile.d/go.sh export GOROOT=/usr/lib/golangexport GOBIN=$GOROOT/binexport GOPATH=/usr/local/goexport PATH=$PATH:$GOROOT/bin:$GOPATH/binsource /etc/profile.d/go.shmkdir /usr/local/go编译：mkdir -p /usr/local/go/src/github.com/digitaloceancd /usr/local/go/src/github.com/digitaloceangit clone https://github.com/digitalocean/ceph_exportercd ceph_exporter/go buildmkdir /usr/local/go/bincp ceph_exporter /usr/local/go/bin/cd /usr/local/bin/启动：nohup ./ceph_exporter &gt;&gt; ceph_exporter.log &amp; prometheus配置123456789- job_name: &apos;ceph-cluster&apos; static_configs: - targets: [&apos;192.168.7.31:9128&apos;] 重读配置./reload-prometheus.sh grafana导入模板https://grafana.com/dashboards/917 报警1234567891011121314151617############ ceph cluster 监控 ############- alert: Ceph OSD Down expr: ceph_osd_down &gt; 0 for: 2m labels: status: 监控osd annotations: description: &quot;&#123;&#123;$labels.instance&#125;&#125;: 有&#123;&#123; $value &#125;&#125;个OSD挂掉了&quot; summary: &quot;&#123;&#123;$labels.instance&#125;&#125;:&#123;&#123; $labels.osd &#125;&#125;当前状态为&#123;&#123; $labels.status &#125;&#125;&quot;- alert: 集群空间使用率 expr: ceph_cluster_used_bytes / ceph_cluster_capacity_bytes * 100 &gt; 80 for: 2m labels: status: 监控ceph集群空间 annotations: description: &quot;&#123;&#123;$labels.instance&#125;&#125;:集群空间不足&quot; summary: &quot;&#123;&#123;$labels.instance&#125;&#125;:当前空间使用率为&#123;&#123; $value &#125;&#125;&quot; grafana补充增加选集群变量以及osd、poolceph-clusterquot;annotations&quot;: &#123; &quot;list&quot;: [] &#125;, &quot;description&quot;: &quot;Ceph Cluster overview.\r\n&quot;, &quot;editable&quot;: true, &quot;gnetId&quot;: 917, &quot;graphTooltip&quot;: 0, &quot;hideControls&quot;: false, &quot;id&quot;: 20, &quot;links&quot;: [], &quot;refresh&quot;: &quot;1m&quot;, &quot;rows&quot;: [ &#123; &quot;collapse&quot;: false, &quot;height&quot;: &quot;150px&quot;, &quot;panels&quot;: [ &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: true, &quot;colors&quot;: [ &quot;rgba(245, 54, 54, 0.9)&quot;, &quot;rgba(237, 129, 40, 0.89)&quot;, &quot;rgba(50, 172, 45, 0.97)&quot; ], &quot;datasource&quot;: &quot;prometheus&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;format&quot;: &quot;none&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;id&quot;: 21, &quot;interval&quot;: &quot;1m&quot;, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;span&quot;: 2, &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: false, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: false &#125;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;ceph_health_status&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125; ], &quot;thresholds&quot;: &quot;1,0&quot;, &quot;title&quot;: &quot;Status&quot;, &quot;transparent&quot;: false, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;100%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125;, &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;HEALTHY&quot;, &quot;value&quot;: &quot;0&quot; &#125;, &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;WARNING&quot;, &quot;value&quot;: &quot;1&quot; &#125;, &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;ERROR&quot;, &quot;value&quot;: &quot;2&quot; &#125; ], &quot;valueName&quot;: &quot;current&quot; &#125;, &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: true, &quot;colors&quot;: [ &quot;rgba(245, 54, 54, 0.9)&quot;, &quot;rgba(237, 129, 40, 0.89)&quot;, &quot;rgba(50, 172, 45, 0.97)&quot; ], &quot;datasource&quot;: &quot;prometheus&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;format&quot;: &quot;none&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;id&quot;: 14, &quot;interval&quot;: &quot;1m&quot;, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;span&quot;: 2, &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: false, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: false &#125;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;ceph_monitor_quorum_count&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125; ], &quot;thresholds&quot;: &quot;2,3&quot;, &quot;title&quot;: &quot;Monitors In Quorum&quot;, &quot;transparent&quot;: false, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;100%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;current&quot; &#125;, &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: false, &quot;colors&quot;: [ &quot;rgba(245, 54, 54, 0.9)&quot;, &quot;rgba(237, 129, 40, 0.89)&quot;, &quot;rgba(50, 172, 45, 0.97)&quot; ], &quot;datasource&quot;: &quot;prometheus&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;format&quot;: &quot;none&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;id&quot;: 22, &quot;interval&quot;: &quot;1m&quot;, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;span&quot;: 2, &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: true, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: true &#125;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;count(ceph_pool_available_bytes&#123;job=\&quot;$export\&quot;&#125;)&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125; ], &quot;thresholds&quot;: &quot;&quot;, &quot;title&quot;: &quot;Pools&quot;, &quot;transparent&quot;: false, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;100%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;current&quot; &#125;, &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: false, &quot;colors&quot;: [ &quot;rgba(50, 172, 45, 0.97)&quot;, &quot;rgba(237, 129, 40, 0.89)&quot;, &quot;rgba(245, 54, 54, 0.9)&quot; ], &quot;datasource&quot;: &quot;prometheus&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;format&quot;: &quot;bytes&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;id&quot;: 33, &quot;interval&quot;: &quot;1m&quot;, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;span&quot;: 2, &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: true, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: true &#125;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;ceph_cluster_capacity_bytes&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125; ], &quot;thresholds&quot;: &quot;0.025,0.1&quot;, &quot;title&quot;: &quot;Cluster Capacity&quot;, &quot;transparent&quot;: false, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;100%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;current&quot; &#125;, &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: false, &quot;colors&quot;: [ &quot;rgba(50, 172, 45, 0.97)&quot;, &quot;rgba(237, 129, 40, 0.89)&quot;, &quot;rgba(245, 54, 54, 0.9)&quot; ], &quot;datasource&quot;: &quot;prometheus&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;format&quot;: &quot;bytes&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;id&quot;: 34, &quot;interval&quot;: &quot;1m&quot;, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;span&quot;: 2, &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: true, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: true &#125;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;ceph_cluster_used_bytes&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125; ], &quot;thresholds&quot;: &quot;0.025,0.1&quot;, &quot;title&quot;: &quot;Used Capacity&quot;, &quot;transparent&quot;: false, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;100%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;current&quot; &#125;, &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: true, &quot;colors&quot;: [ &quot;rgba(50, 172, 45, 0.97)&quot;, &quot;rgba(237, 129, 40, 0.89)&quot;, &quot;rgba(245, 54, 54, 0.9)&quot; ], &quot;datasource&quot;: &quot;prometheus&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;format&quot;: &quot;percentunit&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: true, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;id&quot;: 23, &quot;interval&quot;: &quot;1m&quot;, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;span&quot;: 2, &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: true, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: false &#125;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;ceph_cluster_available_bytes&#123;job=\&quot;$export\&quot;&#125;/ceph_cluster_capacity_bytes&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125; ], &quot;thresholds&quot;: &quot;70,80&quot;, &quot;title&quot;: &quot;Available Capacity&quot;, &quot;transparent&quot;: false, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;100%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;current&quot; &#125; ], &quot;repeat&quot;: null, &quot;repeatIteration&quot;: null, &quot;repeatRowId&quot;: null, &quot;showTitle&quot;: false, &quot;title&quot;: &quot;New row&quot;, &quot;titleSize&quot;: &quot;h6&quot; &#125;, &#123; &quot;collapse&quot;: false, &quot;height&quot;: &quot;100px&quot;, &quot;panels&quot;: [ &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: false, &quot;colors&quot;: [ &quot;rgba(245, 54, 54, 0.9)&quot;, &quot;rgba(237, 129, 40, 0.89)&quot;, &quot;rgba(50, 172, 45, 0.97)&quot; ], &quot;datasource&quot;: &quot;prometheus&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;format&quot;: &quot;none&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;id&quot;: 26, &quot;interval&quot;: null, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;span&quot;: 1, &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: false, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: false &#125;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;ceph_osds_in&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125; ], &quot;thresholds&quot;: &quot;&quot;, &quot;title&quot;: &quot;OSDs IN&quot;, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;80%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;current&quot; &#125;, &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: true, &quot;colorValue&quot;: false, &quot;colors&quot;: [ &quot;rgba(50, 172, 45, 0.97)&quot;, &quot;rgba(237, 40, 40, 0.89)&quot;, &quot;rgba(245, 54, 54, 0.9)&quot; ], &quot;datasource&quot;: &quot;prometheus&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;format&quot;: &quot;none&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;id&quot;: 27, &quot;interval&quot;: null, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;span&quot;: 1, &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: false, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: false &#125;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;ceph_osds - ceph_osds_in&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125; ], &quot;thresholds&quot;: &quot;1,1&quot;, &quot;title&quot;: &quot;OSDs OUT&quot;, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;80%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;current&quot; &#125;, &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: false, &quot;colors&quot;: [ &quot;rgba(245, 54, 54, 0.9)&quot;, &quot;rgba(237, 129, 40, 0.89)&quot;, &quot;rgba(50, 172, 45, 0.97)&quot; ], &quot;datasource&quot;: &quot;prometheus&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;format&quot;: &quot;none&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;id&quot;: 28, &quot;interval&quot;: null, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;span&quot;: 1, &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: false, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: false &#125;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;sum(ceph_osd_up&#123;job=\&quot;$export\&quot;&#125;)&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125; ], &quot;thresholds&quot;: &quot;&quot;, &quot;title&quot;: &quot;OSDs UP&quot;, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;80%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;current&quot; &#125;, &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: true, &quot;colorValue&quot;: false, &quot;colors&quot;: [ &quot;rgba(50, 172, 45, 0.97)&quot;, &quot;rgba(237, 40, 40, 0.89)&quot;, &quot;rgba(245, 54, 54, 0.9)&quot; ], &quot;datasource&quot;: &quot;prometheus&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;format&quot;: &quot;none&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;id&quot;: 29, &quot;interval&quot;: null, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;span&quot;: 1, &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: false, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: false &#125;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;ceph_osds_down&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125; ], &quot;thresholds&quot;: &quot;1,1&quot;, &quot;title&quot;: &quot;OSDs DOWN&quot;, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;80%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;current&quot; &#125;, &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: true, &quot;colors&quot;: [ &quot;rgba(50, 172, 45, 0.97)&quot;, &quot;rgba(237, 129, 40, 0.89)&quot;, &quot;rgba(245, 54, 54, 0.9)&quot; ], &quot;datasource&quot;: &quot;prometheus&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;format&quot;: &quot;none&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;id&quot;: 30, &quot;interval&quot;: null, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;span&quot;: 2, &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: true, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: true &#125;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;avg(ceph_osd_pgs&#123;job=\&quot;$export\&quot;&#125;)&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125; ], &quot;thresholds&quot;: &quot;250,300&quot;, &quot;title&quot;: &quot;Agerage PGs per OSD&quot;, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;80%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;current&quot; &#125;, &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: true, &quot;colors&quot;: [ &quot;rgba(50, 172, 45, 0.97)&quot;, &quot;rgba(237, 129, 40, 0.89)&quot;, &quot;rgba(245, 54, 54, 0.9)&quot; ], &quot;datasource&quot;: &quot;prometheus&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;format&quot;: &quot;s&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;id&quot;: 31, &quot;interval&quot;: null, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;span&quot;: 2, &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: true, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: true &#125;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;avg(ceph_osd_perf_apply_latency_seconds&#123;job=\&quot;$export\&quot;&#125;)&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125; ], &quot;thresholds&quot;: &quot;0.01,0.05&quot;, &quot;title&quot;: &quot;Agerage OSD Apply Latency&quot;, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;80%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;avg&quot; &#125;, &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: true, &quot;colors&quot;: [ &quot;rgba(50, 172, 45, 0.97)&quot;, &quot;rgba(237, 129, 40, 0.89)&quot;, &quot;rgba(245, 54, 54, 0.9)&quot; ], &quot;datasource&quot;: &quot;prometheus&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;format&quot;: &quot;s&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;id&quot;: 32, &quot;interval&quot;: null, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;span&quot;: 2, &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: true, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: true &#125;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;avg(ceph_osd_perf_commit_latency_seconds&#123;job=\&quot;$export\&quot;&#125;)&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125; ], &quot;thresholds&quot;: &quot;0.01,0.05&quot;, &quot;title&quot;: &quot;Agerage OSD Commit Latency&quot;, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;80%&quot;, &quot;valueMaps&quot;: [], &quot;valueName&quot;: &quot;avg&quot; &#125;, &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: true, &quot;colors&quot;: [ &quot;rgba(50, 172, 45, 0.97)&quot;, &quot;rgba(237, 129, 40, 0.89)&quot;, &quot;rgba(245, 54, 54, 0.9)&quot; ], &quot;datasource&quot;: &quot;prometheus&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;format&quot;: &quot;s&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;id&quot;: 24, &quot;interval&quot;: &quot;1m&quot;, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;repeat&quot;: null, &quot;span&quot;: 2, &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: true, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: true &#125;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;avg(ceph_monitor_latency_seconds&#123;job=\&quot;$export\&quot;&#125;)&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125; ], &quot;thresholds&quot;: &quot;70,80&quot;, &quot;title&quot;: &quot;Average Monitor Latency&quot;, &quot;transparent&quot;: false, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;100%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;current&quot; &#125; ], &quot;repeat&quot;: null, &quot;repeatIteration&quot;: null, &quot;repeatRowId&quot;: null, &quot;showTitle&quot;: false, &quot;title&quot;: &quot;New row&quot;, &quot;titleSize&quot;: &quot;h6&quot; &#125;, &#123; &quot;collapse&quot;: false, &quot;height&quot;: &quot;250px&quot;, &quot;panels&quot;: [ &#123; &quot;aliasColors&quot;: &#123; &quot;Available&quot;: &quot;#EAB839&quot;, &quot;Total Capacity&quot;: &quot;#447EBC&quot;, &quot;Used&quot;: &quot;#BF1B00&quot;, &quot;total_avail&quot;: &quot;#6ED0E0&quot;, &quot;total_space&quot;: &quot;#7EB26D&quot;, &quot;total_used&quot;: &quot;#890F02&quot; &#125;, &quot;bars&quot;: false, &quot;datasource&quot;: &quot;prometheus&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;fill&quot;: 3, &quot;grid&quot;: &#123;&#125;, &quot;height&quot;: &quot;300&quot;, &quot;id&quot;: 1, &quot;interval&quot;: &quot;$interval&quot;, &quot;legend&quot;: &#123; &quot;alignAsTable&quot;: true, &quot;avg&quot;: true, &quot;current&quot;: true, &quot;max&quot;: true, &quot;min&quot;: true, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: true &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 0, &quot;links&quot;: [], &quot;minSpan&quot;: null, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [ &#123; &quot;alias&quot;: &quot;Total Capacity&quot;, &quot;fill&quot;: 0, &quot;linewidth&quot;: 3, &quot;stack&quot;: false &#125; ], &quot;span&quot;: 4, &quot;stack&quot;: true, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;ceph_cluster_available_bytes&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Available&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125;, &#123; &quot;expr&quot;: &quot;ceph_cluster_used_bytes&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Used&quot;, &quot;refId&quot;: &quot;B&quot;, &quot;step&quot;: 10 &#125;, &#123; &quot;expr&quot;: &quot;ceph_cluster_capacity_bytes&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Total Capacity&quot;, &quot;refId&quot;: &quot;C&quot;, &quot;step&quot;: 10 &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeShift&quot;: null, &quot;title&quot;: &quot;Capacity&quot;, &quot;tooltip&quot;: &#123; &quot;msResolution&quot;: false, &quot;shared&quot;: true, &quot;sort&quot;: 2, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;bytes&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125; ] &#125;, &#123; &quot;aliasColors&quot;: &#123; &quot;Total Capacity&quot;: &quot;#7EB26D&quot;, &quot;Used&quot;: &quot;#BF1B00&quot;, &quot;total_avail&quot;: &quot;#6ED0E0&quot;, &quot;total_space&quot;: &quot;#7EB26D&quot;, &quot;total_used&quot;: &quot;#890F02&quot; &#125;, &quot;bars&quot;: false, &quot;datasource&quot;: &quot;prometheus&quot;, &quot;decimals&quot;: 0, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;fill&quot;: 1, &quot;grid&quot;: &#123;&#125;, &quot;height&quot;: &quot;300&quot;, &quot;id&quot;: 3, &quot;interval&quot;: &quot;$interval&quot;, &quot;legend&quot;: &#123; &quot;alignAsTable&quot;: true, &quot;avg&quot;: true, &quot;current&quot;: true, &quot;max&quot;: true, &quot;min&quot;: true, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: true &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 1, &quot;links&quot;: [], &quot;minSpan&quot;: null, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [], &quot;span&quot;: 4, &quot;stack&quot;: true, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;ceph_client_io_write_ops&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Write&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125;, &#123; &quot;expr&quot;: &quot;ceph_client_io_read_ops&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Read&quot;, &quot;refId&quot;: &quot;B&quot;, &quot;step&quot;: 10 &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeShift&quot;: null, &quot;title&quot;: &quot;IOPS&quot;, &quot;tooltip&quot;: &#123; &quot;msResolution&quot;: true, &quot;shared&quot;: true, &quot;sort&quot;: 2, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;none&quot;, &quot;label&quot;: &quot;&quot;, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: 0, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: 0, &quot;show&quot;: true &#125; ] &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;datasource&quot;: &quot;prometheus&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;fill&quot;: 1, &quot;grid&quot;: &#123;&#125;, &quot;height&quot;: &quot;300&quot;, &quot;id&quot;: 7, &quot;interval&quot;: &quot;$interval&quot;, &quot;legend&quot;: &#123; &quot;alignAsTable&quot;: true, &quot;avg&quot;: true, &quot;current&quot;: true, &quot;max&quot;: true, &quot;min&quot;: true, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: true &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 1, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [], &quot;span&quot;: 4, &quot;stack&quot;: true, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;ceph_client_io_write_bytes&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Write&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125;, &#123; &quot;expr&quot;: &quot;ceph_client_io_read_bytes&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Read&quot;, &quot;refId&quot;: &quot;B&quot;, &quot;step&quot;: 10 &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeShift&quot;: null, &quot;title&quot;: &quot;Throughput&quot;, &quot;tooltip&quot;: &#123; &quot;msResolution&quot;: false, &quot;shared&quot;: true, &quot;sort&quot;: 2, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;Bps&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: 0, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: 0, &quot;show&quot;: true &#125; ] &#125; ], &quot;repeat&quot;: null, &quot;repeatIteration&quot;: null, &quot;repeatRowId&quot;: null, &quot;showTitle&quot;: true, &quot;title&quot;: &quot;CLUSTER&quot;, &quot;titleSize&quot;: &quot;h6&quot; &#125;, &#123; &quot;collapse&quot;: false, &quot;height&quot;: &quot;250px&quot;, &quot;panels&quot;: [ &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;datasource&quot;: &quot;prometheus&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;fill&quot;: 1, &quot;grid&quot;: &#123;&#125;, &quot;id&quot;: 18, &quot;legend&quot;: &#123; &quot;alignAsTable&quot;: true, &quot;avg&quot;: true, &quot;current&quot;: true, &quot;max&quot;: false, &quot;min&quot;: false, &quot;rightSide&quot;: true, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: true &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 2, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [ &#123; &quot;alias&quot;: &quot;/^Total.*$/&quot;, &quot;stack&quot;: false &#125; ], &quot;span&quot;: 12, &quot;stack&quot;: true, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;ceph_cluster_objects&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Total&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125;, &#123; &quot;expr&quot;: &quot;ceph_degraded_objects&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Degraded&quot;, &quot;refId&quot;: &quot;B&quot;, &quot;step&quot;: 10 &#125;, &#123; &quot;expr&quot;: &quot;ceph_misplaced_objects&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Misplaced&quot;, &quot;refId&quot;: &quot;C&quot;, &quot;step&quot;: 10 &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeShift&quot;: null, &quot;title&quot;: &quot;Objects in the Cluster&quot;, &quot;tooltip&quot;: &#123; &quot;msResolution&quot;: false, &quot;shared&quot;: true, &quot;sort&quot;: 1, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125; ] &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;datasource&quot;: &quot;prometheus&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;fill&quot;: 1, &quot;grid&quot;: &#123;&#125;, &quot;id&quot;: 19, &quot;legend&quot;: &#123; &quot;alignAsTable&quot;: true, &quot;avg&quot;: true, &quot;current&quot;: true, &quot;max&quot;: false, &quot;min&quot;: false, &quot;rightSide&quot;: true, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: true &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 2, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [ &#123; &quot;alias&quot;: &quot;/^Total.*$/&quot;, &quot;stack&quot;: false &#125; ], &quot;span&quot;: 6, &quot;stack&quot;: true, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;sum(ceph_osd_pgs&#123;job=\&quot;$export\&quot;&#125;)&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Total&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125;, &#123; &quot;expr&quot;: &quot;ceph_degraded_pgs&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Degraded&quot;, &quot;refId&quot;: &quot;B&quot;, &quot;step&quot;: 10 &#125;, &#123; &quot;expr&quot;: &quot;ceph_stale_pgs&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Stale&quot;, &quot;refId&quot;: &quot;C&quot;, &quot;step&quot;: 10 &#125;, &#123; &quot;expr&quot;: &quot;ceph_unclean_pgs&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Unclean&quot;, &quot;refId&quot;: &quot;D&quot;, &quot;step&quot;: 10 &#125;, &#123; &quot;expr&quot;: &quot;ceph_undersized_pgs&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Undersized&quot;, &quot;refId&quot;: &quot;E&quot;, &quot;step&quot;: 10 &#125;, &#123; &quot;expr&quot;: &quot;ceph_stuck_degraded_pgs&#123;job=\&quot;$export\&quot;&#125;+ ceph_stuck_stale_pgs&#123;job=\&quot;$export\&quot;&#125; + ceph_stuck_unclean_pgs&#123;job=\&quot;$export\&quot;&#125; + ceph_stuck_undersized_pgs&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Stuck&quot;, &quot;refId&quot;: &quot;F&quot;, &quot;step&quot;: 10 &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeShift&quot;: null, &quot;title&quot;: &quot;PGs&quot;, &quot;tooltip&quot;: &#123; &quot;msResolution&quot;: false, &quot;shared&quot;: true, &quot;sort&quot;: 1, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: 0, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125; ] &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;datasource&quot;: &quot;prometheus&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;fill&quot;: 1, &quot;grid&quot;: &#123;&#125;, &quot;id&quot;: 20, &quot;legend&quot;: &#123; &quot;alignAsTable&quot;: true, &quot;avg&quot;: true, &quot;current&quot;: true, &quot;max&quot;: false, &quot;min&quot;: false, &quot;rightSide&quot;: true, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: true &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 2, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [ &#123; &quot;alias&quot;: &quot;/^Total.*$/&quot;, &quot;stack&quot;: false &#125; ], &quot;span&quot;: 6, &quot;stack&quot;: true, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;ceph_stuck_degraded_pgs&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Degraded&quot;, &quot;refId&quot;: &quot;F&quot;, &quot;step&quot;: 10 &#125;, &#123; &quot;expr&quot;: &quot;ceph_stuck_stale_pgs&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Stale&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125;, &#123; &quot;expr&quot;: &quot;ceph_stuck_unclean_pgs&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Unclean&quot;, &quot;refId&quot;: &quot;B&quot;, &quot;step&quot;: 10 &#125;, &#123; &quot;expr&quot;: &quot;ceph_stuck_undersized_pgs&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Undersized&quot;, &quot;refId&quot;: &quot;C&quot;, &quot;step&quot;: 10 &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeShift&quot;: null, &quot;title&quot;: &quot;Stuck PGs&quot;, &quot;tooltip&quot;: &#123; &quot;msResolution&quot;: false, &quot;shared&quot;: true, &quot;sort&quot;: 1, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: 0, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125; ] &#125; ], &quot;repeat&quot;: null, &quot;repeatIteration&quot;: null, &quot;repeatRowId&quot;: null, &quot;showTitle&quot;: false, &quot;title&quot;: &quot;New row&quot;, &quot;titleSize&quot;: &quot;h6&quot; &#125;, &#123; &quot;collapse&quot;: false, &quot;height&quot;: &quot;150px&quot;, &quot;panels&quot;: [ &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;datasource&quot;: &quot;prometheus&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;fill&quot;: 1, &quot;grid&quot;: &#123;&#125;, &quot;id&quot;: 15, &quot;legend&quot;: &#123; &quot;avg&quot;: false, &quot;current&quot;: false, &quot;max&quot;: false, &quot;min&quot;: false, &quot;show&quot;: false, &quot;total&quot;: false, &quot;values&quot;: false &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 2, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [], &quot;span&quot;: 4, &quot;stack&quot;: false, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;ceph_recovery_io_bytes&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Bytes&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeShift&quot;: null, &quot;title&quot;: &quot;Bytes&quot;, &quot;tooltip&quot;: &#123; &quot;msResolution&quot;: false, &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;cumulative&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: 0, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125; ] &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;datasource&quot;: &quot;prometheus&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;fill&quot;: 1, &quot;grid&quot;: &#123;&#125;, &quot;id&quot;: 16, &quot;legend&quot;: &#123; &quot;avg&quot;: false, &quot;current&quot;: false, &quot;max&quot;: false, &quot;min&quot;: false, &quot;show&quot;: false, &quot;total&quot;: false, &quot;values&quot;: false &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 2, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [ &#123; &quot;alias&quot;: &quot;/^.*/&quot;, &quot;color&quot;: &quot;#E0752D&quot; &#125; ], &quot;span&quot;: 4, &quot;stack&quot;: false, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;ceph_recovery_io_keys&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Keys&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeShift&quot;: null, &quot;title&quot;: &quot;Keys&quot;, &quot;tooltip&quot;: &#123; &quot;msResolution&quot;: false, &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;cumulative&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: 0, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125; ] &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;datasource&quot;: &quot;prometheus&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;fill&quot;: 1, &quot;grid&quot;: &#123;&#125;, &quot;id&quot;: 17, &quot;legend&quot;: &#123; &quot;avg&quot;: false, &quot;current&quot;: false, &quot;max&quot;: false, &quot;min&quot;: false, &quot;show&quot;: false, &quot;total&quot;: false, &quot;values&quot;: false &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 2, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [ &#123; &quot;alias&quot;: &quot;/^.*$/&quot;, &quot;color&quot;: &quot;#890F02&quot; &#125; ], &quot;span&quot;: 4, &quot;stack&quot;: false, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;ceph_recovery_io_objects&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Objects&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeShift&quot;: null, &quot;title&quot;: &quot;Objects&quot;, &quot;tooltip&quot;: &#123; &quot;msResolution&quot;: false, &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;cumulative&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: 0, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125; ] &#125; ], &quot;repeat&quot;: null, &quot;repeatIteration&quot;: null, &quot;repeatRowId&quot;: null, &quot;showTitle&quot;: true, &quot;title&quot;: &quot;Recovery&quot;, &quot;titleSize&quot;: &quot;h6&quot; &#125; ], &quot;schemaVersion&quot;: 14, &quot;style&quot;: &quot;dark&quot;, &quot;tags&quot;: [ &quot;ceph&quot;, &quot;cluster&quot; ], &quot;templating&quot;: &#123; &quot;list&quot;: [ &#123; &quot;auto&quot;: true, &quot;auto_count&quot;: 10, &quot;auto_min&quot;: &quot;1m&quot;, &quot;current&quot;: &#123; &quot;text&quot;: &quot;10s&quot;, &quot;value&quot;: &quot;10s&quot; &#125;, &quot;datasource&quot;: null, &quot;hide&quot;: 0, &quot;includeAll&quot;: false, &quot;label&quot;: &quot;Interval&quot;, &quot;multi&quot;: false, &quot;name&quot;: &quot;interval&quot;, &quot;options&quot;: [ &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;auto&quot;, &quot;value&quot;: &quot;$__auto_interval&quot; &#125;, &#123; &quot;selected&quot;: true, &quot;text&quot;: &quot;10s&quot;, &quot;value&quot;: &quot;10s&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;30s&quot;, &quot;value&quot;: &quot;30s&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;1m&quot;, &quot;value&quot;: &quot;1m&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;10m&quot;, &quot;value&quot;: &quot;10m&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;30m&quot;, &quot;value&quot;: &quot;30m&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;1h&quot;, &quot;value&quot;: &quot;1h&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;6h&quot;, &quot;value&quot;: &quot;6h&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;12h&quot;, &quot;value&quot;: &quot;12h&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;1d&quot;, &quot;value&quot;: &quot;1d&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;7d&quot;, &quot;value&quot;: &quot;7d&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;14d&quot;, &quot;value&quot;: &quot;14d&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;30d&quot;, &quot;value&quot;: &quot;30d&quot; &#125; ], &quot;query&quot;: &quot;10s,30s,1m,10m,30m,1h,6h,12h,1d,7d,14d,30d&quot;, &quot;refresh&quot;: 2, &quot;type&quot;: &quot;interval&quot; &#125;, &#123; &quot;allValue&quot;: null, &quot;current&quot;: &#123; &quot;tags&quot;: [], &quot;text&quot;: &quot;ocata-ceph&quot;, &quot;value&quot;: &quot;ocata-ceph&quot; &#125;, &quot;datasource&quot;: &quot;prometheus&quot;, &quot;hide&quot;: 0, &quot;includeAll&quot;: false, &quot;label&quot;: &quot;exporter&quot;, &quot;multi&quot;: false, &quot;name&quot;: &quot;export&quot;, &quot;options&quot;: [ &#123; &quot;selected&quot;: true, &quot;text&quot;: &quot;ocata-ceph&quot;, &quot;value&quot;: &quot;ocata-ceph&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;ocata-ceph-cl&quot;, &quot;value&quot;: &quot;ocata-ceph-cl&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;ceph-exporter&quot;, &quot;value&quot;: &quot;ceph-exporter&quot; &#125; ], &quot;query&quot;: &quot;label_values(ceph_health_status, job)&quot;, &quot;refresh&quot;: 0, &quot;regex&quot;: &quot;&quot;, &quot;sort&quot;: 0, &quot;tagValuesQuery&quot;: &quot;&quot;, &quot;tags&quot;: [], &quot;tagsQuery&quot;: &quot;&quot;, &quot;type&quot;: &quot;query&quot;, &quot;useTags&quot;: false &#125; ] &#125;, &quot;time&quot;: &#123; &quot;from&quot;: &quot;now-3h&quot;, &quot;to&quot;: &quot;now&quot; &#125;, &quot;timepicker&quot;: &#123; &quot;refresh_intervals&quot;: [ &quot;5s&quot;, &quot;10s&quot;, &quot;30s&quot;, &quot;1m&quot;, &quot;5m&quot;, &quot;15m&quot;, &quot;30m&quot;, &quot;1h&quot;, &quot;2h&quot;, &quot;1d&quot; ], &quot;time_options&quot;: [ &quot;5m&quot;, &quot;15m&quot;, &quot;1h&quot;, &quot;6h&quot;, &quot;12h&quot;, &quot;24h&quot;, &quot;2d&quot;, &quot;7d&quot;, &quot;30d&quot; ] &#125;, &quot;timezone&quot;: &quot;browser&quot;, &quot;title&quot;: &quot;Ceph - Cluster&quot;, &quot;version&quot;: 65&#125; ceph-osdquot;annotations&quot;: &#123; &quot;list&quot;: [] &#125;, &quot;description&quot;: &quot;CEPH OSD Status.&quot;, &quot;editable&quot;: true, &quot;gnetId&quot;: 923, &quot;graphTooltip&quot;: 0, &quot;hideControls&quot;: false, &quot;id&quot;: 11, &quot;links&quot;: [], &quot;refresh&quot;: &quot;15m&quot;, &quot;rows&quot;: [ &#123; &quot;collapse&quot;: false, &quot;height&quot;: &quot;100px&quot;, &quot;panels&quot;: [ &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: true, &quot;colorValue&quot;: false, &quot;colors&quot;: [ &quot;rgba(245, 54, 54, 0.9)&quot;, &quot;rgba(237, 40, 40, 0.89)&quot;, &quot;rgba(50, 172, 45, 0.97)&quot; ], &quot;datasource&quot;: &quot;prometheus&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;format&quot;: &quot;none&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;id&quot;: 6, &quot;interval&quot;: null, &quot;links&quot;: [], &quot;mappingType&quot;: 2, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125;, &#123; &quot;from&quot;: &quot;0&quot;, &quot;text&quot;: &quot;DOWN&quot;, &quot;to&quot;: &quot;0.99&quot; &#125;, &#123; &quot;from&quot;: &quot;0.99&quot;, &quot;text&quot;: &quot;UP&quot;, &quot;to&quot;: &quot;1&quot; &#125; ], &quot;span&quot;: 1, &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: false, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: false &#125;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;ceph_osd_up&#123;osd=\&quot;$osd\&quot;, job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 60 &#125; ], &quot;thresholds&quot;: &quot;0,1&quot;, &quot;timeFrom&quot;: null, &quot;title&quot;: &quot;Status&quot;, &quot;transparent&quot;: false, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;80%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;DOWN&quot;, &quot;value&quot;: &quot;0&quot; &#125;, &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;UP&quot;, &quot;value&quot;: &quot;1&quot; &#125;, &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;current&quot; &#125;, &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: true, &quot;colorValue&quot;: false, &quot;colors&quot;: [ &quot;rgba(245, 54, 54, 0.9)&quot;, &quot;rgba(237, 40, 40, 0.89)&quot;, &quot;rgba(50, 172, 45, 0.97)&quot; ], &quot;datasource&quot;: &quot;prometheus&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;format&quot;: &quot;none&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;id&quot;: 8, &quot;interval&quot;: null, &quot;links&quot;: [], &quot;mappingType&quot;: 2, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125;, &#123; &quot;from&quot;: &quot;0&quot;, &quot;text&quot;: &quot;OUT&quot;, &quot;to&quot;: &quot;0.99&quot; &#125;, &#123; &quot;from&quot;: &quot;0.99&quot;, &quot;text&quot;: &quot;IN&quot;, &quot;to&quot;: &quot;1&quot; &#125; ], &quot;span&quot;: 1, &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: false, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: false &#125;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;ceph_osd_in&#123;osd=\&quot;$osd\&quot;, job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 60 &#125; ], &quot;thresholds&quot;: &quot;0,1&quot;, &quot;timeFrom&quot;: null, &quot;title&quot;: &quot;Available&quot;, &quot;transparent&quot;: false, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;80%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;DOWN&quot;, &quot;value&quot;: &quot;0&quot; &#125;, &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;UP&quot;, &quot;value&quot;: &quot;1&quot; &#125;, &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;current&quot; &#125;, &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: false, &quot;colors&quot;: [ &quot;rgba(245, 54, 54, 0.9)&quot;, &quot;rgba(237, 129, 40, 0.89)&quot;, &quot;rgba(50, 172, 45, 0.97)&quot; ], &quot;datasource&quot;: &quot;prometheus&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;format&quot;: &quot;none&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;id&quot;: 10, &quot;interval&quot;: null, &quot;links&quot;: [], &quot;mappingType&quot;: 2, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;span&quot;: 1, &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: false, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: false &#125;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;ceph_osds&#123;job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 60 &#125; ], &quot;thresholds&quot;: &quot;0,1&quot;, &quot;timeFrom&quot;: null, &quot;title&quot;: &quot;Total OSDs&quot;, &quot;transparent&quot;: false, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;80%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;DOWN&quot;, &quot;value&quot;: &quot;0&quot; &#125;, &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;UP&quot;, &quot;value&quot;: &quot;1&quot; &#125;, &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;current&quot; &#125; ], &quot;repeat&quot;: null, &quot;repeatIteration&quot;: null, &quot;repeatRowId&quot;: null, &quot;showTitle&quot;: false, &quot;title&quot;: &quot;New row&quot;, &quot;titleSize&quot;: &quot;h6&quot; &#125;, &#123; &quot;collapse&quot;: false, &quot;height&quot;: &quot;250px&quot;, &quot;panels&quot;: [ &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;datasource&quot;: &quot;prometheus&quot;, &quot;decimals&quot;: 2, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;fill&quot;: 1, &quot;grid&quot;: &#123;&#125;, &quot;id&quot;: 5, &quot;interval&quot;: &quot;$interval&quot;, &quot;legend&quot;: &#123; &quot;alignAsTable&quot;: true, &quot;avg&quot;: true, &quot;current&quot;: true, &quot;max&quot;: true, &quot;min&quot;: true, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: true &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 2, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [ &#123; &quot;alias&quot;: &quot;/^Average.*/&quot;, &quot;fill&quot;: 0, &quot;stack&quot;: false &#125; ], &quot;span&quot;: 10, &quot;stack&quot;: true, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;ceph_osd_pgs&#123;osd=~\&quot;$osd\&quot;, job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Number of PGs - &#123;&#123; osd&#125;&#125;&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 60 &#125;, &#123; &quot;expr&quot;: &quot;avg(ceph_osd_pgs&#123;job=\&quot;$export\&quot;&#125;)&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Average Number of PGs in the Cluster&quot;, &quot;refId&quot;: &quot;B&quot;, &quot;step&quot;: 60 &#125; ], &quot;thresholds&quot;: [ &#123; &quot;colorMode&quot;: &quot;custom&quot;, &quot;line&quot;: true, &quot;lineColor&quot;: &quot;rgba(216, 200, 27, 0.27)&quot;, &quot;op&quot;: &quot;gt&quot;, &quot;value&quot;: 250 &#125;, &#123; &quot;colorMode&quot;: &quot;custom&quot;, &quot;line&quot;: true, &quot;lineColor&quot;: &quot;rgba(234, 112, 112, 0.22)&quot;, &quot;op&quot;: &quot;gt&quot;, &quot;value&quot;: 300 &#125; ], &quot;timeFrom&quot;: null, &quot;timeShift&quot;: null, &quot;title&quot;: &quot;PGs&quot;, &quot;tooltip&quot;: &#123; &quot;msResolution&quot;: false, &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: 0, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: 0, &quot;show&quot;: true &#125; ] &#125;, &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: true, &quot;colors&quot;: [ &quot;rgba(50, 172, 45, 0.97)&quot;, &quot;rgba(237, 129, 40, 0.89)&quot;, &quot;rgba(245, 54, 54, 0.9)&quot; ], &quot;datasource&quot;: &quot;prometheus&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;format&quot;: &quot;percent&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: true, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;id&quot;: 7, &quot;interval&quot;: null, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;span&quot;: 2, &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: false, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: true &#125;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;ceph_osd_utilization&#123;osd=\&quot;$osd\&quot;, job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 60 &#125; ], &quot;thresholds&quot;: &quot;60,80&quot;, &quot;timeFrom&quot;: null, &quot;title&quot;: &quot;Utilization&quot;, &quot;transparent&quot;: false, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;80%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;current&quot; &#125; ], &quot;repeat&quot;: null, &quot;repeatIteration&quot;: null, &quot;repeatRowId&quot;: null, &quot;showTitle&quot;: true, &quot;title&quot;: &quot;OSD: $osd&quot;, &quot;titleSize&quot;: &quot;h6&quot; &#125;, &#123; &quot;collapse&quot;: false, &quot;height&quot;: &quot;250px&quot;, &quot;panels&quot;: [ &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;datasource&quot;: &quot;prometheus&quot;, &quot;decimals&quot;: 2, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;fill&quot;: 1, &quot;grid&quot;: &#123;&#125;, &quot;id&quot;: 4, &quot;interval&quot;: &quot;$interval&quot;, &quot;legend&quot;: &#123; &quot;alignAsTable&quot;: true, &quot;avg&quot;: true, &quot;current&quot;: true, &quot;max&quot;: true, &quot;min&quot;: true, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: true &#125;, &quot;lines&quot;: false, &quot;linewidth&quot;: 2, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 2, &quot;points&quot;: true, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [], &quot;span&quot;: 4, &quot;stack&quot;: false, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;ceph_osd_perf_apply_latency_seconds&#123;osd=~\&quot;$osd\&quot;, job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Apply Latency (s) - &#123;&#123; osd &#125;&#125;&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 60 &#125;, &#123; &quot;expr&quot;: &quot;ceph_osd_perf_commit_latency_seconds&#123;osd=~\&quot;$osd\&quot;, job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Commit Latency (s) - &#123;&#123; osd &#125;&#125;&quot;, &quot;refId&quot;: &quot;B&quot;, &quot;step&quot;: 60 &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeShift&quot;: null, &quot;title&quot;: &quot;Latency&quot;, &quot;tooltip&quot;: &#123; &quot;msResolution&quot;: false, &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;s&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: 0, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;s&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: 0, &quot;show&quot;: true &#125; ] &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;datasource&quot;: &quot;prometheus&quot;, &quot;decimals&quot;: 2, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;fill&quot;: 1, &quot;grid&quot;: &#123;&#125;, &quot;id&quot;: 2, &quot;interval&quot;: &quot;$interval&quot;, &quot;legend&quot;: &#123; &quot;alignAsTable&quot;: true, &quot;avg&quot;: true, &quot;current&quot;: true, &quot;max&quot;: true, &quot;min&quot;: true, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: true &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 2, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [], &quot;span&quot;: 4, &quot;stack&quot;: true, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;ceph_osd_avail_bytes&#123;osd=~\&quot;$osd\&quot;, job=\&quot;$export\&quot;&#125;&quot;, &quot;hide&quot;: false, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Available - &#123;&#123; osd &#125;&#125;&quot;, &quot;metric&quot;: &quot;ceph_osd_avail_bytes&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 60 &#125;, &#123; &quot;expr&quot;: &quot;ceph_osd_used_bytes&#123;osd=~\&quot;$osd\&quot;, job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Used - &#123;&#123; osd &#125;&#125;&quot;, &quot;metric&quot;: &quot;ceph_osd_avail_bytes&quot;, &quot;refId&quot;: &quot;B&quot;, &quot;step&quot;: 60 &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeShift&quot;: null, &quot;title&quot;: &quot;OSD Storage&quot;, &quot;tooltip&quot;: &#123; &quot;msResolution&quot;: false, &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;bytes&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: 0, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: 0, &quot;show&quot;: true &#125; ] &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;datasource&quot;: &quot;prometheus&quot;, &quot;decimals&quot;: 5, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;fill&quot;: 1, &quot;grid&quot;: &#123;&#125;, &quot;id&quot;: 9, &quot;interval&quot;: &quot;$interval&quot;, &quot;legend&quot;: &#123; &quot;alignAsTable&quot;: true, &quot;avg&quot;: true, &quot;current&quot;: true, &quot;max&quot;: true, &quot;min&quot;: true, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: true &#125;, &quot;lines&quot;: false, &quot;linewidth&quot;: 2, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 2, &quot;points&quot;: true, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [], &quot;span&quot;: 4, &quot;stack&quot;: false, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;ceph_osd_variance&#123;osd=~\&quot;$osd\&quot;, job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Available - &#123;&#123; osd &#125;&#125;&quot;, &quot;metric&quot;: &quot;ceph_osd_avail_bytes&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 60 &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeShift&quot;: null, &quot;title&quot;: &quot;Utilization Variance&quot;, &quot;tooltip&quot;: &#123; &quot;msResolution&quot;: false, &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;cumulative&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;none&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;none&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125; ] &#125; ], &quot;repeat&quot;: null, &quot;repeatIteration&quot;: null, &quot;repeatRowId&quot;: null, &quot;showTitle&quot;: false, &quot;title&quot;: &quot;New row&quot;, &quot;titleSize&quot;: &quot;h6&quot; &#125; ], &quot;schemaVersion&quot;: 14, &quot;style&quot;: &quot;dark&quot;, &quot;tags&quot;: [ &quot;ceph&quot;, &quot;osd&quot; ], &quot;templating&quot;: &#123; &quot;list&quot;: [ &#123; &quot;auto&quot;: true, &quot;auto_count&quot;: 10, &quot;auto_min&quot;: &quot;1m&quot;, &quot;current&quot;: &#123; &quot;text&quot;: &quot;1m&quot;, &quot;value&quot;: &quot;1m&quot; &#125;, &quot;datasource&quot;: null, &quot;hide&quot;: 0, &quot;includeAll&quot;: false, &quot;label&quot;: &quot;Interval&quot;, &quot;multi&quot;: false, &quot;name&quot;: &quot;interval&quot;, &quot;options&quot;: [ &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;auto&quot;, &quot;value&quot;: &quot;$__auto_interval&quot; &#125;, &#123; &quot;selected&quot;: true, &quot;text&quot;: &quot;1m&quot;, &quot;value&quot;: &quot;1m&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;10m&quot;, &quot;value&quot;: &quot;10m&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;30m&quot;, &quot;value&quot;: &quot;30m&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;1h&quot;, &quot;value&quot;: &quot;1h&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;6h&quot;, &quot;value&quot;: &quot;6h&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;12h&quot;, &quot;value&quot;: &quot;12h&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;1d&quot;, &quot;value&quot;: &quot;1d&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;7d&quot;, &quot;value&quot;: &quot;7d&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;14d&quot;, &quot;value&quot;: &quot;14d&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;30d&quot;, &quot;value&quot;: &quot;30d&quot; &#125; ], &quot;query&quot;: &quot;1m,10m,30m,1h,6h,12h,1d,7d,14d,30d&quot;, &quot;refresh&quot;: 2, &quot;type&quot;: &quot;interval&quot; &#125;, &#123; &quot;allValue&quot;: null, &quot;current&quot;: &#123; &quot;text&quot;: &quot;ceph-exporter&quot;, &quot;value&quot;: &quot;ceph-exporter&quot; &#125;, &quot;datasource&quot;: &quot;prometheus&quot;, &quot;hide&quot;: 0, &quot;includeAll&quot;: false, &quot;label&quot;: &quot;exporter&quot;, &quot;multi&quot;: false, &quot;name&quot;: &quot;export&quot;, &quot;options&quot;: [], &quot;query&quot;: &quot;label_values(ceph_health_status, job)&quot;, &quot;refresh&quot;: 1, &quot;regex&quot;: &quot;&quot;, &quot;sort&quot;: 0, &quot;tagValuesQuery&quot;: &quot;&quot;, &quot;tags&quot;: [], &quot;tagsQuery&quot;: &quot;&quot;, &quot;type&quot;: &quot;query&quot;, &quot;useTags&quot;: false &#125;, &#123; &quot;allValue&quot;: null, &quot;current&quot;: &#123; &quot;text&quot;: &quot;osd.0&quot;, &quot;value&quot;: &quot;osd.0&quot; &#125;, &quot;datasource&quot;: &quot;prometheus&quot;, &quot;hide&quot;: 0, &quot;includeAll&quot;: false, &quot;label&quot;: &quot;OSD&quot;, &quot;multi&quot;: false, &quot;name&quot;: &quot;osd&quot;, &quot;options&quot;: [], &quot;query&quot;: &quot;label_values(ceph_osd_up&#123;job=\&quot;$export\&quot;&#125;, osd)&quot;, &quot;refresh&quot;: 1, &quot;regex&quot;: &quot;&quot;, &quot;sort&quot;: 0, &quot;tagValuesQuery&quot;: &quot;&quot;, &quot;tags&quot;: [], &quot;tagsQuery&quot;: &quot;&quot;, &quot;type&quot;: &quot;query&quot;, &quot;useTags&quot;: false &#125; ] &#125;, &quot;time&quot;: &#123; &quot;from&quot;: &quot;now-1h&quot;, &quot;to&quot;: &quot;now&quot; &#125;, &quot;timepicker&quot;: &#123; &quot;refresh_intervals&quot;: [ &quot;5s&quot;, &quot;10s&quot;, &quot;30s&quot;, &quot;1m&quot;, &quot;5m&quot;, &quot;15m&quot;, &quot;30m&quot;, &quot;1h&quot;, &quot;2h&quot;, &quot;1d&quot; ], &quot;time_options&quot;: [ &quot;5m&quot;, &quot;15m&quot;, &quot;1h&quot;, &quot;6h&quot;, &quot;12h&quot;, &quot;24h&quot;, &quot;2d&quot;, &quot;7d&quot;, &quot;30d&quot; ] &#125;, &quot;timezone&quot;: &quot;browser&quot;, &quot;title&quot;: &quot;Ceph - OSD&quot;, &quot;version&quot;: 16&#125; ceph-poolquot;annotations&quot;: &#123; &quot;list&quot;: [] &#125;, &quot;description&quot;: &quot;Ceph Pools dashboard.&quot;, &quot;editable&quot;: true, &quot;gnetId&quot;: 926, &quot;graphTooltip&quot;: 0, &quot;hideControls&quot;: false, &quot;id&quot;: 12, &quot;links&quot;: [], &quot;refresh&quot;: &quot;1m&quot;, &quot;rows&quot;: [ &#123; &quot;collapse&quot;: false, &quot;height&quot;: &quot;250px&quot;, &quot;panels&quot;: [ &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;datasource&quot;: &quot;prometheus&quot;, &quot;decimals&quot;: 2, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;fill&quot;: 4, &quot;grid&quot;: &#123;&#125;, &quot;height&quot;: &quot;&quot;, &quot;id&quot;: 2, &quot;interval&quot;: &quot;$interval&quot;, &quot;legend&quot;: &#123; &quot;alignAsTable&quot;: true, &quot;avg&quot;: true, &quot;current&quot;: true, &quot;max&quot;: true, &quot;min&quot;: true, &quot;rightSide&quot;: true, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: true &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 0, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [ &#123; &quot;alias&quot;: &quot;/^Total.*$/&quot;, &quot;fill&quot;: 0, &quot;linewidth&quot;: 4, &quot;stack&quot;: false &#125;, &#123; &quot;alias&quot;: &quot;/^Raw.*$/&quot;, &quot;color&quot;: &quot;#BF1B00&quot;, &quot;fill&quot;: 0, &quot;linewidth&quot;: 4 &#125; ], &quot;span&quot;: 10, &quot;stack&quot;: true, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;ceph_pool_available_bytes&#123;pool=~\&quot;$pool\&quot;, job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Avilable - &#123;&#123; pool &#125;&#125;&quot;, &quot;metric&quot;: &quot;ceph_pool_available_bytes&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 60 &#125;, &#123; &quot;expr&quot;: &quot;ceph_pool_used_bytes&#123;pool=~\&quot;$pool\&quot;, job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Used - &#123;&#123; pool &#125;&#125;&quot;, &quot;metric&quot;: &quot;ceph_pool&quot;, &quot;refId&quot;: &quot;B&quot;, &quot;step&quot;: 60 &#125;, &#123; &quot;expr&quot;: &quot;ceph_pool_used_bytes&#123;pool=~\&quot;$pool\&quot;, job=\&quot;$export\&quot;&#125; + ceph_pool_available_bytes&#123;pool=~\&quot;$pool\&quot;, job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Total - &#123;&#123; pool &#125;&#125;&quot;, &quot;metric&quot;: &quot;ceph_pool&quot;, &quot;refId&quot;: &quot;C&quot;, &quot;step&quot;: 60 &#125;, &#123; &quot;expr&quot;: &quot;ceph_pool_raw_used_bytes&#123;pool=~\&quot;$pool\&quot;, job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Raw - &#123;&#123; pool &#125;&#125;&quot;, &quot;metric&quot;: &quot;ceph_pool&quot;, &quot;refId&quot;: &quot;D&quot;, &quot;step&quot;: 60 &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeShift&quot;: null, &quot;title&quot;: &quot;Pool Storage&quot;, &quot;tooltip&quot;: &#123; &quot;msResolution&quot;: false, &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;bytes&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: 0, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: 0, &quot;show&quot;: true &#125; ] &#125;, &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: true, &quot;colors&quot;: [ &quot;rgba(245, 54, 54, 0.9)&quot;, &quot;rgba(237, 129, 40, 0.89)&quot;, &quot;rgba(50, 172, 45, 0.97)&quot; ], &quot;datasource&quot;: &quot;prometheus&quot;, &quot;decimals&quot;: 2, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;format&quot;: &quot;percentunit&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 1, &quot;minValue&quot;: 0, &quot;show&quot;: true, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;id&quot;: 10, &quot;interval&quot;: null, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;span&quot;: 2, &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: false, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: false &#125;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot; ceph_pool_used_bytes&#123;pool=\&quot;$pool\&quot;, job=\&quot;$export\&quot;&#125; / (ceph_pool_available_bytes&#123;pool=\&quot;$pool\&quot;, job=\&quot;$export\&quot;&#125; + ceph_pool_used_bytes&#123;pool=\&quot;$pool\&quot;, job=\&quot;$export\&quot;&#125;)&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 60 &#125; ], &quot;thresholds&quot;: &quot;&quot;, &quot;title&quot;: &quot;Usage&quot;, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;80%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;current&quot; &#125; ], &quot;repeat&quot;: null, &quot;repeatIteration&quot;: null, &quot;repeatRowId&quot;: null, &quot;showTitle&quot;: true, &quot;title&quot;: &quot;Pool: $pool&quot;, &quot;titleSize&quot;: &quot;h6&quot; &#125;, &#123; &quot;collapse&quot;: false, &quot;height&quot;: &quot;250px&quot;, &quot;panels&quot;: [ &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;datasource&quot;: &quot;prometheus&quot;, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;fill&quot;: 1, &quot;grid&quot;: &#123;&#125;, &quot;height&quot;: &quot;&quot;, &quot;id&quot;: 7, &quot;legend&quot;: &#123; &quot;avg&quot;: false, &quot;current&quot;: false, &quot;max&quot;: false, &quot;min&quot;: false, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: false &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 2, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [], &quot;span&quot;: 6, &quot;stack&quot;: false, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;ceph_pool_objects_total&#123;pool=~\&quot;$pool\&quot;, job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Objects - &#123;&#123; pool &#125;&#125;&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 60 &#125;, &#123; &quot;expr&quot;: &quot;ceph_pool_dirty_objects_total&#123;pool=~\&quot;$pool\&quot;, job=\&quot;$export\&quot;&#125;&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Dirty Objects - &#123;&#123; pool &#125;&#125;&quot;, &quot;refId&quot;: &quot;B&quot;, &quot;step&quot;: 60 &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeShift&quot;: null, &quot;title&quot;: &quot;Objects in Pool&quot;, &quot;tooltip&quot;: &#123; &quot;msResolution&quot;: false, &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;cumulative&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: 0, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: 0, &quot;show&quot;: true &#125; ] &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;datasource&quot;: &quot;prometheus&quot;, &quot;decimals&quot;: 2, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;fill&quot;: 1, &quot;grid&quot;: &#123;&#125;, &quot;id&quot;: 4, &quot;interval&quot;: &quot;$interval&quot;, &quot;legend&quot;: &#123; &quot;alignAsTable&quot;: true, &quot;avg&quot;: true, &quot;current&quot;: true, &quot;max&quot;: true, &quot;min&quot;: true, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: true &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 2, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [], &quot;span&quot;: 6, &quot;stack&quot;: true, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;irate(ceph_pool_read_total&#123;pool=~\&quot;$pool\&quot;, job=\&quot;$export\&quot;&#125;[3m])&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Read - &#123;&#123; pool &#125;&#125;&quot;, &quot;refId&quot;: &quot;B&quot;, &quot;step&quot;: 60 &#125;, &#123; &quot;expr&quot;: &quot;irate(ceph_pool_write_total&#123;pool=~\&quot;$pool\&quot;, job=\&quot;$export\&quot;&#125;[3m])&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Write - &#123;&#123; pool &#125;&#125;&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 60 &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeShift&quot;: null, &quot;title&quot;: &quot;IOPS&quot;, &quot;tooltip&quot;: &#123; &quot;msResolution&quot;: false, &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;none&quot;, &quot;label&quot;: &quot;IOPS&quot;, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: 0, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: &quot;IOPS&quot;, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: 0, &quot;show&quot;: false &#125; ] &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;datasource&quot;: &quot;prometheus&quot;, &quot;decimals&quot;: 2, &quot;editable&quot;: true, &quot;error&quot;: false, &quot;fill&quot;: 1, &quot;grid&quot;: &#123;&#125;, &quot;id&quot;: 5, &quot;interval&quot;: &quot;$interval&quot;, &quot;legend&quot;: &#123; &quot;alignAsTable&quot;: true, &quot;avg&quot;: true, &quot;current&quot;: true, &quot;max&quot;: true, &quot;min&quot;: true, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: true &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 2, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [], &quot;span&quot;: 12, &quot;stack&quot;: true, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;irate(ceph_pool_read_bytes_total&#123;pool=\&quot;$pool\&quot;, job=\&quot;$export\&quot;&#125;[3m])&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Read Bytes - &#123;&#123; pool &#125;&#125;&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 60 &#125;, &#123; &quot;expr&quot;: &quot;irate(ceph_pool_write_bytes_total&#123;pool=\&quot;$pool\&quot;, job=\&quot;$export\&quot;&#125;[3m])&quot;, &quot;interval&quot;: &quot;$interval&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Written Bytes - &#123;&#123; pool &#125;&#125;&quot;, &quot;refId&quot;: &quot;B&quot;, &quot;step&quot;: 60 &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeShift&quot;: null, &quot;title&quot;: &quot;Throughput&quot;, &quot;tooltip&quot;: &#123; &quot;msResolution&quot;: false, &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;Bps&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: 0, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;Bps&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: 0, &quot;show&quot;: true &#125; ] &#125; ], &quot;repeat&quot;: null, &quot;repeatIteration&quot;: null, &quot;repeatRowId&quot;: null, &quot;showTitle&quot;: false, &quot;title&quot;: &quot;New row&quot;, &quot;titleSize&quot;: &quot;h6&quot; &#125; ], &quot;schemaVersion&quot;: 14, &quot;style&quot;: &quot;dark&quot;, &quot;tags&quot;: [ &quot;ceph&quot;, &quot;pools&quot; ], &quot;templating&quot;: &#123; &quot;list&quot;: [ &#123; &quot;auto&quot;: true, &quot;auto_count&quot;: 10, &quot;auto_min&quot;: &quot;1m&quot;, &quot;current&quot;: &#123; &quot;text&quot;: &quot;1m&quot;, &quot;value&quot;: &quot;1m&quot; &#125;, &quot;datasource&quot;: null, &quot;hide&quot;: 0, &quot;includeAll&quot;: false, &quot;label&quot;: &quot;Interval&quot;, &quot;multi&quot;: false, &quot;name&quot;: &quot;interval&quot;, &quot;options&quot;: [ &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;auto&quot;, &quot;value&quot;: &quot;$__auto_interval&quot; &#125;, &#123; &quot;selected&quot;: true, &quot;text&quot;: &quot;1m&quot;, &quot;value&quot;: &quot;1m&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;10m&quot;, &quot;value&quot;: &quot;10m&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;30m&quot;, &quot;value&quot;: &quot;30m&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;1h&quot;, &quot;value&quot;: &quot;1h&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;6h&quot;, &quot;value&quot;: &quot;6h&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;12h&quot;, &quot;value&quot;: &quot;12h&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;1d&quot;, &quot;value&quot;: &quot;1d&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;7d&quot;, &quot;value&quot;: &quot;7d&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;14d&quot;, &quot;value&quot;: &quot;14d&quot; &#125;, &#123; &quot;selected&quot;: false, &quot;text&quot;: &quot;30d&quot;, &quot;value&quot;: &quot;30d&quot; &#125; ], &quot;query&quot;: &quot;1m,10m,30m,1h,6h,12h,1d,7d,14d,30d&quot;, &quot;refresh&quot;: 2, &quot;type&quot;: &quot;interval&quot; &#125;, &#123; &quot;allValue&quot;: null, &quot;current&quot;: &#123; &quot;text&quot;: &quot;ocata-ceph&quot;, &quot;value&quot;: &quot;ocata-ceph&quot; &#125;, &quot;datasource&quot;: &quot;prometheus&quot;, &quot;hide&quot;: 0, &quot;includeAll&quot;: false, &quot;label&quot;: &quot;exporter&quot;, &quot;multi&quot;: false, &quot;name&quot;: &quot;export&quot;, &quot;options&quot;: [], &quot;query&quot;: &quot;label_values(ceph_health_status, job)&quot;, &quot;refresh&quot;: 1, &quot;regex&quot;: &quot;&quot;, &quot;sort&quot;: 0, &quot;tagValuesQuery&quot;: &quot;&quot;, &quot;tags&quot;: [], &quot;tagsQuery&quot;: &quot;&quot;, &quot;type&quot;: &quot;query&quot;, &quot;useTags&quot;: false &#125;, &#123; &quot;allValue&quot;: null, &quot;current&quot;: &#123; &quot;text&quot;: &quot;instances&quot;, &quot;value&quot;: &quot;instances&quot; &#125;, &quot;datasource&quot;: &quot;prometheus&quot;, &quot;hide&quot;: 0, &quot;includeAll&quot;: false, &quot;label&quot;: &quot;Pool&quot;, &quot;multi&quot;: false, &quot;name&quot;: &quot;pool&quot;, &quot;options&quot;: [], &quot;query&quot;: &quot;label_values(ceph_pool_objects_total&#123;job=\&quot;$export\&quot;&#125;, pool)&quot;, &quot;refresh&quot;: 1, &quot;regex&quot;: &quot;&quot;, &quot;sort&quot;: 0, &quot;tagValuesQuery&quot;: &quot;&quot;, &quot;tags&quot;: [], &quot;tagsQuery&quot;: &quot;&quot;, &quot;type&quot;: &quot;query&quot;, &quot;useTags&quot;: false &#125; ] &#125;, &quot;time&quot;: &#123; &quot;from&quot;: &quot;now-1h&quot;, &quot;to&quot;: &quot;now&quot; &#125;, &quot;timepicker&quot;: &#123; &quot;refresh_intervals&quot;: [ &quot;5s&quot;, &quot;10s&quot;, &quot;30s&quot;, &quot;1m&quot;, &quot;5m&quot;, &quot;15m&quot;, &quot;30m&quot;, &quot;1h&quot;, &quot;2h&quot;, &quot;1d&quot; ], &quot;time_options&quot;: [ &quot;5m&quot;, &quot;15m&quot;, &quot;1h&quot;, &quot;6h&quot;, &quot;12h&quot;, &quot;24h&quot;, &quot;2d&quot;, &quot;7d&quot;, &quot;30d&quot; ] &#125;, &quot;timezone&quot;: &quot;browser&quot;, &quot;title&quot;: &quot;Ceph - Pools&quot;, &quot;version&quot;: 8&#125;]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s上用ceph-rbd存储]]></title>
    <url>%2Fposts%2F0ijfj445.html</url>
    <content type="text"><![CDATA[k8s默认使用的本地存储，集群容灾性差，ceph作为开源的分布式存储系统，与openstack环境搭配使用，已经很多云计算公司运用于生产环境，可靠性得到验证。这里介绍一下在k8s环境下ceph如何使用. Kubernetes支持后两种存储接口,支持的接入模式如下图: ceph端新建pool新建一个pool pool_1包含90个pg 1ceph osd pool create pool_1 90 RBD块设备在ceph集群中新建1个rbd块设备，lun1 1rbd create pool_1/lun1 --size 10G ceph权限控制123456789101112131415161718192021使用ceph-deploy --overwrite-conf admin部署的keyring权限太大，可以自己创建一个keyring client.rdb给块设备客户端node用# ceph auth get-or-create client.rbd mon &apos;allow r&apos; osd &apos;allow class-read object_prefix rbd_children, allow rwx pool=pool_1&apos; &gt; ceph.client.rbd.keyringk8s节点需要安装cephyum install ceph-commonecho &apos;rbd&apos; &gt; /etc/modules-load.d/rbd.confmodprobe rbdlsmod | grep rbdrbd 83640 0 libceph 306625 1 rbd配置文件秘钥传到k8s上[root@ceph ceph]# scp ceph.client.rbd.keyring 192.168.6.102:/etc/ceph/root@192.168.6.102&apos;s password: ceph.client.rdb.keyring 100% 63 8.5KB/s 00:00 [root@ceph ceph]# scp ceph.conf 192.168.6.102:/etc/ceph/ root@192.168.6.102&apos;s password: ceph.conf 100% 310 25.1KB/s 00:00 [root@ceph ceph]# k8s的node上操作1234567891011121314151617181920[root@node1 ceph]# ceph -s --name client.rdb cluster: id: cbc04385-1cdf-4512-a3f5-a5b3e8686a05 health: HEALTH_WARN application not enabled on 1 pool(s) services: mon: 1 daemons, quorum ceph mgr: ceph(active) osd: 1 osds: 1 up, 1 in data: pools: 1 pools, 90 pgs objects: 5 objects, 709B usage: 1.00GiB used, 19.0GiB / 20.0GiB avail pgs: 90 active+clean 警告解决办法：ceph health detailceph osd pool application enable pool_1 rbd map设备123456789# rbd map pool_1/lun1 --name client.rbdrbd: sysfs write failedRBD image feature set mismatch. Try disabling features unsupported by the kernel with &quot;rbd feature disable&quot;.In some cases useful info is found in syslog - try &quot;dmesg | tail&quot;.rbd: map failed: (6) No such device or address解决办法：在ceph节点上rbd feature disable pool_1/lun1 exclusive-lock, object-map, fast-diff, deep-flatten 将块设备挂载在操作系统中进行格式化12rbd map pool_1/lun1 --name client.rbdmkfs.ext4 /dev/rbd0 创建pv、pvc123对ceph.client.admin.keyring 的内容进行base64编码[root@node1 ceph]# ceph auth get-key client.rbd | base64QVFCTktERmRzeXpKQUJBQVVvVGVvWVYyamxhRi8zNU1hZ2R2dFE9PQ== 123456789101112根据上面的输出，创建secret ceph-client-rbd[root@node1 ceph]# cat ceph-secret.yml apiVersion: v1kind: Secretmetadata: name: ceph-client-rbdtype: &quot;kubernetes.io/rbd&quot; data: key: QVFCTktERmRzeXpKQUJBQVVvVGVvWVYyamxhRi8zNU1hZ2R2dFE9PQ== kubectl apply -f ceph-secret.yml 123456789101112131415161718192021222324252627282930创建pv，注意： 这里是user：rbd 而不是user: client.rbd[root@node1 ceph]# cat pv.yml kind: PersistentVolumeapiVersion: v1metadata: name: ceph-pool1-lun1spec: storageClassName: manual capacity: storage: 10Gi accessModes: - ReadWriteOnce rbd: fsType: ext4 image: lun1 monitors: - &apos;192.168.6.101:6789&apos; pool: pool_1 readOnly: false secretRef: name: ceph-client-rbd namespace: default user: rbd [root@node1 ceph]# kubectl apply -f pv.yml persistentvolume/ceph-pool1-lun1 created[root@node1 ceph]# kubectl get pvNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEceph-pool1-lun1 10Gi RWO Retain Available manual 4s 12345678910111213141516171819202122创建pvc[root@node1 ceph]# cat pvc.yml kind: PersistentVolumeClaimapiVersion: v1metadata: name: pvc1spec: storageClassName: manual accessModes: - ReadWriteOnce resources: requests: storage: 10Gi [root@node1 ceph]# kubectl apply -f pvc.yml persistentvolumeclaim/pvc1 created[root@node1 ceph]# kubectl get pvcNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEpvc1 Bound ceph-pool1-lun1 10Gi RWO manual 7s]]></content>
      <categories>
        <category>ceph</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[ceph对象存储集群部署]]></title>
    <url>%2Fposts%2Fouy564tra.html</url>
    <content type="text"><![CDATA[集群架构12345192.168.10.186 ceph1 admin、mon、mgr、osd、rgw192.168.10.187 ceph2 mon、mgr、osd、rgw 192.168.10.188 ceph3 mon、mgr、osd、rgw 部署123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263[root@10dot186 ~]# vim /etc/hosts192.168.10.186 ceph1192.168.10.187 ceph2192.168.10.188 ceph3hostnamectl set-hostname ceph1hostnamectl set-hostname ceph2hostnamectl set-hostname ceph3ntpdate ntp1.aliyun.comssh-keygenssh-copy-id ceph1ssh-copy-id ceph2ssh-copy-id ceph3[root@ceph1 ~]# vim /etc/yum.repos.d/ceph.repo[ceph]name=Ceph packages for $basearchbaseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/$basearchenabled=1gpgcheck=1priority=1type=rpm-mdgpgkey=https://mirrors.aliyun.com/ceph/keys/release.asc[ceph-noarch]name=Ceph noarch packagesbaseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/noarchenabled=1gpgcheck=1priority=1type=rpm-mdgpgkey=https://mirrors.aliyun.com/ceph/keys/release.asc[ceph-source]name=Ceph source packagesbaseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/SRPMSenabled=0gpgcheck=1type=rpm-mdgpgkey=https://mirrors.aliyun.com/ceph/keys/release.ascpriority=1yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpmyum makecacheyum update -yyum install -y ceph-deploymkdir /etc/ceph &amp;&amp; cd /etc/cephceph-deploy new ceph1 ceph2 ceph3yum install -y python-setuptools 123456在配置文件中增加：osd_pool_default_size = 3[mgr]mgr modules = dashboard[mon]mon allow pool delete = true mon123456789101112131415161718192021ceph-deploy install ceph1 ceph2 ceph3ceph-deploy mon create-initial[root@ceph1 ceph]# ceph -s cluster: id: fcb2fa5e-481a-4494-9a27-374048f37113 health: HEALTH_OK services: mon: 3 daemons, quorum ceph1,ceph2,ceph3 mgr: no daemons active osd: 0 osds: 0 up, 0 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0B usage: 0B used, 0B / 0B avail pgs: mgr123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148ceph-deploy mgr create ceph1 ceph2 ceph3[root@ceph1 ceph]# ceph -s cluster: id: fcb2fa5e-481a-4494-9a27-374048f37113 health: HEALTH_OK services: mon: 3 daemons, quorum ceph1,ceph2,ceph3 mgr: ceph1(active), standbys: ceph2, ceph3 osd: 0 osds: 0 up, 0 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0B usage: 0B used, 0B / 0B avail pgs: [root@ceph1 ceph]# ceph mgr dump&#123; &quot;epoch&quot;: 4, &quot;active_gid&quot;: 4122, &quot;active_name&quot;: &quot;ceph1&quot;, &quot;active_addr&quot;: &quot;192.168.10.186:6800/22316&quot;, &quot;available&quot;: true, &quot;standbys&quot;: [ &#123; &quot;gid&quot;: 4129, &quot;name&quot;: &quot;ceph2&quot;, &quot;available_modules&quot;: [ &quot;balancer&quot;, &quot;dashboard&quot;, &quot;influx&quot;, &quot;localpool&quot;, &quot;prometheus&quot;, &quot;restful&quot;, &quot;selftest&quot;, &quot;status&quot;, &quot;zabbix&quot; ] &#125;, &#123; &quot;gid&quot;: 4132, &quot;name&quot;: &quot;ceph3&quot;, &quot;available_modules&quot;: [ &quot;balancer&quot;, &quot;dashboard&quot;, &quot;influx&quot;, &quot;localpool&quot;, &quot;prometheus&quot;, &quot;restful&quot;, &quot;selftest&quot;, &quot;status&quot;, &quot;zabbix&quot; ] &#125; ], &quot;modules&quot;: [ &quot;balancer&quot;, &quot;restful&quot;, &quot;status&quot; ], &quot;available_modules&quot;: [ &quot;balancer&quot;, &quot;dashboard&quot;, &quot;influx&quot;, &quot;localpool&quot;, &quot;prometheus&quot;, &quot;restful&quot;, &quot;selftest&quot;, &quot;status&quot;, &quot;zabbix&quot; ], &quot;services&quot;: &#123;&#125;&#125;[root@ceph1 ceph]# ceph mgr module enable dashboard[root@ceph1 ceph]# ceph mgr dump&#123; &quot;epoch&quot;: 7, &quot;active_gid&quot;: 4139, &quot;active_name&quot;: &quot;ceph1&quot;, &quot;active_addr&quot;: &quot;192.168.10.186:6800/22316&quot;, &quot;available&quot;: true, &quot;standbys&quot;: [ &#123; &quot;gid&quot;: 4136, &quot;name&quot;: &quot;ceph3&quot;, &quot;available_modules&quot;: [ &quot;balancer&quot;, &quot;dashboard&quot;, &quot;influx&quot;, &quot;localpool&quot;, &quot;prometheus&quot;, &quot;restful&quot;, &quot;selftest&quot;, &quot;status&quot;, &quot;zabbix&quot; ] &#125;, &#123; &quot;gid&quot;: 4141, &quot;name&quot;: &quot;ceph2&quot;, &quot;available_modules&quot;: [ &quot;balancer&quot;, &quot;dashboard&quot;, &quot;influx&quot;, &quot;localpool&quot;, &quot;prometheus&quot;, &quot;restful&quot;, &quot;selftest&quot;, &quot;status&quot;, &quot;zabbix&quot; ] &#125; ], &quot;modules&quot;: [ &quot;balancer&quot;, &quot;dashboard&quot;, &quot;restful&quot;, &quot;status&quot; ], &quot;available_modules&quot;: [ &quot;balancer&quot;, &quot;dashboard&quot;, &quot;influx&quot;, &quot;localpool&quot;, &quot;prometheus&quot;, &quot;restful&quot;, &quot;selftest&quot;, &quot;status&quot;, &quot;zabbix&quot; ], &quot;services&quot;: &#123;&#125;&#125;[root@ceph1 ceph]# ceph config-key put mgr/dashboard/server_addr 192.168.6.101set mgr/dashboard/server_addr[root@ceph1 ceph]# ceph config-key put mgr/dashboard/server_port 7000set mgr/dashboard/server_port[root@ceph1 ~]# netstat -tulnp |grep 7000tcp 0 0 192.168.6.101:7000 0.0.0.0:* LISTEN 19836/ceph-mgr 这时看下danshboard图： osd1234567891011121314151617181920212223242526272829303132每台机器做逻辑卷[root@ceph1 ceph]# pvcreate /dev/sdb Physical volume &quot;/dev/sdb&quot; successfully created.[root@ceph1 ceph]# vgcreate data_vg1 /dev/sdb Volume group &quot;data_vg1&quot; successfully created [root@ceph1 ceph]# lvcreate -n data_lv1 -L 99g data_vg1 Logical volume &quot;data_lv1&quot; created. ceph-deploy osd create ceph1 --data data_vg1/data_lv1ceph-deploy osd create ceph2 --data data_vg1/data_lv1ceph-deploy osd create ceph3 --data data_vg1/data_lv1[root@ceph1 ceph]# ceph -s cluster: id: fcb2fa5e-481a-4494-9a27-374048f37113 health: HEALTH_OK services: mon: 3 daemons, quorum ceph1,ceph2,ceph3 mgr: ceph1(active), standbys: ceph3, ceph2 osd: 3 osds: 3 up, 3 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0B usage: 3.01GiB used, 294GiB / 297GiB avail pgs: 这时看下danshboard图： rgw集群12345678910111213141516171819202122ceph-deploy install --rgw ceph1 ceph2 ceph3ceph-deploy admin ceph1 ceph2 ceph3ceph-deploy rgw create ceph1 ceph2 ceph3[root@ceph1 ceph]# ceph -s cluster: id: fcb2fa5e-481a-4494-9a27-374048f37113 health: HEALTH_OK services: mon: 3 daemons, quorum ceph1,ceph2,ceph3 mgr: ceph1(active), standbys: ceph3, ceph2 osd: 3 osds: 3 up, 3 in rgw: 3 daemons active data: pools: 4 pools, 32 pgs objects: 191 objects, 3.08KiB usage: 3.01GiB used, 294GiB / 297GiB avail pgs: 32 active+clean 这时看下danshboard图： NGINX代理12345678910111213141516171819202122安装这里就不介绍了[root@ceph1 conf.d]# cat cephcloud.dev.goago.cn.conf upstream cephcloud.dev.goago.cn &#123; server 192.168.10.186:7480; server 192.168.10.187:7480; server 192.168.10.188:7480; &#125; server &#123; listen 80; server_name cephcloud.dev.goago.cn; location / &#123; proxy_intercept_errors on; access_log /var/log/nginx/cephcloud_log; proxy_pass http://cephcloud.dev.goago.cn; proxy_set_header X-Real-IP $remote_addr; proxy_set_header Host $host; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header Request_Uri $request_uri; &#125; &#125; s3和swift1234567891011121314具体安装这里不叙述了，可以看我上篇文章New settings: Access Key: M954JYYAOBES65B7UNEZ Secret Key: 11MZu3N9vB4S4C4N8U2Ywgkhxro3Xi6K9HPyRQ9v Default Region: US S3 Endpoint: cephcloud.dev.goago.cn DNS-style bucket+hostname:port template for accessing a bucket: %(bucket)s.cephcloud.dev.goago.cn bucket Encryption password: 123456 Path to GPG program: /usr/bin/gpg Use HTTPS protocol: False HTTP Proxy server name: HTTP Proxy server port: 0]]></content>
      <categories>
        <category>ceph</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[ceph-luminous-bluestore]]></title>
    <url>%2Fposts%2F78fhjj54.html</url>
    <content type="text"><![CDATA[对比1234567891011ceph后端支持多种存储引擎，以插件化的形式来进行管理使用，目前支持filestore，kvstore，memstore以及bluestore1）Firestore存在的问题是：在写数据前需要先写journal，会有一倍的写放大；若是另外配备SSD盘给journal使用又增加额外的成本；filestore一开始只是对于SATA/SAS这一类机械盘进行设计的，没有专门针对SSD这一类的Flash介质盘做考虑。2）而Bluestore的优势在于：减少写放大；针对FLASH介质盘做优化；直接管理裸盘，进一步减少文件系统部分的开销。 Bluestore原理说明123对象可以直接存放在裸盘上，不需要任何文件系统接口。BlueStore 直接使用一个原始分区，ceph对象将直接写在块设备上，不再需要任何的文件系统；和osd一起进来的元数据将存储在 一个 名为 RocksDB 的键值对 数据库； 各层意义1234RocksDB ：存储 WAL 日志和元数据（omap）BlueRocksEnv: 与RocksDB 交互的接口BlueFS： 一个类似文件系统的 mini C++，使 rocksdb 生效，ENv 接口（存储 RocksDB 日志和 sst 文件）；因为rocksdb 一般跑在一个文件系统的上层，所以创建了 BlueFS。 RocksDB 存放的数据类型1234对象的元数据write-ahead 日志ceph omap 数据allocator metadata(元数据分配器)：决定数据存放位置；此功能可插拔 默认BlueStore模型123第一个小分区（XFS或者ext4）,包括ceph files （init system descriptor,status,id,fsid,keyring 等）和RocksDB 文件第二个分区是一个原始分区 优点1每一部分都可以存放在不同的磁盘中，RocksDB WAL 和 DB 可以存放在不同的磁盘或者小分区中 添加osd案例1由于Luminous里默认使用Bluestore，可以直接操作裸盘,data和block-db会使用lv。综合成本及性能，我们把block.db使用ssd的分区，osd仍然使用sas，block.wal不指定. 这里vdb作为osd盘，vdc作为block-db盘 123456789101112131415161718192021222324252627首先ssh到各个存储节点，block.db使用的ssd分区,这里node1举例：# ssh node1# pvcreate /dev/vdb # 创建pv, 这里使用的整块磁盘(与后面的分区对比), pvs 查看pv列表Physical volume &quot;/dev/vdb&quot; successfully created.# vgcreate data_vg1 /dev/vdb # 创建vg, vgs查看vg列表Volume group &quot;data_vg1&quot; successfully created# lvcreate -n data_lv1 -L 1020.00m data_vg1 #创建lv,lvs查看lv列表, -n指定lv名称, -L指定lv的大小,需要小于或者等于vg的VSizeLogical volume &quot;data_lv1&quot; created.---------------------------------------------生产环境一块ssd磁盘会对应多块osd，所以这里也需要把ssd多个分区# parted /dev/vdc (parted) mklabel gpt (parted) mkpart primary 0% 25% #因为测试，这里只做了一个占据磁盘25%容量的分区，实际情况根据osd数目划分相应的分区数(parted) quit# pvcreate /dev/vdc1 # 创建pv, 这里使用的是磁盘分区, pvs 查看pv列表Physical volume &quot;/dev/vdc1&quot; successfully created.# vgcreate block_db_vg1 /dev/vdc1 # 创建vg, vgs查看vg列表Volume group &quot;block_db_vg1&quot; successfully created# lvcreate -n block_db_lv1 -L 1020.00m block_db_vg1 # 创建lv, lvs查看lv列表, -L指定lv的大小，需要小于或者等于 vg的VSizeLogical volume &quot;block_db_lv1&quot; created.---------------------------------------------# 不需要加--bluestore 参数，默认就是使用bluestore方式，data_vg1/data_lv1 是数据盘，block_db_vg1/block_db_lv1是block-db管理节点执行：ceph-deploy --overwrite-conf osd create node1 --data data_vg1/data_lv1 --block-db block_db_vg1/block_db_lv1ceph-deploy --overwrite-conf osd create node2 --data data_vg1/data_lv1 --block-db block_db_vg1/block_db_lv1 案例2创建具有3个逻辑卷的OSD（模拟不同类型的存储介质） 12345678910#pvcreate /dev/sdb Physical volume &quot;/dev/sdb&quot; successfully created.#vgcreate ceph-pool /dev/sdb Volume group &quot;ceph-pool&quot; successfully created#lvcreate -n osd0.wal -L 1G ceph-pool Logical volume &quot;osd0.wal&quot; created.# lvcreate -n osd0.db -L 1G ceph-pool Logical volume &quot;osd0.db&quot; created.# lvcreate -n osd0 -l 100%FREE ceph-pool Logical volume &quot;osd0&quot; created. 完成逻辑卷的创建后我们就可以创建 OSD 了。 12345ceph-deploy osd create \ --data ceph-pool/osd0 \ --block-db ceph-pool/osd0.db \ --block-wal ceph-pool/osd0.wal \ --bluestore node1 wal&amp; db 的大小问题123在 ceph bluestore 的情况下，wal 是 RocksDB 的write-ahead log, 相当于之前的 journal 数据，db 是 RocksDB 的metadata 信息。在磁盘选择原则是 block.wal &gt; block.db &gt; block。当然所有的数据也可以放到同一块盘上。默认情况下， wal 和 db 的大小分别是 512 MB 和 1GB，现在没有一个好的理论值，好像和 ceph 本身承载的数据类型有关系。值得注意的是，如果所有的数据都在单块盘上，那是没有必要指定 wal &amp;db 的大小的。如果 wal &amp; db 是在不同的盘上，由于 wal/db 一般都会分的比较小，是有满的可能性的。如果满了，这些数据会迁移到下一个快的盘上(wal - db - main)。所以最少不会因为数据满了，而造成无法写入。]]></content>
      <categories>
        <category>ceph</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[ceph的pg算法]]></title>
    <url>%2Fposts%2Ffd22jkk6.html</url>
    <content type="text"><![CDATA[PG介绍PG, Placement Groups。CRUSH先将数据分解成一组对象，然后根据对象名称、复制级别和系统中的PG数等信息执行散列操作，再将结果生成PG ID。可以将PG看做一个逻辑容器，这个容器包含多个对象，同时这个逻辑对象映射之多个OSD上。如果没有PG，在成千上万个OSD上管理和跟踪数百万计的对象的复制和传播是相当困难的。没有PG这一层，管理海量的对象所消耗的计算资源也是不可想象的。建议每个OSD上配置50~100个PG。 计算PG数官方推荐如下： Ceph集群中的PG总数： 1PG总数 = (OSD总数 * 100) / 最大副本数 结果必须舍入到最接近的2的N次方幂的值。 Ceph集群中每个pool中的PG总数： 1存储池PG总数 = (OSD总数 * 100 / 最大副本数) / 池数 平衡每个存储池中的PG数和每个OSD中的PG数对于降低OSD的方差、避免速度缓慢的恢复再平衡进程是相当重要的。 修改PG和PGPPGP是为了实现定位而设置的PG，它的值应该和PG的总数(即pg_num)保持一致。对于Ceph的一个pool而言，如果增加pg_num，还应该调整pgp_num为同样的值，这样集群才可以开始再平衡。参数pg_num定义了PG的数量，PG映射至OSD。当任意pool的PG数增加时，PG依然保持和源OSD的映射。直至目前，Ceph还未开始再平衡。此时，增加pgp_num的值，PG才开始从源OSD迁移至其他的OSD，正式开始再平衡。PGP，Placement Groups of Placement。 获取现有的PG数和PGP数值： 123ceph osd pool get data pg_numceph osd pool get data pgp_num 检查存储池的副本数 1ceph osd dump|grep -i size 计算pg_num和pgp_num 123456789# pg_num calculationpg_num = (num_osds * 100) / num_copiesnum_up = pow(2, int(log(pg_num,2) + 0.5))num_down = pow(2, int(log(pg_num,2)))if abs(pg_num - num_up) &lt;= abs(pg_num - num_down): pg_num = num_upelse: pg_num = num_downpgp_num = pg_num 修改存储池的PG和PGP 123ceph osd pool set data pg_num ceph osd pool set data pgp_num 例子： 123ceph osd pool lsceph osd pool set .rgw.root pg_num 16ceph osd pool set .rgw.root pgp_num 16]]></content>
      <categories>
        <category>ceph</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[ceph组件的状态]]></title>
    <url>%2Fposts%2Fdsl5646k.html</url>
    <content type="text"><![CDATA[Ceph 整体状态查看123ceph -s #ceph状态是否正常，及配置运行状态ceph -w #实时查看数据写入情况ceph health detail #如果集群有问题，会详细列出具体的pg或者osd monmon相关状态1ceph quorum_status -f json-pretty client 无法链接mon的可能原因 连通性和防火墙规则。在MON主机上修改允许TCP 端口6789的访问。 磁盘空间。每个MON主机上必须有超过5%的空闲磁盘空间使MON和levelDB数据库正常工作。 MON没有工作或者离开选举，检查如上命令输出结果中的quorum_status和mon_status或者ceph -s 的输出来确定失败的MON进程，尝试重启或者部署一个新的来替代它。 MON 状态表 状态 说明 probing 正在探测态。这意味着MON正在寻找其他的MON。当MON启动时， MON尝试找在monmap定义的其他剩余的MON。在多MON的集群中，直到MON找到足够多的MON构建法定选举人数之前，它一直在这个状态。这意味着如果3个MON中的2个挂掉，剩余的1个MON将一直在probing状态，直到启动其他的MON中的1个为止。 electing 正在选举态。这意味着MON正在选举中。这应该很快完成，但有时也会卡在正这，这通常是因为MON主机节点间的时钟偏移导致的. synchronizing 正在同步态。这意味着MON为了加入到法定人数中和集群中其他的MON正在同步. leader或peon 领导态或员工态。这不应该出现。然而有机会出现，一般和时钟偏移有很大关系 时钟偏移警告MON可能被MON节点之间的重要的时钟偏移激烈的影响。这经常会转变为没有明显原因的诡异的行为。为了避免这种问题，应该在MON节点上运行一个时间同步的工具。默认最大容忍的时钟偏移为0.05s，虽然可以修改，但不建议修改，这是官方开发和QA认可的值。私自未经测试修改虽然无数据丢失风险，可能会对MON集群和总体集群健康导致意外的作用。 如果遇到这个告警，同步时钟，在MON上运行NTP的客户端会有帮助。如果经常遇到这个问题，可能是因为使用了远端的NTP服务器，请考虑在内网部署NTP服务器。 OSDOSD 状态表 状态 说明 up osd启动 down osd停止 in osd在集群中 out osd不在集群中，默认OSD down 超过300s,Ceph会标记为out，会触发重新平衡操作 up &amp; in 说明该OSD正常运行，且已经承载至少一个PG的数据。这是一个OSD的标准工作状态 up &amp; out 说明该OSD正常运行，但并未承载任何PG，其中也没有数据。一个新的OSD刚刚被加入Ceph集群后，便会处于这一状态。而一个出现故障的OSD被修复后，重新加入Ceph集群时，也是处于这一状态 down &amp; in 说明该OSD发生异常，但仍然承载着至少一个PG，其中仍然存储着数据。这种状态下的OSD刚刚被发现存在异常，可能仍能恢复正常，也可能会彻底无法工作 down &amp; out 说明该OSD已经彻底发生故障，且已经不再承载任何PG 常见问题 硬盘失败。可以通过系统日志或SMART活动确认。有些有缺陷的硬盘因为密集的有时限的错误修复活动变的很慢。 网络连接问题。可以使用ping、iperf等普通网络工具进行调试。 OSD文件存储的磁盘空间不足。 磁盘到85%将会触发HEALTH_WARN告警。磁盘到95%会触发HEALTH_ERR告警，OSD为了避免填满磁盘会停止。 超过系统资源限制。系统内存应该足够主机上所有的OSD进程，打开文件句柄数和最大线程数也应该是足够的。OSD进程处理心跳的限制导致进程自杀。默认的处理和通信超时不足以执行IO饥饿型的操作，尤其是失败后的恢复。这经常会导致OSD闪断的现象出现。 暂时关闭pg重新平衡在维护操作或解决问题时，不希望在停止一些OSD后，超时的OSD被标记为out后，CRUSH算法自动进行重新平衡操作。需要执行集群关闭out检测命令： 1ceph osd set noout 这样在停止的OSD中的PG会变为降级态。当维护操作完成后，需要先启动停止的OSD，再恢复默认设置： 1ceph osd unset noout 老/慢 请求如果一个OSD服务进程很慢地响应请求。它会产生一个请求耗时过久超过30秒的警告提示信息。 12&#123;date&#125; &#123;osd.num&#125; [WRN] 1 slow requests, 1 included below; oldest blocked for &gt; 30.005692 secs&#123;date&#125; &#123;osd.num&#125; [WRN] slow request 30.005692 seconds old, received at &#123;date-time&#125;: osd_op(client.4240.0:8 benchmark_data_ceph-1_39426_object7 [write 0~4194304] 0.69848840) v4 currently waiting for subops from [610] 可能的原因和修复方法包括： 硬盘故障（检查dmesg的输出信息）；替换为正常的硬盘 内核文件系统bug（检查dmesg的输出信息确）；升级内核 集群负载过高（检查系统负载、iostat等）；机器扩容，尝试降低系统负载 ceph-osd服务进程的的bug；升级ceph或重启OSD OSD 闪断OSD重启或恢复中后，OSD在peering状态一直闪断。因为IO密集型的任务导致影响心跳检测异常，你可以暂时为集群通过打开nodown noup选项。执行命令： 123ceph osd set nodown ceph osd set noup ceph osd set noout 当集群健康稳定后，执行如下命令恢复默认值： 123ceph osd unset nodown ceph osd unset noup ceph osd unset noout 确认磁盘损坏检查日志，执行如下命令： 123456789dmesg | egrep sd[a­]eg:dmesg |egrep sda通过smartctl提取信息和执行测试检查可疑的设备:smartctl a /dev/sda通过观察响应时间确认。任何磁盘持续显示不常见的值可能会失败：iostat x /dev/sda ###替换osd数据磁盘当集群规模比较大，磁盘出硬件故障是一个常态。为了维持集群规模稳定，必须及时的修复因硬盘故障停止的OSD。 因为Ceph采用了多个副本的策略，一般情况下，不需要恢复坏掉硬盘的数据。用一个新硬盘初始化一个OSD即可。操作步骤如下： 123456789101112131415161718192021222324两种情况：a. 如果磁盘坏掉osd会标记为down，默认300秒osd会被标记为out，数据会开始迁移。所以我们替换osd数据磁盘，确保数据迁移完成，集群状态是ok。b. 如果磁盘将要损坏，但还没有坏，仍然是up&amp;in的，则需要先把该osd 设置为out: ceph osd out osd.0,这样集群会把osd.0的数据 rebalancing and copying到其他机器上去。直到整个集群编程active+clean，再进行后续操作1. 关闭 osd.0的进程systemctl stop ceph-osd@02. 删除旧osd信息(osd.0为例)：ceph osd crush remove osd.0ceph auth del osd.0ceph osd rm 03. 创建新osda. ceph osd create #会自动生成uuid和osd-numberb. ssh &#123;new_osd_host&#125;c. sudo mkdir /var/lib/ceph/osd/ceph-&#123;osd-number&#125; #上一步生成的osd-numberd. 分区 通过parted把osd的磁盘分区为一个分区e. sudo mkfs -t xfs /dev/&#123;drive&#125; # 上一步分区f. sudo mount /dev/&#123;sdx&#125; /var/lib/ceph/osd/ceph-&#123;osd-number&#125;g. ceph-osd -i &#123;osd-number&#125; --mkfs --mkkey # 初始化osd数据目录目录必须为空h. ceph auth add osd.&#123;osd-number&#125; osd &apos;allow *&apos; mon &apos;allow rwx&apos; -i /var/lib/ceph/osd/ceph-&#123;osd-number&#125;/keyring #注册认证keyi. ceph osd crush add osd.&#123;osd-number&#125;# 添加osd到crush map，则该osd可以接受数据了，这个时候osd的状态为 down &amp; in。ceph osd crush add osd.0 1.0 host=bj-yh-ceph-node2j. systemctl start ceph-osd@&#123;osd-number&#125; # 启动osd进程，数据会rebalancing and migrating 到新的osd上 替换ssd日志磁盘由于我们使用过程中，一块ssd分4个区，给4个osd使用，所以如果ssd日志磁盘坏掉，需要给对应的osd都要操作 123456789101112131415161718192021222324252627281. 设置OSD状态为noout，防止数据重新平衡ceph osd set noout2. 停止osd进程ssh &#123;ssd所在节点&#125;systemctl stop ceph-osd@x #ssd所对应的osds3. 日志数据落盘到数据盘ceph-osd -i &#123;osd-number&#125; --flush-journal #该ssd日志分区所对应的所有osd-number4. 删除日志链接rm -rf /var/lib/ceph/osd/&#123;osd-number&#125;/journal # #该ssd日志分区所对应的所有osd-number5. 创建日志链接ln -s /dev/disk/by-partuuid/&#123;uuid&#125; /var/lib/ceph/osd/ceph-&#123;osd-number&#125;/journal # 注意别把使用中的分区给绑定错了chown ceph:ceph /var/lib/ceph/osd/ceph-&#123;osd-number&#125;/journalecho &#123;uuid&#125; &gt; /var/lib/ceph/osd/ceph-&#123;osd-number&#125;/journal_uuid #前面/dev/disk/by-partuuid/&#123;uuid&#125; uuid6. 创建日志ceph-osd -i &#123;osd-number&#125; --mkjournal7. 启动osd进程systemctl start ceph-osd@&#123;osd-number&#125;如果所有osd进程都起来了8. 去除noout的标记ceph osd set noout PGceph health detail #正常会返回 ok PG 状态表正常是active+clean 状态 描述 active 活跃状态。ceph将处理到达这个PG的读写请求 unactive 非活跃状态。该PG不能处理读写请求 clean 干净状态。Ceph复制PG内所有对象到设定正确的数目 unclean 非干净状态。PG不能从上一个失败中恢复 down 离线状态。有必需数据的副本挂掉，比如对象所在的3个副本的OSD挂掉，所以PG离线 degraded 降级状态。ceph有些对象的副本数目没有达到系统设置，一般是因为有OSD挂掉 inconsistent 不一致态。Ceph 清理和深度清理后检测到PG中的对象在副本存在不一致，例如对象的文件大小不一致或recovery结束后一个对象的副本丢失 peering 正在同步状态。PG正在执行同步处理 recovering 正在恢复状态。Ceph正在执行迁移或同步对象和他们的副本 incomplete 未完成状态。实际的副本数少于min_size。Ceph检测到PG正在丢失关于已经写操作的信息，或者没有任何健康的副本。如果遇到这种状态，尝试启动失败的OSD，这些OSD中可能包含需要的信息或者临时调整副本min_size的值到允许恢复。 stale 未刷新状态。PG状态没有被任何OSD更新，这说明所有存储这个PG的OSD可能down backfilling 正在后台填充状态。 当一个新的OSD加入集群后，Ceph通过移动一些其他OSD上的PG到新的OSD来达到新的平衡；这个过程完成后，这个OSD可以处理客户端的IO请求。 remapped 重新映射状态。PG活动集任何的一个改变，数据发生从老活动集到新活动集的迁移。在迁移期间还是用老的活动集中的主OSD处理客户端请求，一旦迁移完成新活动集中的主OSD开始处理。 PG 长时间卡在一些状态遇到失败后PG进入如 “degraded” 或 “peering”的状态是正常的。通常这些状态指示失败恢复处理过程中的正常继续。然而，一个PG长时间保持在其中一些状态可能是一个更大问题的提示。因此，MON当PG卡在一个非正常态时会警告。 我们特别地检查： inactive : PG太长时间不在active态，例如PG长时间不能处理读写请求，通常是peering的问题。 unclean : PG太长时间不在clean态，例如PG不能完成从上一个失败的恢复，通常是unfound objects导致。 stale : PG状态未被OSD更新，表示所有存储PG的OSD可能挂掉，一般启动相应的OSD进程即可。 在MON节点执行如下命令，可以明确列出卡住的PG： 123ceph pg dump_stuck staleceph pg dump_stuck inactiveceph pg dump_stuck unclean 123456789Ceph清理和深度清理后到PG处于inconsistent态：清理操作被用来检查对象的可用性和健康状态。当集群没有IO密集型（例如恢复）的操作时PG被清理，已经执行清理操作再执行IO密集操作，然而清理操作继续。如果清理任务发现任何对象有损坏或者不匹配的数据（校验和检测），它将标记这个对象为不能使用并且需要手动介入和恢复。OSD执行写操作时计算校验和，Ceph并不能武断地决定副本中的哪个校验和是正确的。例如有3个副本的校验和，有1个不同，很容易猜出应该修复的错误副本（从其他副本恢复），但是当有3个不同的校验和或者一些比特错误，我们不能武断的说哪个是好的。这不是一个端到端的数据修正检查。手动修复损坏的pg1. 找到有不一致对象的PG， 执行如下命令 ceph pg dump | grep inconsistent 或者 ceph health detail2. 当主副本是正确数据时，执行修复命令。或者通过在OSD的硬盘上手动复制正确的文件覆盖掉错误的文件。 ceph pg repair &#123;pgnum&#125; 注意：如果主副本错误，应该使用手动修复，如果通过命令修复则会把主副本的错误数据复制到其他副本。 incomplete PG这个告警是因为实际副本数少于min_size。可能是由于PG对应的OSD挂掉导致。尝试启动挂掉的OSD。 stale PG简单地重启受影响的OSD。当一个OSD不能映射它持有所有的对象时这个问题发生,执行如下操作： 找到PG 1ceph pg dump_stuck stale 映射pg，找到osd： 1ceph pg map &#123;pgname&#125; 重启上面的osd 12ssh &#123;osd-node&#125;systemctl restart ceph-osd@&#123;osd-number&#125; peering 和 down PG 找到受影响的pg 1ceph health detail 下面命令响应结果中的 [“recovery_state”][“blocked”]部分显示peering被停止 的原因,大多数的情况都是一些OSD挂掉。 1ceph pg &#123;pgname&#125; query 尝试重启上面挂掉的OSD，如果无法启动，应该为执行如下命令标记为lost，让恢复操作开始。 1ceph osd lost &#123;osd-number&#125; unfound objects在特殊的失败组合下Ceph会警告unfound objects。这意味着存储集群知道有些对象存在，但是却无法找到它的副本。下面的例子说明这是怎么发生的，有1个PG他映射的的OSD是 1和2： OSD 1挂掉 OSD 2单独处理一些请求 OSD 1运行 OSD 1和2重新peering，1上丢失的对象在队列中等待恢复 在新对象之前被复制之前，OSD2挂掉现在OSD 1知道一些对象存在，但是没有这个副本活的OSD。 这种情况下，到这些对象的IO将被阻塞，集群希望失败的OSD快速地回来。这时假设返回一个IO错误给用户是适当的。修复建议： 启动停止的osd 如果还无法恢复，你可能只有放弃丢失的对象。执行如下命令回滚或删除对象： 123456ceph pg &#123;pgname&#125; mark_unfound_lost revert|deleterevert选项：回滚到对象的前一个版本delete选项：完全删除这个对象使用这个操作时注意，因为它可能是使预期存在这个对象的程序混乱。列出带有丢失对象的PG的名字：ceph pg &#123;pgname&#125; list_missing]]></content>
      <categories>
        <category>ceph</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[ceph对象存储]]></title>
    <url>%2Fposts%2Fdld987c6.html</url>
    <content type="text"><![CDATA[Ceph RGW简介Ceph RGW(即RADOS Gateway)是Ceph对象存储网关服务，是基于LIBRADOS接口封装实现的FastCGI服务，对外提供存储和管理对象数据的Restful API。 对象存储适用于图片、视频等各类文件的上传下载，可以设置相应的访问权限。目前Ceph RGW兼容常见的对象存储API，例如兼容绝大部分Amazon S3 API，兼容OpenStack Swift API。 部署 RGW 服务1234567891011121314151617181920[root@ceph1 ceph]# ceph-deploy install --rgw ceph1[ceph_deploy.conf][DEBUG ] found configuration file at: /root/.cephdeploy.conf[ceph_deploy.cli][INFO ] Invoked (2.0.1): /usr/bin/ceph-deploy install --rgw ceph1[ceph_deploy.cli][INFO ] ceph-deploy options:[ceph_deploy.cli][INFO ] verbose : False[ceph_deploy.cli][INFO ] testing : None[ceph_deploy.cli][INFO ] cd_conf : &lt;ceph_deploy.conf.cephdeploy.Conf instance at 0x7fa3faca5e60&gt;[ceph_deploy.cli][INFO ] cluster : ceph[ceph_deploy.cli][INFO ] dev_commit : None[ceph_deploy.cli][INFO ] install_mds : False[ceph_deploy.cli][INFO ] stable : None[ceph_deploy.cli][INFO ] default_release : False[ceph_deploy.cli][INFO ] username : None[ceph_deploy.cli][INFO ] adjust_repos : True[ceph_deploy.cli][INFO ] func : &lt;function install at 0x7fa3fbb955f0&gt;[ceph_deploy.cli][INFO ] install_mgr : False[ceph_deploy.cli][INFO ] install_all : False[ceph_deploy.cli][INFO ] repo : False[ceph_deploy.cli][INFO ] host : [&apos;ceph1&apos;][ceph_deploy.cli][INFO ] install_rgw : True 将配置文件、密钥文件同步到 ceph1： 12345678910111213141516171819[root@ceph1 ceph]# ceph-deploy admin ceph1[ceph_deploy.conf][DEBUG ] found configuration file at: /root/.cephdeploy.conf[ceph_deploy.cli][INFO ] Invoked (2.0.1): /usr/bin/ceph-deploy admin ceph1[ceph_deploy.cli][INFO ] ceph-deploy options:[ceph_deploy.cli][INFO ] username : None[ceph_deploy.cli][INFO ] verbose : False[ceph_deploy.cli][INFO ] overwrite_conf : False[ceph_deploy.cli][INFO ] quiet : False[ceph_deploy.cli][INFO ] cd_conf : &lt;ceph_deploy.conf.cephdeploy.Conf instance at 0x7fe0e152d3b0&gt;[ceph_deploy.cli][INFO ] cluster : ceph[ceph_deploy.cli][INFO ] client : [&apos;ceph1&apos;][ceph_deploy.cli][INFO ] func : &lt;function admin at 0x7fe0e1dc0230&gt;[ceph_deploy.cli][INFO ] ceph_conf : None[ceph_deploy.cli][INFO ] default_release : False[ceph_deploy.admin][DEBUG ] Pushing admin keys and conf to ceph1[ceph1][DEBUG ] connected to host: ceph1 [ceph1][DEBUG ] detect platform information from remote host[ceph1][DEBUG ] detect machine type[ceph1][DEBUG ] write cluster configuration to /etc/ceph/&#123;cluster&#125;.conf 启动一个RGW服务 ： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657先将ceph.conf加一个参数配置[root@ceph1 ceph]# vim ceph.conf [global]fsid = cde3244e-89e0-4630-84d5-bf08c0e33b24mon_initial_members = ceph1mon_host = 192.168.6.101auth_cluster_required = cephxauth_service_required = cephxauth_client_required = cephxosd_pool_default_size = 2[mgr]mgr modules = dashboard[mon]mon allow pool delete = true ####有这个配置，生成的pool才可以被删除[root@ceph1 ceph]# ceph-deploy rgw create ceph1[ceph_deploy.conf][DEBUG ] found configuration file at: /root/.cephdeploy.conf[ceph_deploy.cli][INFO ] Invoked (2.0.1): /usr/bin/ceph-deploy rgw create ceph1[ceph_deploy.cli][INFO ] ceph-deploy options:[ceph_deploy.cli][INFO ] username : None[ceph_deploy.cli][INFO ] verbose : False[ceph_deploy.cli][INFO ] rgw : [(&apos;ceph1&apos;, &apos;rgw.ceph1&apos;)][ceph_deploy.cli][INFO ] overwrite_conf : False[ceph_deploy.cli][INFO ] subcommand : create[ceph_deploy.cli][INFO ] quiet : False[ceph_deploy.cli][INFO ] cd_conf : &lt;ceph_deploy.conf.cephdeploy.Conf instance at 0x7fda85404ab8&gt;[ceph_deploy.cli][INFO ] cluster : ceph[ceph_deploy.cli][INFO ] func : &lt;function rgw at 0x7fda85a53050&gt;[ceph_deploy.cli][INFO ] ceph_conf : None[ceph_deploy.cli][INFO ] default_release : False[ceph_deploy.rgw][DEBUG ] Deploying rgw, cluster ceph hosts ceph1:rgw.ceph1[ceph1][DEBUG ] connected to host: ceph1 [ceph1][DEBUG ] detect platform information from remote host[ceph1][DEBUG ] detect machine type[ceph_deploy.rgw][INFO ] Distro info: CentOS Linux 7.6.1810 Core[ceph_deploy.rgw][DEBUG ] remote host will use systemd[ceph_deploy.rgw][DEBUG ] deploying rgw bootstrap to ceph1[ceph1][DEBUG ] write cluster configuration to /etc/ceph/&#123;cluster&#125;.conf[ceph1][DEBUG ] create path recursively if it doesn&apos;t exist[ceph1][INFO ] Running command: ceph --cluster ceph --name client.bootstrap-rgw --keyring /var/lib/ceph/bootstrap-rgw/ceph.keyring auth get-or-create client.rgw.ceph1 osd allow rwx mon allow rw -o /var/lib/ceph/radosgw/ceph-rgw.ceph1/keyring[ceph1][INFO ] Running command: systemctl enable ceph-radosgw@rgw.ceph1[ceph1][INFO ] Running command: systemctl start ceph-radosgw@rgw.ceph1[ceph1][INFO ] Running command: systemctl enable ceph.target[ceph_deploy.rgw][INFO ] The Ceph Object Gateway (RGW) is now running on host ceph1 and default port 7480验证：[root@ceph1 ceph]# systemctl status ceph-radosgw@rgw.ceph1● ceph-radosgw@rgw.ceph1.service - Ceph rados gateway Loaded: loaded (/usr/lib/systemd/system/ceph-radosgw@.service; enabled; vendor preset: disabled) Active: active (running) since Thu 2019-07-11 15:03:24 CST; 9s ago Main PID: 21057 (radosgw) CGroup: /system.slice/system-ceph\x2dradosgw.slice/ceph-radosgw@rgw.ceph1.service └─21057 /usr/bin/radosgw -f --cluster ceph --name client.rgw.ceph1 --setuser ceph --setgroup cephJul 11 15:03:24 ceph1 systemd[1]: Started Ceph rados gateway. 12345678910111213141516[root@ceph1 ceph]# ceph -s cluster: id: cde3244e-89e0-4630-84d5-bf08c0e33b24 health: HEALTH_OK services: mon: 1 daemons, quorum ceph1 mgr: ceph1(active) osd: 2 osds: 2 up, 2 in rgw: 1 daemon active data: pools: 4 pools, 32 pgs objects: 187 objects, 1.09KiB usage: 2.01GiB used, 30.0GiB / 32.0GiB avail pgs: 32 active+clean 这时看下danshboard图： 使用亚马逊 s3 客户端进行访问用户创建用户 ： 1234567891011121314151617181920212223242526272829303132333435363738[root@ceph1 ceph]# radosgw-admin user create --uid=&quot;radosgw&quot; --display-name=&quot;First User&quot;&#123; &quot;user_id&quot;: &quot;radosgw&quot;, &quot;display_name&quot;: &quot;First User&quot;, &quot;email&quot;: &quot;&quot;, &quot;suspended&quot;: 0, &quot;max_buckets&quot;: 1000, &quot;auid&quot;: 0, &quot;subusers&quot;: [], &quot;keys&quot;: [ &#123; &quot;user&quot;: &quot;radosgw&quot;, &quot;access_key&quot;: &quot;CQE7E6ZDVA74KVJ0077A&quot;, &quot;secret_key&quot;: &quot;wnRy76RM2s85ozWvKwTBezrBU0RwcCTQJf1HFAM8&quot; &#125; ], &quot;swift_keys&quot;: [], &quot;caps&quot;: [], &quot;op_mask&quot;: &quot;read, write, delete&quot;, &quot;default_placement&quot;: &quot;&quot;, &quot;placement_tags&quot;: [], &quot;bucket_quota&quot;: &#123; &quot;enabled&quot;: false, &quot;check_on_raw&quot;: false, &quot;max_size&quot;: -1, &quot;max_size_kb&quot;: 0, &quot;max_objects&quot;: -1 &#125;, &quot;user_quota&quot;: &#123; &quot;enabled&quot;: false, &quot;check_on_raw&quot;: false, &quot;max_size&quot;: -1, &quot;max_size_kb&quot;: 0, &quot;max_objects&quot;: -1 &#125;, &quot;temp_url_keys&quot;: [], &quot;type&quot;: &quot;rgw&quot;&#125; 这个是后续需要的账户信息 123&quot;user&quot;: &quot;radosgw&quot;, &quot;access_key&quot;: &quot;CQE7E6ZDVA74KVJ0077A&quot;, &quot;secret_key&quot;: &quot;wnRy76RM2s85ozWvKwTBezrBU0RwcCTQJf1HFAM8&quot; 授权用户，允许 radosgw 读写 users 信息： 1234567891011121314151617181920212223242526272829303132333435363738394041424344[root@ceph1 ceph]# radosgw-admin caps add --uid=radosgw --caps=&quot;users=*&quot;&#123; &quot;user_id&quot;: &quot;radosgw&quot;, &quot;display_name&quot;: &quot;First User&quot;, &quot;email&quot;: &quot;&quot;, &quot;suspended&quot;: 0, &quot;max_buckets&quot;: 1000, &quot;auid&quot;: 0, &quot;subusers&quot;: [], &quot;keys&quot;: [ &#123; &quot;user&quot;: &quot;radosgw&quot;, &quot;access_key&quot;: &quot;CQE7E6ZDVA74KVJ0077A&quot;, &quot;secret_key&quot;: &quot;wnRy76RM2s85ozWvKwTBezrBU0RwcCTQJf1HFAM8&quot; &#125; ], &quot;swift_keys&quot;: [], &quot;caps&quot;: [ &#123; &quot;type&quot;: &quot;users&quot;, &quot;perm&quot;: &quot;*&quot; &#125; ], &quot;op_mask&quot;: &quot;read, write, delete&quot;, &quot;default_placement&quot;: &quot;&quot;, &quot;placement_tags&quot;: [], &quot;bucket_quota&quot;: &#123; &quot;enabled&quot;: false, &quot;check_on_raw&quot;: false, &quot;max_size&quot;: -1, &quot;max_size_kb&quot;: 0, &quot;max_objects&quot;: -1 &#125;, &quot;user_quota&quot;: &#123; &quot;enabled&quot;: false, &quot;check_on_raw&quot;: false, &quot;max_size&quot;: -1, &quot;max_size_kb&quot;: 0, &quot;max_objects&quot;: -1 &#125;, &quot;temp_url_keys&quot;: [], &quot;type&quot;: &quot;rgw&quot;&#125; 允许 radosgw 读写所有的usage信息： 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647[root@ceph1 ceph]# radosgw-admin caps add --uid=radosgw --caps=&quot;usage=read,write&quot;&#123; &quot;user_id&quot;: &quot;radosgw&quot;, &quot;display_name&quot;: &quot;First User&quot;, &quot;email&quot;: &quot;&quot;, &quot;suspended&quot;: 0, &quot;max_buckets&quot;: 1000, &quot;auid&quot;: 0, &quot;subusers&quot;: [], &quot;keys&quot;: [ &#123; &quot;user&quot;: &quot;radosgw&quot;, &quot;access_key&quot;: &quot;CQE7E6ZDVA74KVJ0077A&quot;, &quot;secret_key&quot;: &quot;wnRy76RM2s85ozWvKwTBezrBU0RwcCTQJf1HFAM8&quot; &#125; ], &quot;swift_keys&quot;: [], &quot;caps&quot;: [ &#123; &quot;type&quot;: &quot;usage&quot;, &quot;perm&quot;: &quot;*&quot; &#125;, &#123; &quot;type&quot;: &quot;users&quot;, &quot;perm&quot;: &quot;*&quot; &#125; ], &quot;op_mask&quot;: &quot;read, write, delete&quot;, &quot;default_placement&quot;: &quot;&quot;, &quot;placement_tags&quot;: [], &quot;bucket_quota&quot;: &#123; &quot;enabled&quot;: false, &quot;check_on_raw&quot;: false, &quot;max_size&quot;: -1, &quot;max_size_kb&quot;: 0, &quot;max_objects&quot;: -1 &#125;, &quot;user_quota&quot;: &#123; &quot;enabled&quot;: false, &quot;check_on_raw&quot;: false, &quot;max_size&quot;: -1, &quot;max_size_kb&quot;: 0, &quot;max_objects&quot;: -1 &#125;, &quot;temp_url_keys&quot;: [], &quot;type&quot;: &quot;rgw&quot;&#125; 创建子用户，做为后面 swift 客户端访问时使用： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657[root@ceph1 ceph]# radosgw-admin subuser create --uid=radosgw --subuser=radosgw:swift --access=full&#123; &quot;user_id&quot;: &quot;radosgw&quot;, &quot;display_name&quot;: &quot;First User&quot;, &quot;email&quot;: &quot;&quot;, &quot;suspended&quot;: 0, &quot;max_buckets&quot;: 1000, &quot;auid&quot;: 0, &quot;subusers&quot;: [ &#123; &quot;id&quot;: &quot;radosgw:swift&quot;, &quot;permissions&quot;: &quot;full-control&quot; &#125; ], &quot;keys&quot;: [ &#123; &quot;user&quot;: &quot;radosgw&quot;, &quot;access_key&quot;: &quot;CQE7E6ZDVA74KVJ0077A&quot;, &quot;secret_key&quot;: &quot;wnRy76RM2s85ozWvKwTBezrBU0RwcCTQJf1HFAM8&quot; &#125; ], &quot;swift_keys&quot;: [ &#123; &quot;user&quot;: &quot;radosgw:swift&quot;, &quot;secret_key&quot;: &quot;A3GDj2yjkGJahkCM6YJS4QKQlGz2zd65GXvCkiwV&quot; &#125; ], &quot;caps&quot;: [ &#123; &quot;type&quot;: &quot;usage&quot;, &quot;perm&quot;: &quot;*&quot; &#125;, &#123; &quot;type&quot;: &quot;users&quot;, &quot;perm&quot;: &quot;*&quot; &#125; ], &quot;op_mask&quot;: &quot;read, write, delete&quot;, &quot;default_placement&quot;: &quot;&quot;, &quot;placement_tags&quot;: [], &quot;bucket_quota&quot;: &#123; &quot;enabled&quot;: false, &quot;check_on_raw&quot;: false, &quot;max_size&quot;: -1, &quot;max_size_kb&quot;: 0, &quot;max_objects&quot;: -1 &#125;, &quot;user_quota&quot;: &#123; &quot;enabled&quot;: false, &quot;check_on_raw&quot;: false, &quot;max_size&quot;: -1, &quot;max_size_kb&quot;: 0, &quot;max_objects&quot;: -1 &#125;, &quot;temp_url_keys&quot;: [], &quot;type&quot;: &quot;rgw&quot;&#125; 创建密钥 ： 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657[root@ceph1 ceph]# radosgw-admin key create --subuser=radosgw:swift --key-type=swift --gen-secret&#123; &quot;user_id&quot;: &quot;radosgw&quot;, &quot;display_name&quot;: &quot;First User&quot;, &quot;email&quot;: &quot;&quot;, &quot;suspended&quot;: 0, &quot;max_buckets&quot;: 1000, &quot;auid&quot;: 0, &quot;subusers&quot;: [ &#123; &quot;id&quot;: &quot;radosgw:swift&quot;, &quot;permissions&quot;: &quot;full-control&quot; &#125; ], &quot;keys&quot;: [ &#123; &quot;user&quot;: &quot;radosgw&quot;, &quot;access_key&quot;: &quot;CQE7E6ZDVA74KVJ0077A&quot;, &quot;secret_key&quot;: &quot;wnRy76RM2s85ozWvKwTBezrBU0RwcCTQJf1HFAM8&quot; &#125; ], &quot;swift_keys&quot;: [ &#123; &quot;user&quot;: &quot;radosgw:swift&quot;, &quot;secret_key&quot;: &quot;CZ2F5lqOfdmTCLSPyzqcw5pPNeetruAL4HjHkiAh&quot; &#125; ], &quot;caps&quot;: [ &#123; &quot;type&quot;: &quot;usage&quot;, &quot;perm&quot;: &quot;*&quot; &#125;, &#123; &quot;type&quot;: &quot;users&quot;, &quot;perm&quot;: &quot;*&quot; &#125; ], &quot;op_mask&quot;: &quot;read, write, delete&quot;, &quot;default_placement&quot;: &quot;&quot;, &quot;placement_tags&quot;: [], &quot;bucket_quota&quot;: &#123; &quot;enabled&quot;: false, &quot;check_on_raw&quot;: false, &quot;max_size&quot;: -1, &quot;max_size_kb&quot;: 0, &quot;max_objects&quot;: -1 &#125;, &quot;user_quota&quot;: &#123; &quot;enabled&quot;: false, &quot;check_on_raw&quot;: false, &quot;max_size&quot;: -1, &quot;max_size_kb&quot;: 0, &quot;max_objects&quot;: -1 &#125;, &quot;temp_url_keys&quot;: [], &quot;type&quot;: &quot;rgw&quot;&#125; 安装 s3 客户端软件1[root@ceph1 ceph]# yum -y install s3cmd.noarch 对 s3 进行配置1[root@ceph1 ceph]# s3cmd --configure 123456789101112131415161718192021New settings: Access Key: CQE7E6ZDVA74KVJ0077A Secret Key: wnRy76RM2s85ozWvKwTBezrBU0RwcCTQJf1HFAM8 Default Region: US S3 Endpoint: 192.168.6.101:7480 DNS-style bucket+hostname:port template for accessing a bucket: %(bucket)s.192.168.6.101:7480 bucket Encryption password: 123456 Path to GPG program: /usr/bin/gpg Use HTTPS protocol: False HTTP Proxy server name: HTTP Proxy server port: 0Test access with supplied credentials? [Y/n] yPlease wait, attempting to list all buckets...Success. Your access key and secret key worked fine :-)Now verifying that encryption works...Success. Encryption and decryption worked fine :-)Save settings? [y/N] yConfiguration saved to &apos;/root/.s3cfg&apos; 格式是这样： 12345678Default Region [US]: #这里一定不要修改，否则后面会报错S3 Endpoint [s3.amazonaws.com]: 192.168.6.101:7480DNS-style bucket+hostname:port template for accessing a bucket [%(bucket)s.s3.amazonaws.com]: %(bucket)s.192.168.20.148:7480 bucket #相当于百度网盘的创建文件夹，这里是固定格式Path to GPG program [/usr/bin/gpg]: #保持默认Use HTTPS protocol [Yes]: no #这里写 no ，因为没有提供 https 端口HTTP Proxy server name: #这里不用写，因为没有代理Test access with supplied credentials? [Y/n] ySave settings? [y/N] y 由于我没把端口改成80，所以需要带端口访问的，后续可以nginx代理 创建存储数据的 bucket1234567[root@ceph1 ~]# s3cmd mb s3://cephdir[root@ceph1 ~]# s3cmd put /etc/hosts s3://ceph_dirupload: &apos;/etc/hosts&apos; -&gt; &apos;s3://ceph_dir/hosts&apos; [1 of 1] 200 of 200 100% in 1s 133.14 B/s done [root@ceph1 ~]# s3cmd ls s3://ceph_dir2019-07-11 08:41 200 s3://ceph_dir/hosts s3 的测试脚本： 1234567891011121314151617[root@ceph-f ~]# yum -y install python-boto[root@ceph-f ~]# vim s3test.pyimport boto.s3.connectionaccess_key = &apos;N6ALEK0KS0ISYCIM5JBG&apos;secret_key = &apos;qK9hrpX2uwna4elPP1VsuErmAHBw3So40fE2K4yM&apos;conn = boto.connect_s3( aws_access_key_id=access_key, aws_secret_access_key=secret_key, host=&apos;ceph1&apos;, port=7480, is_secure=False, calling_format=boto.s3.connection.OrdinaryCallingFormat(), )bucket = conn.create_bucket(&apos;xxx_yyy&apos;)for bucket in conn.get_all_buckets(): print &quot;&#123;name&#125; &#123;created&#125;&quot;.format( name=bucket.name, created=bucket.creation_date, ) 在使用时，请替换自己的 access_key、secret_key、主机名和端口 swift 接口测试1234yum install python-setuptoolseasy_install pippip install --upgrade setuptoolspip install --upgrade python-swiftclient 命令行访问 ： 1234567891011121314[root@ceph1 ~]# swift -A http://192.168.6.101:7480/auth/v1.0 -U radosgw:swift -K CZ2F5lqOfdmTCLSPyzqcw5pPNeetruAL4HjHkiAh listceph_dirswift -A http://192.168.6.101:7480/auth/v1.0 -U radosgw:swift -K CZ2F5lqOfdmTCLSPyzqcw5pPNeetruAL4HjHkiAh post sy-ytswift -A http://192.168.6.101:7480/auth/v1.0 -U radosgw:swift -K CZ2F5lqOfdmTCLSPyzqcw5pPNeetruAL4HjHkiAh post sy_yt[root@ceph1 ~]# swift -A http://192.168.6.101:7480/auth/v1.0 -U radosgw:swift -K CZ2F5lqOfdmTCLSPyzqcw5pPNeetruAL4HjHkiAh listceph_dirsy-ytsy_yt 这里提供 swift 的测试脚本： 123456789101112[root@ceph-f ~]# vim swift.pyimport swiftclientuser = &apos;radosgw:swift&apos;key = &apos;CZ2F5lqOfdmTCLSPyzqcw5pPNeetruAL4HjHkiAh&apos;conn = swiftclient.Connection( user=user, key=key, authurl=&apos;http://192.168.6.101:7480/auth/v1.0&apos;, )for container in conn.get_account()[1]: print container[&apos;name&apos;] 在使用时，请替换自己的 access_key、secret_key、authurl]]></content>
      <categories>
        <category>ceph</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[ceph简单搭建]]></title>
    <url>%2Fposts%2Fldfl554c.html</url>
    <content type="text"><![CDATA[ceph介绍Ceph基础介绍​ Ceph是一个可靠地、自动重均衡、自动恢复的分布式存储系统，根据场景划分可以将Ceph分为三大块，分别是对象存储、块设备存储和文件系统服务。在虚拟化领域里，比较常用到的是Ceph的块设备存储，比如在OpenStack项目里，Ceph的块设备存储可以对接OpenStack的cinder后端存储、Glance的镜像存储和虚拟机的数据存储，比较直观的是Ceph集群可以提供一个raw格式的块存储来作为虚拟机实例的硬盘。 ​ Ceph相比其它存储的优势点在于它不单单是存储，同时还充分利用了存储节点上的计算能力，在存储每一个数据时，都会通过计算得出该数据存储的位置，尽量将数据分布均衡，同时由于Ceph的良好设计，采用了CRUSH算法、HASH环等方法，使得它不存在传统的单点故障的问题，且随着规模的扩大性能并不会受到影响。 Ceph的核心组件​ Ceph的核心组件包括Ceph OSD、Ceph Monitor和Ceph MDS。 Ceph OSD：OSD的英文全称是Object Storage Device，它的主要功能是存储数据、复制数据、平衡数据、恢复数据等，与其它OSD间进行心跳检查等，并将一些变化情况上报给Ceph Monitor。一般情况下一块硬盘对应一个OSD，由OSD来对硬盘存储进行管理，当然一个分区也可以成为一个OSD。 Ceph OSD的架构实现由物理磁盘驱动器、Linux文件系统和Ceph OSD服务组成，对于Ceph OSD Deamon而言，Linux文件系统显性的支持了其拓展性，一般Linux文件系统有好几种，比如有BTRFS、XFS、Ext4等，BTRFS虽然有很多优点特性，但现在还没达到生产环境所需的稳定性，一般比较推荐使用XFS。 伴随OSD的还有一个概念叫做Journal盘，一般写数据到Ceph集群时，都是先将数据写入到Journal盘中，然后每隔一段时间比如5秒再将Journal盘中的数据刷新到文件系统中。一般为了使读写时延更小，Journal盘都是采用SSD，一般分配10G以上，当然分配多点那是更好，Ceph中引入Journal盘的概念是因为Journal允许Ceph OSD功能很快做小的写操作；一个随机写入首先写入在上一个连续类型的journal，然后刷新到文件系统，这给了文件系统足够的时间来合并写入磁盘，一般情况下使用SSD作为OSD的journal可以有效缓冲突发负载。 Ceph Monitor：由该英文名字我们可以知道它是一个监视器，负责监视Ceph集群，维护Ceph集群的健康状态，同时维护着Ceph集群中的各种Map图，比如OSD Map、Monitor Map、PG Map和CRUSH Map，这些Map统称为Cluster Map，Cluster Map是RADOS的关键数据结构，管理集群中的所有成员、关系、属性等信息以及数据的分发，比如当用户需要存储数据到Ceph集群时，OSD需要先通过Monitor获取最新的Map图，然后根据Map图和object id等计算出数据最终存储的位置。 Ceph MDS：全称是Ceph MetaData Server，主要保存的文件系统服务的元数据，但对象存储和块存储设备是不需要使用该服务的。 查看各种Map的信息可以通过如下命令：ceph osd(mon、pg) dump ceph-deploy安装ceph基本环境 192.168.6.101 ceph1 192.168.6.102 ceph2 俩台机器都挂俩块盘，一块系统盘，一块osd 配hosts： 123[root@ceph1 ~]# vim /etc/hosts192.168.6.101 ceph1192.168.6.102 ceph2 时间同步： 1ntpdate ntp1.aliyun.com 允许无密码SSH登录： 1234在ceph1上执行ssh-keygenssh-copy-id ceph1ssh-copy-id ceph2 配置主机名： 12hostnamectl set-hostname ceph1hostnamectl set-hostname ceph2 配置ceph.repo123456789101112131415161718192021222324252627[root@ceph1 ~]# vim /etc/yum.repos.d/ceph.repo[ceph]name=Ceph packages for $basearchbaseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/$basearchenabled=1gpgcheck=1priority=1type=rpm-mdgpgkey=https://mirrors.aliyun.com/ceph/keys/release.asc[ceph-noarch]name=Ceph noarch packagesbaseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/noarchenabled=1gpgcheck=1priority=1type=rpm-mdgpgkey=https://mirrors.aliyun.com/ceph/keys/release.asc[ceph-source]name=Ceph source packagesbaseurl=http://mirrors.aliyun.com/ceph/rpm-luminous/el7/SRPMSenabled=0gpgcheck=1type=rpm-mdgpgkey=https://mirrors.aliyun.com/ceph/keys/release.ascpriority=1 安装ceph-deploy： 1234yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpmyum makecacheyum update -yyum install -y ceph-deploy 创建一个 Ceph 存储集群，它有一个 Monitor 和两个 OSD 守护进程12345678910111213mkdir /etc/ceph &amp;&amp; cd /etc/cephceph-deploy new ceph1 ###配置一般会遇到个报错：Traceback (most recent call last): File &quot;/usr/bin/ceph-deploy&quot;, line 18, in &lt;module&gt; from ceph_deploy.cli import main File &quot;/usr/lib/python2.7/site-packages/ceph_deploy/cli.py&quot;, line 1, in &lt;module&gt; import pkg_resourcesImportError: No module named pkg_resources解决：yum install -y python-setuptools 在ceph.conf中追加以下内容 123# 存储集群副本个数osd_pool_default_size = 2 管理节点和osd节点都需要安装ceph 集群： 1ceph-deploy install ceph1 ceph2 配置MON初始化: 1ceph-deploy mon create-initial 查看ceph集群状态： 123456789101112131415[root@ceph1 ceph]# ceph -s cluster: id: cde3244e-89e0-4630-84d5-bf08c0e33b24 health: HEALTH_OK services: mon: 1 daemons, quorum ceph1 mgr: no daemons active osd: 0 osds: 0 up, 0 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0B usage: 0B used, 0B / 0B avail pgs: 开启监控模块1ceph-deploy mgr create ceph1 在/etc/ceph/ceph.conf中添加 12[mgr]mgr modules = dashboard 查看集群支持的模块 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172[root@ceph1 ceph]# ceph mgr dump [root@ceph1 ceph]# ceph mgr module enable dashboard #启用dashboard模块[root@ceph1 ceph]# ceph mgr dump&#123; &quot;epoch&quot;: 3, &quot;active_gid&quot;: 4110, &quot;active_name&quot;: &quot;ceph1&quot;, &quot;active_addr&quot;: &quot;192.168.6.101:6800/6619&quot;, &quot;available&quot;: true, &quot;standbys&quot;: [], &quot;modules&quot;: [ &quot;balancer&quot;, &quot;restful&quot;, &quot;status&quot; ], &quot;available_modules&quot;: [ &quot;balancer&quot;, &quot;dashboard&quot;, &quot;influx&quot;, &quot;localpool&quot;, &quot;prometheus&quot;, &quot;restful&quot;, &quot;selftest&quot;, &quot;status&quot;, &quot;zabbix&quot; ], &quot;services&quot;: &#123;&#125;&#125;[root@ceph1 ceph]# ceph mgr module enable dashboard[root@ceph1 ceph]# ceph mgr dump&#123; &quot;epoch&quot;: 6, &quot;active_gid&quot;: 4114, &quot;active_name&quot;: &quot;ceph1&quot;, &quot;active_addr&quot;: &quot;192.168.6.101:6800/6619&quot;, &quot;available&quot;: true, &quot;standbys&quot;: [], &quot;modules&quot;: [ &quot;balancer&quot;, &quot;dashboard&quot;, &quot;restful&quot;, &quot;status&quot; ], &quot;available_modules&quot;: [ &quot;balancer&quot;, &quot;dashboard&quot;, &quot;influx&quot;, &quot;localpool&quot;, &quot;prometheus&quot;, &quot;restful&quot;, &quot;selftest&quot;, &quot;status&quot;, &quot;zabbix&quot; ], &quot;services&quot;: &#123;&#125;&#125;[root@ceph1 ceph]# ceph -s cluster: id: cde3244e-89e0-4630-84d5-bf08c0e33b24 health: HEALTH_OK services: mon: 1 daemons, quorum ceph1 mgr: ceph1(active) osd: 2 osds: 2 up, 2 in data: pools: 0 pools, 0 pgs objects: 0 objects, 0B usage: 2.00GiB used, 30.0GiB / 32.0GiB avail pgs: 设置dashboard的ip和端口 1234[root@ceph-node1 ceph]# ceph config-key put mgr/dashboard/server_addr 192.168.6.101set mgr/dashboard/server_addr[root@ceph-node1 ceph]# ceph config-key put mgr/dashboard/server_port 7000set mgr/dashboard/server_port 12[root@ceph1 ~]# netstat -tulnp |grep 7000tcp 0 0 192.168.6.101:7000 0.0.0.0:* LISTEN 19836/ceph-mgr 创建osd删除磁盘数据 12[root@ceph1 ceph]# ceph-deploy disk zap ceph1 /dev/sdb[root@ceph1 ceph]# ceph-deploy disk zap ceph2 /dev/sdb 创建osd(一共俩个) 12[root@ceph1 ceph]# ceph-deploy osd create ceph1 --data /dev/sdb[root@ceph1 ceph]# ceph-deploy osd create ceph2 --data /dev/sdb ceph秘钥拷贝（主节点执行）及修改密钥权限 用 ceph-deploy 把配置文件和 admin 密钥拷贝到管理节点和 Ceph 节点，这样你每次执行 Ceph 命令行时就无需指定 monitor 地址和 ceph.client.admin.keyring 了 1[root@ceph1 ceph]# ceph-deploy admin ceph1 ceph2 修改密钥权限（所有节点上执行） 12[root@ceph1 ceph] # chmod +r /etc/ceph/ceph.client.admin.keyring[root@ceph2] # chmod +r /etc/ceph/ceph.client.admin.keyring 这时看下danshboard图：]]></content>
      <categories>
        <category>ceph</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Kubernetes Pod无法删除]]></title>
    <url>%2Fposts%2Fdk7569vg.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[tomcat8导致文件权限访问不到]]></title>
    <url>%2Fposts%2Fkfkd454f.html</url>
    <content type="text"><![CDATA[问题之前在tomcat 7下文件上传后访问一直没问题，现在tomcat版本升到8.5，在测试文件http上传时，发现所传文件无法通过nginx访问了：报错 403 forbidden 解决看下系统的umask 12345678910cat /etc/profile后发现if [ $UID -gt 199 ] &amp;&amp; [ &quot;`/usr/bin/id -gn`&quot; = &quot;`/usr/bin/id -un`&quot; ]; then umask 002else umask 022fi022是没问题的 看下tomcat的catlina.sh 123456if [ -z &quot;$UMASK&quot; ]; thenUMASK=&quot;0027&quot;fiumask $UMASKtomcat8改成0027了，把这个改成0022就好了]]></content>
      <categories>
        <category>中间件</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s1.14-helm私库]]></title>
    <url>%2Fposts%2Fdla981a0.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s1.14-helm模板变量]]></title>
    <url>%2Fposts%2Flsd89ad2.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s1.14-helm模板控制流程]]></title>
    <url>%2Fposts%2Flad78haa.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s1.14-helm模板几个函数]]></title>
    <url>%2Fposts%2Foaj163a8.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s1.14-helm模板内置对象]]></title>
    <url>%2Fposts%2Fdla9812q.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s1.14-helm基本使用]]></title>
    <url>%2Fposts%2Fmdk98hdq.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Kubelet状态更新机制]]></title>
    <url>%2Fposts%2Fdfkdaa65.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[istio架构与技术]]></title>
    <url>%2Fposts%2F5a4fga4h.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s1.14-helm安装]]></title>
    <url>%2Fposts%2Fdkgg3h4f.html</url>
    <content type="text"><![CDATA[摘要Helm这个东西其实早有耳闻，但是一直没有用在生产环境，而且现在对这货的评价也是褒贬不一。正好最近需要再次部署一套测试环境，对于单体服务，部署一套测试环境我相信还是非常快的，但是对于微服务架构的应用，要部署一套新的环境，就有点折磨人了，微服务越多、你就会越绝望的。虽然我们线上和测试环境已经都迁移到了kubernetes环境，但是每个微服务也得维护一套yaml文件，而且每个环境下的配置文件也不太一样，部署一套新的环境成本是真的很高。如果我们能使用类似于yum的工具来安装我们的应用的话是不是就很爽歪歪了啊？Helm就相当于kubernetes环境下的yum包管理工具。 用途做为 Kubernetes 的一个包管理工具，Helm具有如下功能： 创建新的 chart chart 打包成 tgz 格式 上传 chart 到 chart 仓库或从仓库中下载 chart 在Kubernetes集群中安装或卸载 chart 管理用Helm安装的 chart 的发布周期 重要概念Helm 有三个重要概念： chart：包含了创建Kubernetes的一个应用实例的必要信息 config：包含了应用发布配置信息 release：是一个 chart 及其配置的一个运行实例 Helm组件Helm 有以下两个组成部分： Helm Client 是用户命令行工具，其主要负责如下： 本地 chart 开发 仓库管理 与 Tiller sever 交互 发送预安装的 chart 查询 release 信息 要求升级或卸载已存在的 release Tiller Server是一个部署在Kubernetes集群内部的 server，其与 Helm client、Kubernetes API server 进行交互。Tiller server 主要负责如下： 监听来自 Helm client 的请求 通过 chart 及其配置构建一次发布 安装 chart 到Kubernetes集群，并跟踪随后的发布 通过与Kubernetes交互升级或卸载 chart 简单的说，client 管理 charts，而 server 管理发布 release 架构12345678910111213Chart Install 过程：Helm从指定的目录或者tgz文件中解析出Chart结构信息Helm将指定的Chart结构和Values信息通过gRPC传递给TillerTiller根据Chart和Values生成一个ReleaseTiller将Release发送给Kubernetes运行。Chart Update过程：Helm从指定的目录或者tgz文件中解析出Chart结构信息Helm将要更新的Release的名称和Chart结构，Values信息传递给TillerTiller生成Release并更新指定名称的Release的HistoryTiller将Release发送给Kubernetes运行 安装我们可以在Helm Realese页面下载二进制文件，这里下载的2.14.1版本，解压后将可执行文件helm拷贝到/usr/local/bin目录下即可，这样Helm客户端就在这台机器上安装完成了。 123helm init --upgrade -i registry.cn-hangzhou.aliyuncs.com/google_containers/tiller:v2.14.1 --stable-repo-url https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts另外还需要在每个node节点安装yum install socat -y 123[root@node1 helm]# helm versionClient: &amp;version.Version&#123;SemVer:&quot;v2.14.1&quot;, GitCommit:&quot;5270352a09c7e8b6e8c9593002a73535276507c0&quot;, GitTreeState:&quot;clean&quot;&#125;Server: &amp;version.Version&#123;SemVer:&quot;v2.14.1&quot;, GitCommit:&quot;5270352a09c7e8b6e8c9593002a73535276507c0&quot;, GitTreeState:&quot;clean&quot;&#125; 123456自Kubernetes 1.6版本开始，API Server启用了RBAC授权。而目前的Tiller部署没有定义授权的ServiceAccount，这会导致访问API Server时被拒绝。我们可以采用如下方法，明确为Tiller部署添加授权。kubectl create serviceaccount --namespace kube-system tillerkubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tillerkubectl patch deploy --namespace kube-system tiller-deploy -p &apos;&#123;&quot;spec&quot;:&#123;&quot;template&quot;:&#123;&quot;spec&quot;:&#123;&quot;serviceAccount&quot;:&quot;tiller&quot;&#125;&#125;&#125;&#125;&apos;kubectl create clusterrolebinding add-on-cluster-admin --clusterrole=cluster-admin --serviceaccount=kube-system:default 使用我们现在了尝试创建一个 Chart： 1234567891011121314151617181920212223242526272829[root@node1 helm]# helm create hello-helmCreating hello-helm[root@node1 helm]# lshello-helm helm-v2.14.1-linux-amd64.tar.gz linux-amd64[root@node1 helm]# helm install ./hello-helmNAME: virulent-wolverineLAST DEPLOYED: Mon Jun 17 10:56:39 2019NAMESPACE: defaultSTATUS: DEPLOYEDRESOURCES:==&gt; v1/DeploymentNAME READY UP-TO-DATE AVAILABLE AGEvirulent-wolverine-hello-helm 0/1 0 0 1s==&gt; v1/Pod(related)NAME READY STATUS RESTARTS AGEvirulent-wolverine-hello-helm-6f54d6f866-d5t7v 0/1 ContainerCreating 0 1s==&gt; v1/ServiceNAME TYPE CLUSTER-IP EXTERNAL-IP PORT(S) AGEvirulent-wolverine-hello-helm ClusterIP 10.254.123.130 &lt;none&gt; 80/TCP 1sNOTES:1. Get the application URL by running these commands: export POD_NAME=$(kubectl get pods --namespace default -l &quot;app.kubernetes.io/name=hello-helm,app.kubernetes.io/instance=virulent-wolverine&quot; -o jsonpath=&quot;&#123;.items[0].metadata.name&#125;&quot;) echo &quot;Visit http://127.0.0.1:8080 to use your application&quot; kubectl port-forward $POD_NAME 8080:80 然后我们根据提示执行下面的命令： 12export POD_NAME=$(kubectl get pods --namespace default -l &quot;app.kubernetes.io/name=hello-helm,app.kubernetes.io/instance=virulent-wolverine&quot; -o jsonpath=&quot;&#123;.items[0].metadata.name&#125;&quot;)kubectl port-forward $POD_NAME 8080:80 访问： 1234567891011121314151617181920212223242526[root@node1 ~]# curl 127.0.0.1:8080&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;Welcome to nginx!&lt;/title&gt;&lt;style&gt; body &#123; width: 35em; margin: 0 auto; font-family: Tahoma, Verdana, Arial, sans-serif; &#125;&lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;&lt;p&gt;If you see this page, the nginx web server is successfully installed andworking. Further configuration is required.&lt;/p&gt;&lt;p&gt;For online documentation and support please refer to&lt;a href=&quot;http://nginx.org/&quot;&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;Commercial support is available at&lt;a href=&quot;http://nginx.com/&quot;&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 查看release： 123[root@node1 ~]# helm listNAME REVISION UPDATED STATUS CHART APP VERSION NAMESPACEvirulent-wolverine 1 Mon Jun 17 10:56:39 2019 DEPLOYED hello-helm-0.1.0 1.0 default 打包chart： 1helm package hello-helm 删除： 123456[root@node1 ~]# helm delete virulent-wolverinerelease &quot;virulent-wolverine&quot; deleted[root@node1 ~]# helm list[root@node1 ~]# helm list --allNAME REVISION UPDATED STATUS CHART APP VERSION NAMESPACEvirulent-wolverine 1 Mon Jun 17 10:56:39 2019 DELETED hello-helm-0.1.0 1.0 default 彻底删除： 1234[root@node1 ~]# helm delete virulent-wolverine --purgerelease &quot;virulent-wolverine&quot; deleted[root@node1 ~]# helm list --all[root@node1 ~]#]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s-apiserver工作原理]]></title>
    <url>%2Fposts%2Fdl74fla1.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s1.14集群部署-dashboard]]></title>
    <url>%2Fposts%2Fc2556dcf.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s1.14集群部署-metrics-server]]></title>
    <url>%2Fposts%2Fd3554aa2.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s1.14集群部署-coredns]]></title>
    <url>%2Fposts%2F77sa4nc2.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s角色]]></title>
    <url>%2Fposts%2F65aa44f.html</url>
    <content type="text"><![CDATA[查看node节点1234[root@node1 work]# kubectl get nodesNAME STATUS ROLES AGE VERSIONnode1 Ready &lt;none&gt; 41h v1.14.2node2 Ready &lt;none&gt; 41h v1.14.2 设置集群角色12345678910111213# 设置 node1 为 master 角色kubectl label nodes node1 node-role.kubernetes.io/master=# 设置 node2 为 node 角色kubectl label nodes node2 node-role.kubernetes.io/node=[root@node1 ~]# kubectl get nodesNAME STATUS ROLES AGE VERSIONnode1 Ready master 42h v1.14.2node2 Ready node 42h v1.14.2 设置taint语法12345kubectl taint node [node] key=value[effect] 其中[effect] 可取值: [ NoSchedule | PreferNoSchedule | NoExecute ] NoSchedule: 一定不能被调度 PreferNoSchedule: 尽量不要调度 NoExecute: 不仅不会调度, 还会驱逐Node上已有的Pod 使用123456789[root@node1 ~]# kubectl taint nodes node1 node-role.kubernetes.io/master=:NoExecutenode/node1 tainted[root@node1 ~]# kubectl get podsNAME READY STATUS RESTARTS AGEnginx-ds-kztdz 1/1 Running 0 18hnginx-ds-vbjh9 0/1 Terminating 0 18h[root@node1 ~]# kubectl get podsNAME READY STATUS RESTARTS AGEnginx-ds-kztdz 1/1 Running 0 18h 查看taint123456789101112131415161718192021222324[root@node1 ~]# kubectl describe node node1Name: node1Roles: masterLabels: beta.kubernetes.io/arch=amd64 beta.kubernetes.io/os=linux kubernetes.io/arch=amd64 kubernetes.io/hostname=node1 kubernetes.io/os=linux node-role.kubernetes.io/master=Annotations: node.alpha.kubernetes.io/ttl: 0 volumes.kubernetes.io/controller-managed-attach-detach: trueCreationTimestamp: Tue, 04 Jun 2019 15:28:56 +0800Taints: node-role.kubernetes.io/master:NoExecute node-role.kubernetes.io/master:NoScheduleUnschedulable: falseConditions: Type Status LastHeartbeatTime LastTransitionTime Reason Message ---- ------ ----------------- ------------------ ------ ------- MemoryPressure False Thu, 06 Jun 2019 10:08:16 +0800 Tue, 04 Jun 2019 15:28:57 +0800 KubeletHasSufficientMemory kubelet has sufficient memory available DiskPressure False Thu, 06 Jun 2019 10:08:16 +0800 Tue, 04 Jun 2019 15:28:57 +0800 KubeletHasNoDiskPressure kubelet has no disk pressure PIDPressure False Thu, 06 Jun 2019 10:08:16 +0800 Tue, 04 Jun 2019 15:28:57 +0800 KubeletHasSufficientPID kubelet has sufficient PID available Ready True Thu, 06 Jun 2019 10:08:16 +0800 Tue, 04 Jun 2019 15:28:57 +0800 KubeletReady kubelet is posting ready statusAddresses: InternalIP: 192.168.6.101 删除taint12[root@node1 ~]# kubectl taint nodes node1 node-role.kubernetes.io/master-node/node1 untainted RBACKubernetes有一个很基本的特性就是它的所有资源对象都是模型化的 API 对象，允许执行 CRUD(Create、Read、Update、Delete)操作(也就是我们常说的增、删、改、查操作)，比如下面的这下资源： Pods ConfigMaps Deployments Nodes Secrets Namespaces 上面这些资源对象的可能存在的操作有： create get delete list update edit watch exec 在更上层，这些资源和 API Group 进行关联，比如Pods属于 Core API Group，而Deployements属于 apps API Group，要在Kubernetes中进行RBAC的管理，除了上面的这些资源和操作以外，我们还需要另外的一些对象： Rule：规则，规则是一组属于不同 API Group 资源上的一组操作的集合 Role 和 ClusterRole：角色和集群角色，这两个对象都包含上面的 Rules 元素，二者的区别在于，在 Role 中，定义的规则只适用于单个命名空间，也就是和 namespace 关联的，而 ClusterRole 是集群范围内的，因此定义的规则不受命名空间的约束。另外 Role 和 ClusterRole 在Kubernetes中都被定义为集群内部的 API 资源，和我们前面学习过的 Pod、ConfigMap 这些类似，都是我们集群的资源对象，所以同样的可以使用我们前面的kubectl相关的命令来进行操作 Subject：主题，对应在集群中尝试操作的对象，集群中定义了3种类型的主题资源： User Account：用户，这是有外部独立服务进行管理的，管理员进行私钥的分配，用户可以使用 KeyStone或者 Goolge 帐号，甚至一个用户名和密码的文件列表也可以。对于用户的管理集群内部没有一个关联的资源对象，所以用户不能通过集群内部的 API 来进行管理 Group：组，这是用来关联多个账户的，集群中有一些默认创建的组，比如cluster-admin Service Account：服务帐号，通过Kubernetes API 来管理的一些用户帐号，和 namespace 进行关联的，适用于集群内部运行的应用程序，需要通过 API 来完成权限认证，所以在集群内部进行权限操作，我们都需要使用到 ServiceAccount，这也是我们这节课的重点 RoleBinding 和 ClusterRoleBinding：角色绑定和集群角色绑定，简单来说就是把声明的 Subject 和我们的 Role 进行绑定的过程(给某个用户绑定上操作的权限)，二者的区别也是作用范围的区别：RoleBinding 只会影响到当前 namespace 下面的资源操作权限，而 ClusterRoleBinding 会影响到所有的 namespace。]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s1.14集群部署-node节点]]></title>
    <url>%2Fposts%2F44qq5gb2.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s1.14集群部署-controller、schedule]]></title>
    <url>%2Fposts%2F544ccaa2.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s1.14集群部署-apiserver集群]]></title>
    <url>%2Fposts%2F863q77b5.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s1.14集群部署-flannel网络、kubectl工具]]></title>
    <url>%2Fposts%2F66ae7fg23.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s1.14集群部署-etcd集群]]></title>
    <url>%2Fposts%2F7dqa4nb2.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s1.14集群部署-cfssl证书]]></title>
    <url>%2Fposts%2F8d664qf5.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! 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]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s1.14集群部署-系统初始化]]></title>
    <url>%2Fposts%2F9c775ab5.html</url>
    <content type="text"><![CDATA[K8s环境准备本次安装版本 Kubernetes 1.14.2 Docker 18.09.6-ce Etcd 3.3.13 Flanneld 0.11.0 机器123192.168.6.101 node1192.168.6.102 node2 其中node1，node2做master集群，也都是node节点 主机名123456hostnamectl set-hostname node1hostnamectl set-hostname node2cat &gt;&gt; /etc/hosts &lt;&lt;EOF192.168.6.101 node1192.168.6.102 node2EOF 免秘钥1234注意：在node1上操作即可ssh-keygen -t rsassh-copy-id root@node1ssh-copy-id root@node2 初始化安装依赖包以下操作均在所有机器操作 1yum install -y epel-release conntrack ntpdate ntp ipvsadm ipset jq iptables curl sysstat libseccomp wget unzip net-tools 关闭防火墙1234systemctl stop firewalldsystemctl disable firewalldiptables -F &amp;&amp; iptables -X &amp;&amp; iptables -F -t nat &amp;&amp; iptables -X -t natiptables -P FORWARD ACCEPT 关闭 swap 分区12swapoff -ased -i &apos;/ swap / s/^\(.*\)$/#\1/g&apos; /etc/fstab 关闭 SELinux12setenforce 0sed -i &apos;s/^SELINUX=.*/SELINUX=disabled/&apos; /etc/selinux/config 加载内核并优化12345678910111213141516171819modprobe ip_vs_rrmodprobe br_netfiltercat &gt; kubernetes.conf &lt;&lt;EOFnet.bridge.bridge-nf-call-iptables=1net.bridge.bridge-nf-call-ip6tables=1net.ipv4.ip_forward=1net.ipv4.tcp_tw_recycle=0vm.swappiness=0 # 禁止使用 swap 空间，只有当系统 OOM 时才允许使用它vm.overcommit_memory=1 # 不检查物理内存是否够用vm.panic_on_oom=0 # 开启 OOMfs.inotify.max_user_instances=8192fs.inotify.max_user_watches=1048576fs.file-max=52706963fs.nr_open=52706963net.ipv6.conf.all.disable_ipv6=1net.netfilter.nf_conntrack_max=2310720EOFcp kubernetes.conf /etc/sysctl.d/kubernetes.confsysctl -p /etc/sysctl.d/kubernetes.conf ntp1ntpdate ntp1.aliyun.com 创建相关目录1mkdir -p /opt/k8s/&#123;bin,work&#125; /etc/&#123;kubernetes,etcd&#125;/cert 升级内核CentOS 7.x 系统自带的 3.10.x 内核存在一些 Bugs，导致运行的 Docker、Kubernetes 不稳定，例如： 高版本的 docker(1.13 以后) 启用了 3.10 kernel 实验支持的 kernel memory account 功能(无法关闭)，当节点压力大如频繁启动和停止容器时会导致 cgroup memory leak； 网络设备引用计数泄漏，会导致类似于报错：”kernel:unregister_netdevice: waiting for eth0 to become free. Usage count = 1”; 解决方案如下： 升级内核到 4.4.X 以上； 或者，手动编译内核，disable CONFIG_MEMCG_KMEM 特性； 或者，安装修复了该问题的 Docker 18.09.1 及以上的版本。但由于 kubelet 也会设置 kmem（它 vendor 了 runc），所以需要重新编译 kubelet 并指定 GOFLAGS=”-tags=nokmem”； 123git clone --branch v1.14.1 --single-branch --depth 1 https://github.com/kubernetes/kubernetescd kubernetesKUBE_GIT_VERSION=v1.14.1 ./build/run.sh make kubelet GOFLAGS=&quot;-tags=nokmem&quot; 这里采用升级内核的解决办法： 12345rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm# 安装完成后检查 /boot/grub2/grub.cfg 中对应内核 menuentry 中是否包含 initrd16 配置，如果没有，再安装一次！yum --enablerepo=elrepo-kernel install -y kernel-lt# 设置开机从新内核启动grub2-set-default 0 安装内核源文件（可选，在升级完内核并重启机器后执行）: 12# yum erase kernel-headersyum --enablerepo=elrepo-kernel install kernel-lt-devel-$(uname -r) kernel-lt-headers-$(uname -r) 设置配置参数脚本脚本1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768[root@node1 ~]# cat environment.sh#!/usr/bin/bash# 生成 EncryptionConfig 所需的加密 keyexport ENCRYPTION_KEY=$(head -c 32 /dev/urandom | base64)# 集群各机器 IP 数组export NODE_IPS=(192.168.6.101 192.168.6.102)# 集群各 IP 对应的主机名数组export NODE_NAMES=(node1 node2)# etcd 集群服务地址列表export ETCD_ENDPOINTS=&quot;https://192.168.6.101:2379,https://192.168.6.102:2379&quot;# etcd 集群间通信的 IP 和端口export ETCD_NODES=&quot;node1=https://192.168.6.101:2380,node2=https://192.168.6.102:2380&quot;# kube-apiserver 的反向代理(kube-nginx)地址端口export KUBE_APISERVER=&quot;https://127.0.0.1:8443&quot;# 节点间互联网络接口名称export IFACE=&quot;ens160&quot;# etcd 数据目录export ETCD_DATA_DIR=&quot;/data/k8s/etcd/data&quot;# etcd WAL 目录，建议是 SSD 磁盘分区，或者和 ETCD_DATA_DIR 不同的磁盘分区export ETCD_WAL_DIR=&quot;/data/k8s/etcd/wal&quot;# k8s 各组件数据目录export K8S_DIR=&quot;/data/k8s/k8s&quot;# docker 数据目录export DOCKER_DIR=&quot;/data/k8s/docker&quot;## 以下参数一般不需要修改# TLS Bootstrapping 使用的 Token，可以使用命令 head -c 16 /dev/urandom | od -An -t x | tr -d &apos; &apos; 生成BOOTSTRAP_TOKEN=&quot;4d8a35f48da304e4433ba0bda5b8ffd1&quot;# 最好使用 当前未用的网段 来定义服务网段和 Pod 网段# 服务网段，部署前路由不可达，部署后集群内路由可达(kube-proxy 保证)SERVICE_CIDR=&quot;10.254.0.0/16&quot;# Pod 网段，建议 /16 段地址，部署前路由不可达，部署后集群内路由可达(flanneld 保证)CLUSTER_CIDR=&quot;172.30.0.0/16&quot;# 服务端口范围 (NodePort Range)export NODE_PORT_RANGE=&quot;30000-32767&quot;# flanneld 网络配置前缀export FLANNEL_ETCD_PREFIX=&quot;/kubernetes/network&quot;# kubernetes 服务 IP (一般是 SERVICE_CIDR 中第一个IP)export CLUSTER_KUBERNETES_SVC_IP=&quot;10.254.0.1&quot;# 集群 DNS 服务 IP (从 SERVICE_CIDR 中预分配)export CLUSTER_DNS_SVC_IP=&quot;10.254.0.2&quot;# 集群 DNS 域名（末尾不带点号）export CLUSTER_DNS_DOMAIN=&quot;cluster.local&quot;# 将二进制目录 /opt/k8s/bin 加到 PATH 中export PATH=/opt/k8s/bin:$PATH 分发到所有节点1234567source environment.shfor node_ip in $&#123;NODE_IPS[@]&#125; do echo &quot;&gt;&gt;&gt; $&#123;node_ip&#125;&quot; scp environment.sh root@$&#123;node_ip&#125;:/opt/k8s/bin/ ssh root@$&#123;node_ip&#125; &quot;chmod +x /opt/k8s/bin/*&quot; done]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[tomcat报SEVERE Error listenerStart]]></title>
    <url>%2Fposts%2F1b8b1cc1.html</url>
    <content type="text"><![CDATA[问题启动tomcat时报错，错误信息如下： 1234org.apache.catalina.core.StandardContext startInternalSEVERE: Error listenerStartorg.apache.catalina.core.StandardContext startInternalSEVERE: Context [/projectname] startup failed due to previous errors 方法在WEB-INF/classes目录下新建一个文件叫logging.properties，内容如下 123456handlers = org.apache.juli.FileHandler, java.util.logging.ConsoleHandler org.apache.juli.FileHandler.level = FINE org.apache.juli.FileHandler.directory = $&#123;catalina.base&#125;/logs org.apache.juli.FileHandler.prefix = error-debug. java.util.logging.ConsoleHandler.level = FINE java.util.logging.ConsoleHandler.formatter=java.util.logging.SimpleFormatter 之后，重启tomcat查看日志，就可以看到是由于数据库连接或者jdk版本不兼容等原因导致的]]></content>
      <categories>
        <category>中间件</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s强制删除]]></title>
    <url>%2Fposts%2F267edcc5.html</url>
    <content type="text"><![CDATA[可使用kubectl中的强制删除命令12345# 删除PODkubectl delete pod PODNAME --force --grace-period=0# 删除NAMESPACEkubectl delete namespace NAMESPACENAME --force --grace-period=0 有时候这种方法也删除不掉，可能是之前删除顺序有问题，没有删干净pod，就删除命名空间，导致删除不掉 直接从ETCD中删除源数据12345# 删除default namespace下的pod名为pod-to-be-deleted-0ETCDCTL_API=3 etcdctl del /registry/pods/default/pod-to-be-deleted-0# 删除需要删除的NAMESPACEetcdctl del /registry/namespaces/NAMESPACENAME 添加别名上面直接etcd删除，是证书直接能找到时候，如果证书配置方式不一样，就需要手动配一下！ 配置别名etcdctl3，添加证书等参数 1234567alias etcdctl3=&apos;docker run --rm -it \--net host -e ETCDCTL_API=3 \-v /etc/kubernetes:/etc/kubernetes k8s.gcr.io/etcd:3.3.10 etcdctl \--cert /etc/kubernetes/pki/etcd/peer.crt \--key /etc/kubernetes/pki/etcd/peer.key \--cacert /etc/kubernetes/pki/etcd/ca.crt \--endpoints https://192.168.3.101:2379,https://192.168.3.102:2379,https://192.168.3.103:2379&apos; 查询都有哪些daemonsets 1234tcdctl3 get /registry/daemonsets/ --prefix --keys-only/registry/daemonsets/default/testpod/registry/daemonsets/kube-system/calico-node/registry/daemonsets/kube-system/kube-proxy 与kubectl查看的结果一致 12345kubectl get daemonsets --all-namespaces NAMESPACE NAME DESIRED CURRENT READY UP-TO-DATE AVAILABLE NODE SELECTOR AGEdefault testpod 3 3 3 3 3 &lt;none&gt; 91mkube-system calico-node 3 3 3 3 3 beta.kubernetes.io/os=linux 116mkube-system kube-proxy 3 3 3 3 3 &lt;none&gt; 122m 在etcd中查询default namespace中的pod 1234etcdctl3 get /registry/pods/default --prefix --keys-only /registry/pods/default/testpod-5wtb7/registry/pods/default/testpod-646d8/registry/pods/default/testpod-t7ps7 kubectl命令看到结果与etcd中一致 12345kubectl get pods -l app=fortestNAME READY STATUS RESTARTS AGEtestpod-5wtb7 1/1 Running 0 93mtestpod-646d8 1/1 Running 0 93mtestpod-t7ps7 1/1 Running 0 93m 在etcd中删除pod testpod-t7ps7 12etcdctl3 del /registry/pods/default/testpod-t7ps7 1 再次查看pod，发现testpod-t7ps7已经没有了 12345kubectl get podsNAME READY STATUS RESTARTS AGEtestpod-5wtb7 1/1 Running 0 96mtestpod-646d8 1/1 Running 0 96mtestpod-qczvt 1/1 Running 0 17s]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Prometheus监控url]]></title>
    <url>%2Fposts%2Fsfk013sk.html</url>
    <content type="text"><![CDATA[安装blackbox_exporterblackbox exporter是允许在HTTP, HTTPS, DNS, TCP and ICMP等协议的端点进行黑盒探测的采取器 官方github: https://github.com/prometheus/blackbox_exporter 12345wget https://github.com/prometheus/blackbox_exporter/releases/download/v0.14.0/blackbox_exporter-0.14.0.linux-amd64.tar.gztar -zxvf blackbox_exporter-0.14.0.linux-amd64.tar.gzmv blackbox_exporter-0.14.0.linux-amd64 blackbox_exporternohup ./blackbox_exporter --config.file=/usr/local/blackbox_exporter/blackbox.yml &amp; prometheus配置1234567891011121314- job_name: &apos;blackbox&apos; metrics_path: /probe params: module: [http_2xx] # Look for a HTTP 200 response. static_configs: - targets: - http://192.168.7.107:3000/login/ relabel_configs: - source_labels: [__address__] target_label: __param_target - source_labels: [__param_target] target_label: instance - target_label: __address__ replacement: 192.168.7.107:9115 # The blackbox exporter&apos;s real hostname:port. grafana模板1https://grafana.com/grafana/dashboards/7587]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[fabric问题汇总]]></title>
    <url>%2Fposts%2F9c5623c7.html</url>
    <content type="text"><![CDATA[安装部署fabric测试项目安装问题12npm install probuf的时候报的错fabric依赖的sdk需要依赖c++的编译库，windows也许windows-tools，linux也需要支持的gc++,gc fabric-ca-server 存储私钥么1从mysql中不存储私钥 启动order遇到问题123Failed to initialize local MSP: the supplied identity is not valid: x509: certificate signed by unknown authority原因：实体的证书不是组织的证书签发的 docker-compose创建报错123[blocksProvider] DeliverBlocks -&gt; ERRO 039 [vaccinechannel] Got error &amp;&#123;FORBIDDEN&#125;解决办法： 需要在组织的msp中增加config.yaml 应用过程中问题Peer或者Orderer不通当不通的时候，先确认域名对应的IP是否正确，然后用telnet检查服务端口： 12ping peer0.org1.example.comtelnet peer0.org1.example.com 7051 如果不通，检查一下/etc/hosts中是否设置了域名和IP的对应关系是否正确。 如果还是不通，看一下系统有没有防火墙，7051端口有没有被防火墙禁止。 目标Peer上的Docker没有启动，导致合约实例化失败实例化合约时出错： 1./peer.sh chaincode instantiate -o orderer.example.com:7050 --tls true --cafile ./tlsca.example.com-cert.pem -C mychannel -n demo -v 0.0.1 -c &apos;&#123;&quot;Args&quot;:[&quot;init&quot;]&#125;&apos; -P &quot;OR(&apos;Org1MSP.member&apos;,&apos;Org2MSP.member&apos;)&quot; 错误如下： 1Error: Error endorsing chaincode: rpc error: code = Unknown desc = error starting container: Post http://unix.sock/containers/create?name=dev-peer1.org1.example.com-demo-0.0.1: dial unix /var/run/docker.sock: connect: no such file or directory 这是目标peer上的docker没有启动造成的。 genesisblock中admin证书错误导致orderer panic: x509: ECDSA verification failureorderer在启动的时候报错，直接panic： 123456789-----END CERTIFICATE-----2018-06-22 14:27:30.462 UTC [orderer/commmon/multichannel] newLedgerResources -&gt; CRIT 04d Error creating channelconfig bundle: initializing channelconfig failed: could not create channel Consortiums sub-group config: setting up the MSP manager failed: the supplied identity is not valid: x509: certificate signed by unknown authority (possibly because of &quot;x509: ECDSA verification failure&quot; while trying to verify candidate authority certificate &quot;ca.org1.example.com&quot;)panic: Error creating channelconfig bundle: initializing channelconfig failed: could not create channel Consortiums sub-group config: setting up the MSP manager failed: the supplied identity is not valid: x509: certificate signed by unknown authority (possibly because of &quot;x509: ECDSA verification failure&quot; while trying to verify candidate authority certificate &quot;ca.org1.example.com&quot;)goroutine 1 [running]:github.com/hyperledger/fabric/vendor/github.com/op/go-logging.(*Logger).Panicf(0xc4201ee120, 0x108668e, 0x27, 0xc42026af50, 0x1, 0x1) /w/workspace/fabric-binaries-x86_64/gopath/src/github.com/hyperledger/fabric/vendor/github.com/op/go-logging/logger.go:194 +0x134github.com/hyperledger/fabric/orderer/common/multichannel.(*Registrar).newLedgerResources(0xc42010a380, 0xc420138840, 0xc420138840) /w/workspace/fabric-binaries-x86_64/gopath/src/github.com/hyperledger/fabric/orderer/common/multichannel/registrar.go:253 +0x391 怀疑是创世块的原因，用下面的命令将创始块解开： 1./bin/configtxgen -profile TwoOrgsOrdererGenesis -outputBlock ./genesisblock 发现比较奇怪的地方，Org1的Admin证书有两个： 123456789101112&quot;groups&quot;: &#123; &quot;Org1MSP&quot;: &#123; &quot;mod_policy&quot;: &quot;Admins&quot;, ... &quot;mod_policy&quot;: &quot;Admins&quot;, &quot;value&quot;: &#123; &quot;config&quot;: &#123; &quot;admins&quot;: [ &quot;LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNHVENDQWIrZ0F3SUJBZ0lRVXRxQWxlZENzWkErWStWdlZMUTZQakFLQmdncWhrak9QUVFEQWpCek1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVpNQmNHQTFVRUNoTVFiM0puTVM1bGVHRnRjR3hsTG1OdmJURWNNQm9HQTFVRUF4TVRZMkV1CmIzSm5NUzVsZUdGdGNHeGxMbU52YlRBZUZ3MHhPREEyTWpFd05qVTNNekJhRncweU9EQTJNVGd3TmpVM016QmEKTUZzeEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZd0ZBWURWUVFIRXcxVApZVzRnUm5KaGJtTnBjMk52TVI4d0hRWURWUVFEREJaQlpHMXBia0J2Y21jeExtVjRZVzF3YkdVdVkyOXRNRmt3CkV3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFRVp3cUhTVmxxRGNKNC9aVSt0YnB5RVBSTkl5ellMdTMKRGlRVUZOMklBZm5vVGhjTjRmY3Y4c2dsdXUxcnpJYUVHSFRFLzd0TC9EdEg2U3Fjd2tOQkthTk5NRXN3RGdZRApWUjBQQVFIL0JBUURBZ2VBTUF3R0ExVWRFd0VCL3dRQ01BQXdLd1lEVlIwakJDUXdJb0FnbkpjYVVLVFlseVJxCjcyckk4QXNINHNVZHB0ZytWY3IvbHkxZlp3QndrOEF3Q2dZSUtvWkl6ajBFQXdJRFNBQXdSUUloQUsvRXh6NlYKRVYwUFl4M1BQbitPMysvODQrdXFEVkZ2Q1ZRUEVNcU1yV3dkQWlBNVVqTDcyb2drTHB3UUtGZ1ptdTJqRmtPWApSVnhpY0htLzZCR3htelFRc1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==&quot;, &quot;LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUNGVENDQWJ5Z0F3SUJBZ0lRU3E0VzJ1SEVqbHdXZHdGY21WNUlpekFLQmdncWhrak9QUVFEQWpCek1Rc3cKQ1FZRFZRUUdFd0pWVXpFVE1CRUdBMVVFQ0JNS1EyRnNhV1p2Y201cFlURVdNQlFHQTFVRUJ4TU5VMkZ1SUVaeQpZVzVqYVhOamJ6RVpNQmNHQTFVRUNoTVFiM0puTVM1bGVHRnRjR3hsTG1OdmJURWNNQm9HQTFVRUF4TVRZMkV1CmIzSm5NUzVsZUdGdGNHeGxMbU52YlRBZUZ3MHhPREEyTWpFd056VXdNVEZhRncweU9EQTJNVGd3TnpVd01URmEKTUZneEN6QUpCZ05WQkFZVEFsVlRNUk13RVFZRFZRUUlFd3BEWVd4cFptOXlibWxoTVJZd0ZBWURWUVFIRXcxVApZVzRnUm5KaGJtTnBjMk52TVJ3d0dnWURWUVFERXhOallTNXZjbWN4TG1WNFlXMXdiR1V1WTI5dE1Ga3dFd1lICktvWkl6ajBDQVFZSUtvWkl6ajBEQVFjRFFnQUVxNHl6K0tqSTR2ZmtObzQ0bWp0Q25HQ2cwLzA3L2Y5VW1sZlEKMlpSZWtHN2lyVm1QY0N6YnRVVEcvTFJjbndVemgyaFMvZkg5cGxvZEM4a1pwSlpXQzZOTk1Fc3dEZ1lEVlIwUApBUUgvQkFRREFnZUFNQXdHQTFVZEV3RUIvd1FDTUFBd0t3WURWUjBqQkNRd0lvQWdPc1NNQ2VqcnBOMnBhNEZSCnBOMVE2eXJkVHJleXNGY0Q1Ym9TcVNzSnFLNHdDZ1lJS29aSXpqMEVBd0lEUndBd1JBSWdCQWo1Q3l2cEFhU0kKaTh4anpVVHZxbUt5dmxSOFFPeExBUTAvVi9jRGpTNENJRVg3V1lnZzYwTFUwTy9LNEpmVVpiQmoyNHRBbTkxcgpkQmczN21IZHZVcSsKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=&quot; ], ... 将上面的两大行字符串分别用base64解码得到证书，然后用openssl命令查看： 12echo &quot;LS0tLS1CRUdJTiBDRVJUSU....tLS0tCg==&quot; |base64 -D &gt;a.certopenssl x509 -in a.cert -text 第一个证书正确： 123... Subject: C=US, ST=California, L=San Francisco, CN=Admin@org1.example.com... 查看第二行： 12echo &quot;LS0tLS1CRUdJTi....tLS0tLQo=&quot; |base64 -D &gt;b.certopenssl x509 -in b.cert -text 发现第二个证书是CA证书，不是用户证书！ 1Subject: C=US, ST=California, L=San Francisco, CN=ca.org1.example.com 检查生成genesisblock时使用的configtx.yaml文件，发现configtx.yaml中配置的msp目录： 1MSPDir: ./certs/peerOrganizations/org1.example.com/msp msp的admincerts子目录中，多出了一个ca证书： 12$ ls ./certs/peerOrganizations/org1.example.com/msp/admincerts/Admin@org1.example.com-cert.pem ca.org1.example.com-cert.pem 把多出的ca证书删除。 残留数据导致orderer启动失败启动orderer的时候报错，orderer直接panic： 122018-06-21 11:01:47.892 CST [orderer/commmon/multichannel] newLedgerResources -&gt; CRIT 052 Error creating channelconfig bundle: initializing channelconfig failed: could not create channel Orderer sub-group config: setting up the MSP manager failed: the supplied identity is not valid: x509: certificate signed by unknown authority (possibly because of &quot;x509: ECDSA verification failure&quot; while trying to verify candidate authority certificate &quot;ca.example.com&quot;)panic: Error creating channelconfig bundle: initializing channelconfig failed: could not create channel Orderer sub-group config: setting up the MSP manager failed: the supplied identity is not valid: x509: certificate signed by unknown authority (possibly because of &quot;x509: ECDSA verification failure&quot; while trying to verify candidate authority certificate &quot;ca.example.com&quot;) 排查发现，部署orderer的机器上以前部署过orderer，并且orderer.yaml中配置的数据路径/opt/app/fabric/orderer/data中残留了以前的数据。 将/opt/app/fabric/orderer/data中的文件都删除后，问题解决。]]></content>
      <categories>
        <category>区块链</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[nginx基础整理]]></title>
    <url>%2Fposts%2F8d1c645b.html</url>
    <content type="text"><![CDATA[安装安装依赖 prce(重定向支持)和openssl(https支持，如果不需要https可以不安装。) 123yum install -y pcre-devel yum -y install gcc make gcc-c++ wgetyum -y install openssl openssl-devel 下载nginx的所有版本在这里 123456789#创建存放源码包的目录[root@nginx ~]# mkdir tools[root@nginx ~]# cd tools/ #下载Nginx源码包[root@nginx tools]# wget http://nginx.org/download/nginx-1.14.2.tar.gz[root@nginx tools]# lsnginx-1.14.2.tar.gz #解压Nginx源码包[root@nginx tools]# tar -xf nginx-1.14.2.tar.gz 编译安装然后进入目录编译安装 123 #创建安装的目录[root@nginx nginx-1.14.2]# mkdir -p /application/nginx[root@nginx nginx-1.14.2]# ./configure --prefix=/application/nginx 如果没有error信息，就可以执行下边的安装了： 12makemake install nginx测试运行下面命令会出现两个结果，一般情况nginx会安装在/usr/local/nginx目录中 12345cd /usr/local/nginx/sbin/./nginx -t# nginx: the configuration file /usr/local/nginx/conf/nginx.conf syntax is ok# nginx: configuration file /usr/local/nginx/conf/nginx.conf test is successful 设置全局nginx命令1vi ~/.bash_profile 将下面内容添加到 ~/.bash_profile 文件中 12PATH=$PATH:$HOME/bin:/usr/local/nginx/sbin/export PATH 运行命令 source ~/.bash_profile 让配置立即生效。你就可以全局运行 nginx 命令了。 开机自启动开机自启动方法一： 编辑 vi /lib/systemd/system/nginx.service 文件，没有创建一个 touch nginx.service 然后将如下内容根据具体情况进行修改后，添加到nginx.service文件中： 12345678910111213141516[Unit]Description=nginxAfter=network.target remote-fs.target nss-lookup.target[Service]Type=forkingPIDFile=/var/run/nginx.pidExecStartPre=/usr/local/nginx/sbin/nginx -t -c /usr/local/nginx/conf/nginx.confExecStart=/usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.confExecReload=/bin/kill -s HUP $MAINPIDExecStop=/bin/kill -s QUIT $MAINPIDPrivateTmp=true[Install]WantedBy=multi-user.target [Unit]:服务的说明 Description:描述服务 After:描述服务类别 [Service]服务运行参数的设置 Type=forking是后台运行的形式 ExecStart为服务的具体运行命令 ExecReload为重启命令 ExecStop为停止命令 PrivateTmp=True表示给服务分配独立的临时空间 注意：[Service]的启动、重启、停止命令全部要求使用绝对路径。 [Install]运行级别下服务安装的相关设置，可设置为多用户，即系统运行级别为3。 保存退出。 设置开机启动，使配置生效： 1234567891011121314# 启动nginx服务systemctl start nginx.service# 停止开机自启动systemctl disable nginx.service# 查看服务当前状态systemctl status nginx.service# 查看所有已启动的服务systemctl list-units --type=service# 重新启动服务systemctl restart nginx.service# 设置开机自启动systemctl enable nginx.service# 输出下面内容表示成功了Created symlink from /etc/systemd/system/multi-user.target.wants/nginx.service to /usr/lib/systemd/system/nginx.service. 123456789systemctl is-enabled servicename.service # 查询服务是否开机启动systemctl enable *.service # 开机运行服务systemctl disable *.service # 取消开机运行systemctl start *.service # 启动服务systemctl stop *.service # 停止服务systemctl restart *.service # 重启服务systemctl reload *.service # 重新加载服务配置文件systemctl status *.service # 查询服务运行状态systemctl --failed # 显示启动失败的服务 注：*代表某个服务的名字，如http的服务名为httpd 开机自启动方法二： 1234vi /etc/rc.local# 在 rc.local 文件中，添加下面这条命令/usr/local/nginx/sbin/nginx start 如果开机后发现自启动脚本没有执行，你要去确认一下rc.local这个文件的访问权限是否是可执行的，因为rc.local默认是不可执行的。修改rc.local访问权限，增加可执行权限： 12# /etc/rc.local是/etc/rc.d/rc.local的软连接，chmod +x /etc/rc.d/rc.local 参数说明 参数 说明 –prefix=&lt;path&gt; Nginx安装路径。如果没有指定，默认为 /usr/local/nginx。 –sbin-path=&lt;path&gt; Nginx可执行文件安装路径。只能安装时指定，如果没有指定，默认为&lt;prefix&gt;/sbin/nginx。 –conf-path=&lt;path&gt; 在没有给定-c选项下默认的nginx.conf的路径。如果没有指定，默认为&lt;prefix&gt;/conf/nginx.conf。 –pid-path=&lt;path&gt; 在nginx.conf中没有指定pid指令的情况下，默认的nginx.pid的路径。如果没有指定，默认为 &lt;prefix&gt;/logs/nginx.pid。 –lock-path=&lt;path&gt; nginx.lock文件的路径。 –error-log-path=&lt;path&gt; 在nginx.conf中没有指定error_log指令的情况下，默认的错误日志的路径。如果没有指定，默认为 &lt;prefix&gt;/- logs/error.log。 –http-log-path=&lt;path&gt; 在nginx.conf中没有指定access_log指令的情况下，默认的访问日志的路径。如果没有指定，默认为 &lt;prefix&gt;/- logs/access.log。 –user=&lt;user&gt; 在nginx.conf中没有指定user指令的情况下，默认的nginx使用的用户。如果没有指定，默认为 nobody。 –group=&lt;group&gt; 在nginx.conf中没有指定user指令的情况下，默认的nginx使用的组。如果没有指定，默认为 nobody。 –builddir=DIR 指定编译的目录 –with-rtsig_module 启用 rtsig 模块 –with-select_module –without-select_module 允许或不允许开启SELECT模式，如果 configure 没有找到更合适的模式，比如：kqueue(sun os),epoll (linux kenel 2.6+), rtsig(- 实时信号)或者/dev/poll(一种类似select的模式，底层实现与SELECT基本相 同，都是采用轮训方法) SELECT模式将是默认安装模式 –with-poll_module –without-poll_module Whether or not to enable the poll module. This module is enabled by, default if a more suitable method such as kqueue, epoll, rtsig or /dev/poll is not discovered by configure. –with-http_ssl_module Enable ngx_http_ssl_module. Enables SSL support and the ability to handle HTTPS requests. Requires OpenSSL. On Debian, this is libssl-dev. 开启HTTP SSL模块，使NGINX可以支持HTTPS请求。这个模块需要已经安装了OPENSSL，在DEBIAN上是libssl –with-http_realip_module 启用 ngx_http_realip_module –with-http_addition_module 启用 ngx_http_addition_module –with-http_sub_module 启用 ngx_http_sub_module –with-http_dav_module 启用 ngx_http_dav_module –with-http_flv_module 启用 ngx_http_flv_module –with-http_stub_status_module 启用 “server status” 页 –without-http_charset_module 禁用 ngx_http_charset_module –without-http_gzip_module 禁用 ngx_http_gzip_module. 如果启用，需要 zlib 。 –without-http_ssi_module 禁用 ngx_http_ssi_module –without-http_userid_module 禁用 ngx_http_userid_module –without-http_access_module 禁用 ngx_http_access_module –without-http_auth_basic_module 禁用 ngx_http_auth_basic_module –without-http_autoindex_module 禁用 ngx_http_autoindex_module –without-http_geo_module 禁用 ngx_http_geo_module –without-http_map_module 禁用 ngx_http_map_module –without-http_referer_module 禁用 ngx_http_referer_module –without-http_rewrite_module 禁用 ngx_http_rewrite_module. 如果启用需要 PCRE 。 –without-http_proxy_module 禁用 ngx_http_proxy_module –without-http_fastcgi_module 禁用 ngx_http_fastcgi_module –without-http_memcached_module 禁用 ngx_http_memcached_module –without-http_limit_zone_module 禁用 ngx_http_limit_zone_module –without-http_empty_gif_module 禁用 ngx_http_empty_gif_module –without-http_browser_module 禁用 ngx_http_browser_module –without-http_upstream_ip_hash_module 禁用 ngx_http_upstream_ip_hash_module –with-http_perl_module 启用 ngx_http_perl_module –with-perl_modules_path=PATH 指定 perl 模块的路径 –with-perl=PATH 指定 perl 执行文件的路径 –http-log-path=PATH Set path to the http access log –http-client-body-temp-path=PATH Set path to the http client request body temporary files –http-proxy-temp-path=PATH Set path to the http proxy temporary files –http-fastcgi-temp-path=PATH Set path to the http fastcgi temporary files –without-http 禁用 HTTP server –with-mail 启用 IMAP4/POP3/SMTP 代理模块 –with-mail_ssl_module 启用 ngx_mail_ssl_module –with-cc=PATH 指定 C 编译器的路径 –with-cpp=PATH 指定 C 预处理器的路径 –with-cc-opt=OPTIONS Additional parameters which will be added to the variable CFLAGS. With the use of the system library PCRE in FreeBSD, it is necessary to indicate –with-cc-opt=”-I /usr/local/include”. If we are using select() and it is necessary to increase the number of file descriptors, then this also can be assigned here: –with-cc-opt=”-D FD_SETSIZE=2048”. –with-ld-opt=OPTIONS Additional parameters passed to the linker. With the use of the system library PCRE in - FreeBSD, it is necessary to indicate –with-ld-opt=”-L /usr/local/lib”. –with-cpu-opt=CPU 为特定的 CPU 编译，有效的值包括：pentium, pentiumpro, pentium3, pentium4, athlon, opteron, amd64, sparc32, sparc64, ppc64 –without-pcre 禁止 PCRE 库的使用。同时也会禁止 HTTP rewrite 模块。在 “location” 配置指令中的正则表达式也需要 PCRE 。 –with-pcre=DIR 指定 PCRE 库的源代码的路径。 –with-pcre-opt=OPTIONS Set additional options for PCRE building. –with-md5=DIR Set path to md5 library sources. –with-md5-opt=OPTIONS Set additional options for md5 building. –with-md5-asm Use md5 assembler sources. –with-sha1=DIR Set path to sha1 library sources. –with-sha1-opt=OPTIONS Set additional options for sha1 building. –with-sha1-asm Use sha1 assembler sources. –with-zlib=DIR Set path to zlib library sources. –with-zlib-opt=OPTIONS Set additional options for zlib building. –with-zlib-asm=CPU Use zlib assembler sources optimized for specified CPU, valid values are: pentium, pentiumpro –with-openssl=DIR Set path to OpenSSL library sources –with-openssl-opt=OPTIONS Set additional options for OpenSSL building –with-debug 启用调试日志 –add-module=PATH Add in a third-party module found in directory PATH 配置在Centos 默认配置文件在 /usr/local/nginx-1.5.1/conf/nginx.conf 我们要在这里配置一些文件。nginx.conf是主配置文件，由若干个部分组成，每个大括号{}表示一个部分。每一行指令都由分号结束;，标志着一行的结束。 常用正则 正则 说明 正则 说明 . 匹配除换行符以外的任意字符 $ 匹配字符串的结束 ? 重复0次或1次 {n} 重复n次 + 重复1次或更多次 {n,} 重复n次或更多次 * 重复0次或更多次 [c] 匹配单个字符c \d 匹配数字 [a-z] 匹配a-z小写字母的任意一个 ^ 匹配字符串的开始 - - 全局变量 变量 说明 变量 说明 $args 这个变量等于请求行中的参数，同$query_string $remote_port 客户端的端口。 $content_length 请求头中的Content-length字段。 $remote_user 已经经过Auth Basic Module验证的用户名。 $content_type 请求头中的Content-Type字段。 $request_filename 当前请求的文件路径，由root或alias指令与URI请求生成。 $document_root 当前请求在root指令中指定的值。 $scheme HTTP方法（如http，https）。 $host 请求主机头字段，否则为服务器名称。 $server_protocol 请求使用的协议，通常是HTTP/1.0或HTTP/1.1。 $http_user_agent 客户端agent信息 $server_addr 服务器地址，在完成一次系统调用后可以确定这个值。 $http_cookie 客户端cookie信息 $server_name 服务器名称。 $limit_rate 这个变量可以限制连接速率。 $server_port 请求到达服务器的端口号。 $request_method 客户端请求的动作，通常为GET或POST。 $request_uri 包含请求参数的原始URI，不包含主机名，如：/foo/bar.php?arg=baz。 $remote_addr 客户端的IP地址。 $uri 不带请求参数的当前URI，$uri不包含主机名，如/foo/bar.html。 $document_uri 与$uri相同。 - - 例如请求：http://localhost:3000/test1/test2/test.php $host：localhost$server_port：3000$request_uri：/test1/test2/test.php$document_uri：/test1/test2/test.php$document_root：/var/www/html$request_filename：/var/www/html/test1/test2/test.php 符号参考 符号 说明 符号 说明 符号 说明 k,K 千字节 m,M 兆字节 ms 毫秒 s 秒 m 分钟 h 小时 d 日 w 周 M 一个月, 30天 例如，”8k”，”1m” 代表字节数计量。例如，”1h 30m”，”1y 6M”。代表 “1小时 30分”，”1年零6个月”。 配置文件nginx 的配置系统由一个主配置文件和其他一些辅助的配置文件构成。这些配置文件均是纯文本文件，全部位于 nginx 安装目录下的 conf 目录下。 指令由 nginx 的各个模块提供，不同的模块会提供不同的指令来实现配置。 指令除了 Key-Value 的形式，还有作用域指令。 nginx.conf 中的配置信息，根据其逻辑上的意义，对它们进行了分类，也就是分成了多个作用域，或者称之为配置指令上下文。不同的作用域含有一个或者多个配置项。 下面的这些上下文指令是用的比较多： Directive Description Contains Directive main nginx 在运行时与具体业务功能（比如 http 服务或者 email 服务代理）无关的一些参数，比如工作进程数，运行的身份等。 user, worker_processes, error_log, events, http, mail http 与提供 http 服务相关的一些配置参数。例如：是否使用 keepalive 啊，是否使用 gzip 进行压缩等。 server server http 服务上支持若干虚拟主机。每个虚拟主机一个对应的 server 配置项，配置项里面包含该虚拟主机相关的配置。在提供 mail 服务的代理时，也可以建立若干 server. 每个 server 通过监听的地址来区分。 listen, server_name, access_log, location, protocol, proxy, smtp_auth, xclient location http 服务中，某些特定的 URL 对应的一系列配置项。 index, root mail 实现 email 相关的 SMTP/IMAP/POP3 代理时，共享的一些配置项（因为可能实现多个代理，工作在多个监听地址上）。 server, http, imap_capabilities include 以便增强配置文件的可读性，使得部分配置文件可以重新使用。 - valid_referers 用来校验Http请求头Referer是否有效。 - try_files 用在server部分，不过最常见的还是用在location部分，它会按照给定的参数顺序进行尝试，第一个被匹配到的将会被使用。 - if 当在location块中使用if指令，在某些情况下它并不按照预期运行，一般来说避免使用if指令。 - 例如我们再 nginx.conf 里面引用两个配置 vhost/example.com.conf 和 vhost/gitlab.com.conf 它们都被放在一个我自己新建的目录 vhost 下面。nginx.conf 配置如下： 12345678910111213141516171819202122232425262728293031323334353637worker_processes 1;events &#123; worker_connections 1024;&#125;http &#123; include mime.types; default_type application/octet-stream; #log_format main &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos; # &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos; # &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;; #access_log logs/access.log main; sendfile on; #tcp_nopush on; #keepalive_timeout 0; keepalive_timeout 65; #gzip on; server &#123; listen 80; server_name localhost; location / &#123; root html; index index.html index.htm; &#125; error_page 500 502 503 504 /50x.html; location = /50x.html &#123; root html; &#125; &#125; include vhost/example.com.conf; include vhost/gitlab.com.conf;&#125; 简单的配置: example.com.conf 1234567server &#123; #侦听的80端口 listen 80; server_name baidu.com app.baidu.com; # 这里指定域名 index index.html index.htm; # 这里指定默认入口页面 root /home/www/app.baidu.com; # 这里指定目录&#125; 内置预定义变量Nginx提供了许多预定义的变量，也可以通过使用set来设置变量。你可以在if中使用预定义变量，也可以将它们传递给代理服务器。以下是一些常见的预定义变量，更多详见 变量名称 值 $args_name 在请求中的name参数 $args 所有请求参数 $query_string $args的别名 $content_length 请求头Content-Length的值 $content_type 请求头Content-Type的值 $host 如果当前有Host，则为请求头Host的值；如果没有这个头，那么该值等于匹配该请求的server_name的值 $remote_addr 客户端的IP地址 $request 完整的请求，从客户端收到，包括Http请求方法、URI、Http协议、头、请求体 $request_uri 完整请求的URI，从客户端来的请求，包括参数 $scheme 当前请求的协议 $uri 当前请求的标准化URI 反向代理反向代理是一个Web服务器，它接受客户端的连接请求，然后将请求转发给上游服务器，并将从服务器得到的结果返回给连接的客户端。下面简单的反向代理的例子： 123456789101112server &#123; listen 80; server_name localhost; client_max_body_size 1024M; # 允许客户端请求的最大单文件字节数 location / &#123; proxy_pass http://localhost:8080; proxy_set_header Host $host:$server_port; proxy_set_header X-Forwarded-For $remote_addr; # HTTP的请求端真实的IP proxy_set_header X-Forwarded-Proto $scheme; # 为了正确地识别实际用户发出的协议是 http 还是 https &#125;&#125; 复杂的配置: gitlab.com.conf。 1234567891011121314151617181920server &#123; #侦听的80端口 listen 80; server_name git.example.cn; location / &#123; proxy_pass http://localhost:3000; #以下是一些反向代理的配置可删除 proxy_redirect off; #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP proxy_set_header Host $host; client_max_body_size 10m; #允许客户端请求的最大单文件字节数 client_body_buffer_size 128k; #缓冲区代理缓冲用户端请求的最大字节数 proxy_connect_timeout 300; #nginx跟后端服务器连接超时时间(代理连接超时) proxy_send_timeout 300; #后端服务器数据回传时间(代理发送超时) proxy_read_timeout 300; #连接成功后，后端服务器响应时间(代理接收超时) proxy_buffer_size 4k; #设置代理服务器（nginx）保存用户头信息的缓冲区大小 proxy_buffers 4 32k; #proxy_buffers缓冲区，网页平均在32k以下的话，这样设置 proxy_busy_buffers_size 64k; #高负荷下缓冲大小（proxy_buffers*2） &#125;&#125; 代理到上游服务器的配置中，最重要的是proxy_pass指令。以下是代理模块中的一些常用指令： 指令 说明 proxy_connect_timeout Nginx从接受请求至连接到上游服务器的最长等待时间 proxy_send_timeout 后端服务器数据回传时间(代理发送超时) proxy_read_timeout 连接成功后，后端服务器响应时间(代理接收超时) proxy_cookie_domain 替代从上游服务器来的Set-Cookie头的domain属性 proxy_cookie_path 替代从上游服务器来的Set-Cookie头的path属性 proxy_buffer_size 设置代理服务器（nginx）保存用户头信息的缓冲区大小 proxy_buffers proxy_buffers缓冲区，网页平均在多少k以下 proxy_set_header 重写发送到上游服务器头的内容，也可以通过将某个头部的值设置为空字符串，而不发送某个头部的方法实现 proxy_ignore_headers 这个指令禁止处理来自代理服务器的应答。 proxy_intercept_errors 使nginx阻止HTTP应答代码为400或者更高的应答。 负载均衡upstream指令启用一个新的配置区段，在该区段定义一组上游服务器。这些服务器可能被设置不同的权重，也可能出于对服务器进行维护，标记为down。 123456789101112131415161718192021222324252627282930313233upstream gitlab &#123; ip_hash; # upstream的负载均衡，weight是权重，可以根据机器配置定义权重。weigth参数表示权值，权值越高被分配到的几率越大。 server 192.168.122.11:8081 ; server 127.0.0.1:82 weight=3; server 127.0.0.1:83 weight=3 down; server 127.0.0.1:84 weight=3; max_fails=3 fail_timeout=20s; server 127.0.0.1:85 weight=4;; keepalive 32;&#125;server &#123; #侦听的80端口 listen 80; server_name git.example.cn; location / &#123; proxy_pass http://gitlab; #在这里设置一个代理，和upstream的名字一样 #以下是一些反向代理的配置可删除 proxy_redirect off; #后端的Web服务器可以通过X-Forwarded-For获取用户真实IP proxy_set_header Host $host; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; client_max_body_size 10m; #允许客户端请求的最大单文件字节数 client_body_buffer_size 128k; #缓冲区代理缓冲用户端请求的最大字节数 proxy_connect_timeout 300; #nginx跟后端服务器连接超时时间(代理连接超时) proxy_send_timeout 300; #后端服务器数据回传时间(代理发送超时) proxy_read_timeout 300; #连接成功后，后端服务器响应时间(代理接收超时) proxy_buffer_size 4k; #设置代理服务器（nginx）保存用户头信息的缓冲区大小 proxy_buffers 4 32k;# 缓冲区，网页平均在32k以下的话，这样设置 proxy_busy_buffers_size 64k; #高负荷下缓冲大小（proxy_buffers*2） proxy_temp_file_write_size 64k; #设定缓存文件夹大小，大于这个值，将从upstream服务器传 &#125;&#125; 每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器down掉，能自动剔除。 负载均衡： upstream模块能够使用3种负载均衡算法：轮询、IP哈希、最少连接数。 轮询： 默认情况下使用轮询算法，不需要配置指令来激活它，它是基于在队列中谁是下一个的原理确保访问均匀地分布到每个上游服务器；IP哈希： 通过ip_hash指令来激活，Nginx通过IPv4地址的前3个字节或者整个IPv6地址作为哈希键来实现，同一个IP地址总是能被映射到同一个上游服务器；最少连接数： 通过least_conn指令来激活，该算法通过选择一个活跃数最少的上游服务器进行连接。如果上游服务器处理能力不同，可以通过给server配置weight权重来说明，该算法将考虑到不同服务器的加权最少连接数。 RR简单配置 ，这里我配置了2台服务器，当然实际上是一台，只是端口不一样而已，而8081的服务器是不存在的，也就是说访问不到，但是我们访问 http://localhost 的时候，也不会有问题，会默认跳转到http://localhost:8080具体是因为Nginx会自动判断服务器的状态，如果服务器处于不能访问（服务器挂了），就不会跳转到这台服务器，所以也避免了一台服务器挂了影响使用的情况，由于Nginx默认是RR策略，所以我们不需要其他更多的设置 1234567891011121314upstream test &#123; server localhost:8080; server localhost:8081;&#125;server &#123; listen 81; server_name localhost; client_max_body_size 1024M; location / &#123; proxy_pass http://test; proxy_set_header Host $host:$server_port; &#125;&#125; 负载均衡的核心代码为 1234upstream test &#123; server localhost:8080; server localhost:8081;&#125; 权重指定轮询几率，weight和访问比率成正比，用于后端服务器性能不均的情况。 例如 1234upstream test &#123; server localhost:8080 weight=9; server localhost:8081 weight=1;&#125; 那么10次一般只会有1次会访问到8081，而有9次会访问到8080 ip_hash上面的2种方式都有一个问题，那就是下一个请求来的时候请求可能分发到另外一个服务器，当我们的程序不是无状态的时候（采用了session保存数据），这时候就有一个很大的很问题了，比如把登录信息保存到了session中，那么跳转到另外一台服务器的时候就需要重新登录了，所以很多时候我们需要一个客户只访问一个服务器，那么就需要用iphash了，iphash的每个请求按访问ip的hash结果分配，这样每个访客固定访问一个后端服务器，可以解决session的问题。 12345upstream test &#123; ip_hash; server localhost:8080; server localhost:8081;&#125; fair这是个第三方模块，按后端服务器的响应时间来分配请求，响应时间短的优先分配。 12345upstream backend &#123; fair; server localhost:8080; server localhost:8081;&#125; url_hash这是个第三方模块，按访问url的hash结果来分配请求，使每个url定向到同一个后端服务器，后端服务器为缓存时比较有效。 在upstream中加入hash语句，server语句中不能写入weight等其他的参数，hash_method是使用的hash算法 123456upstream backend &#123; hash $request_uri; hash_method crc32; server localhost:8080; server localhost:8081;&#125; 以上5种负载均衡各自适用不同情况下使用，所以可以根据实际情况选择使用哪种策略模式，不过fair和url_hash需要安装第三方模块才能使用 server指令可选参数： weight：设置一个服务器的访问权重，数值越高，收到的请求也越多； fail_timeout：在这个指定的时间内服务器必须提供响应，如果在这个时间内没有收到响应，那么服务器将会被标记为down状态； max_fails：设置在fail_timeout时间之内尝试对一个服务器连接的最大次数，如果超过这个次数，那么服务器将会被标记为down; down：标记一个服务器不再接受任何请求； backup：一旦其他服务器宕机，那么有该标记的机器将会接收请求。 keepalive指令： Nginx服务器将会为每一个worker进行保持同上游服务器的连接。 屏蔽ip在nginx的配置文件nginx.conf中加入如下配置，可以放到http, server, location, limit_except语句块，需要注意相对路径，本例当中nginx.conf，blocksip.conf在同一个目录中。 1include blockip.conf; 在blockip.conf里面输入内容，如： 1234567891011121314deny 165.91.122.67;deny IP; # 屏蔽单个ip访问allow IP; # 允许单个ip访问deny all; # 屏蔽所有ip访问allow all; # 允许所有ip访问deny 123.0.0.0/8 # 屏蔽整个段即从123.0.0.1到123.255.255.254访问的命令deny 124.45.0.0/16 # 屏蔽IP段即从123.45.0.1到123.45.255.254访问的命令deny 123.45.6.0/24 # 屏蔽IP段即从123.45.6.1到123.45.6.254访问的命令# 如果你想实现这样的应用，除了几个IP外，其他全部拒绝allow 1.1.1.1; allow 1.1.1.2;deny all; 第三方模块安装方法1./configure --prefix=/你的安装目录 --add-module=/第三方模块目录 重定向 permanent 永久性重定向。请求日志中的状态码为301 redirect 临时重定向。请求日志中的状态码为302 重定向整个网站1234server &#123; server_name old-site.com return 301 $scheme://new-site.com$request_uri;&#125; 重定向单页12345server &#123; location = /oldpage.html &#123; return 301 http://example.org/newpage.html; &#125;&#125; 重定向整个子路径123location /old-site &#123; rewrite ^/old-site/(.*) http://example.org/new-site/$1 permanent;&#125; 性能内容缓存允许浏览器基本上永久地缓存静态内容。 Nginx将为您设置Expires和Cache-Control头信息。 1234location /static &#123; root /data; expires max;&#125; 如果要求浏览器永远不会缓存响应（例如用于跟踪请求），请使用-1。 1234location = /empty.gif &#123; empty_gif; expires -1;&#125; Gzip压缩123456789101112131415gzip on;gzip_buffers 16 8k;gzip_comp_level 6;gzip_http_version 1.1;gzip_min_length 256;gzip_proxied any;gzip_vary on;gzip_types text/xml application/xml application/atom+xml application/rss+xml application/xhtml+xml image/svg+xml text/javascript application/javascript application/x-javascript text/x-json application/json application/x-web-app-manifest+json text/css text/plain text/x-component font/opentype application/x-font-ttf application/vnd.ms-fontobject image/x-icon;gzip_disable &quot;msie6&quot;; 打开文件缓存1234open_file_cache max=1000 inactive=20s;open_file_cache_valid 30s;open_file_cache_min_uses 2;open_file_cache_errors on; SSL缓存12ssl_session_cache shared:SSL:10m;ssl_session_timeout 10m; 上游Keepalive123456789101112upstream backend &#123; server 127.0.0.1:8080; keepalive 32;&#125;server &#123; ... location /api/ &#123; proxy_pass http://backend; proxy_http_version 1.1; proxy_set_header Connection &quot;&quot;; &#125;&#125; 监控使用ngxtop实时解析nginx访问日志，并且将处理结果输出到终端，功能类似于系统命令top。所有示例都读取nginx配置文件的访问日志位置和格式。如果要指定访问日志文件和/或日志格式，请使用-f和-a选项。 注意：在nginx配置中/usr/local/nginx/conf/nginx.conf日志文件必须是绝对路径。 12345678910111213141516171819202122# 安装 ngxtoppip install ngxtop# 实时状态ngxtop# 状态为404的前10个请求的路径：ngxtop top request_path --filter &apos;status == 404&apos;# 发送总字节数最多的前10个请求ngxtop --order-by &apos;avg(bytes_sent) * count&apos;# 排名前十位的IP，例如，谁攻击你最多ngxtop --group-by remote_addr# 打印具有4xx或5xx状态的请求，以及status和http refererngxtop -i &apos;status &gt;= 400&apos; print request status http_referer# 由200个请求路径响应发送的平均正文字节以&apos;foo&apos;开始：ngxtop avg bytes_sent --filter &apos;status == 200 and request_path.startswith(&quot;foo&quot;)&apos;# 使用“common”日志格式从远程机器分析apache访问日志ssh remote tail -f /var/log/apache2/access.log | ngxtop -f common 常见使用场景跨域问题在工作中，有时候会遇到一些接口不支持跨域，这时候可以简单的添加add_headers来支持cors跨域。配置如下： 123456789101112131415server &#123; listen 80; server_name api.xxx.com; add_header &apos;Access-Control-Allow-Origin&apos; &apos;*&apos;; add_header &apos;Access-Control-Allow-Credentials&apos; &apos;true&apos;; add_header &apos;Access-Control-Allow-Methods&apos; &apos;GET,POST,HEAD&apos;; location / &#123; proxy_pass http://127.0.0.1:3000; proxy_set_header X-Real-IP $remote_addr; proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; proxy_set_header Host $http_host; &#125; &#125; 上面更改头信息，还有一种，使用 rewrite 指令重定向URI来解决跨域问题。 1234567891011121314151617181920212223242526272829303132333435363738upstream test &#123; server 127.0.0.1:8080; server localhost:8081;&#125;server &#123; listen 80; server_name api.xxx.com; location / &#123; root html; #去请求../html文件夹里的文件 index index.html index.htm; #首页响应地址 &#125; # 用于拦截请求，匹配任何以 /api/开头的地址， # 匹配符合以后，停止往下搜索正则。 location ^~/api/&#123; # 代表重写拦截进来的请求，并且只能对域名后边的除去传递的参数外的字符串起作用， # 例如www.a.com/proxy/api/msg?meth=1&amp;par=2重写，只对/proxy/api/msg重写。 # rewrite后面的参数是一个简单的正则 ^/api/(.*)$， # $1代表正则中的第一个()，$2代表第二个()的值，以此类推。 rewrite ^/api/(.*)$ /$1 break; # 把请求代理到其他主机 # 其中 http://www.b.com/ 写法和 http://www.b.com写法的区别如下 # 如果你的请求地址是他 http://server/html/test.jsp # 配置一： http://www.b.com/ 后面有“/” # 将反向代理成 http://www.b.com/html/test.jsp 访问 # 配置一： http://www.b.com 后面没有有“/” # 将反向代理成 http://www.b.com/test.jsp 访问 proxy_pass http://test; # 如果 proxy_pass URL 是 http://a.xx.com/platform/ 这种情况 # proxy_cookie_path应该设置成 /platform/ / (注意两个斜杠之间有空格)。 proxy_cookie_path /platfrom/ /; # http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass_header # 设置 Cookie 头通过 proxy_pass_header Set-Cookie; &#125; &#125; 跳转到带www的域上面123456789101112131415server &#123; listen 80; # 配置正常的带www的域名 server_name www.wangchujiang.com; root /home/www/wabg/download; location / &#123; try_files $uri $uri/ /index.html =404; &#125;&#125;server &#123; # 这个要放到下面， # 将不带www的 wangchujiang.com 永久性重定向到 https://www.wangchujiang.com server_name wangchujiang.com; rewrite ^(.*) https://www.wangchujiang.com$1 permanent;&#125; 代理转发12345678910111213141516171819202122232425262728293031323334upstream server-api&#123; # api 代理服务地址 server 127.0.0.1:3110; &#125;upstream server-resource&#123; # 静态资源 代理服务地址 server 127.0.0.1:3120;&#125;server &#123; listen 3111; server_name localhost; # 这里指定域名 root /home/www/server-statics; # 匹配 api 路由的反向代理到API服务 location ^~/api/ &#123; rewrite ^/(.*)$ /$1 break; proxy_pass http://server-api; &#125; # 假设这里验证码也在API服务中 location ^~/captcha &#123; rewrite ^/(.*)$ /$1 break; proxy_pass http://server-api; &#125; # 假设你的图片资源全部在另外一个服务上面 location ^~/img/ &#123; rewrite ^/(.*)$ /$1 break; proxy_pass http://server-resource; &#125; # 路由在前端，后端没有真实路由，在路由不存在的 404状态的页面返回 /index.html # 这个方式使用场景，你在写React或者Vue项目的时候，没有真实路由 location / &#123; try_files $uri $uri/ /index.html =404; # ^ 空格很重要 &#125;&#125; 监控状态信息通过 nginx -V 来查看是否有 with-http_stub_status_module 该模块。 nginx -V 这里 V 是大写的，如果是小写的 v 即 nginx -v，则不会出现有哪些模块，只会出现 nginx 的版本 1234location /nginx_status &#123; stub_status on; access_log off;&#125; 通过 http://127.0.0.1/nginx_status 访问出现下面结果。 1234Active connections: 3server accepts handled requests 7 7 5 Reading: 0 Writing: 1 Waiting: 2 主动连接(第 1 行) 当前与http建立的连接数，包括等待的客户端连接：3 服务器接受处理的请求(第 2~3 行) 接受的客户端连接总数目：7处理的客户端连接总数目：7客户端总的请求数目：5 读取其它信(第 4 行) 当前，nginx读请求连接当前，nginx写响应返回给客户端目前有多少空闲客户端请求连接 代理转发连接替换1234location ^~/api/upload &#123; rewrite ^/(.*)$ /wfs/v1/upload break; proxy_pass http://wfs-api;&#125; ssl配置超文本传输安全协议（缩写：HTTPS，英语：Hypertext Transfer Protocol Secure）是超文本传输协议和SSL/TLS的组合，用以提供加密通讯及对网络服务器身份的鉴定。HTTPS连接经常被用于万维网上的交易支付和企业信息系统中敏感信息的传输。HTTPS不应与在RFC 2660中定义的安全超文本传输协议（S-HTTP）相混。HTTPS 目前已经是所有注重隐私和安全的网站的首选，随着技术的不断发展，HTTPS 网站已不再是大型网站的专利，所有普通的个人站长和博客均可以自己动手搭建一个安全的加密的网站。 创建SSL证书，如果你购买的证书，就可以直接下载 1234567891011sudo mkdir /etc/nginx/ssl# 创建了有效期100年，加密强度为RSA2048的SSL密钥key和X509证书文件。sudo openssl req -x509 -nodes -days 36500 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt# 上面命令，会有下面需要填写内容Country Name (2 letter code) [AU]:USState or Province Name (full name) [Some-State]:New YorkLocality Name (eg, city) []:New York CityOrganization Name (eg, company) [Internet Widgits Pty Ltd]:Bouncy Castles, Inc.Organizational Unit Name (eg, section) []:Ministry of Water SlidesCommon Name (e.g. server FQDN or YOUR name) []:your_domain.comEmail Address []:admin@your_domain.com 创建自签证书 123456789101112首先，创建证书和私钥的目录# mkdir -p /etc/nginx/cert# cd /etc/nginx/cert创建服务器私钥，命令会让你输入一个口令：# openssl genrsa -des3 -out nginx.key 2048创建签名请求的证书（CSR）：# openssl req -new -key nginx.key -out nginx.csr在加载SSL支持的Nginx并使用上述私钥时除去必须的口令：# cp nginx.key nginx.key.org# openssl rsa -in nginx.key.org -out nginx.key最后标记证书使用上述私钥和CSR：# openssl x509 -req -days 365 -in nginx.csr -signkey nginx.key -out nginx.crt 查看目前nginx编译选项 1sbin/nginx -V 输出下面内容 1234nginx version: nginx/1.7.8built by gcc 4.4.7 20120313 (Red Hat 4.4.7-4) (GCC)TLS SNI support enabledconfigure arguments: --prefix=/usr/local/nginx-1.7.8 --with-http_ssl_module --with-http_spdy_module --with-http_stub_status_module --with-pcre 如果依赖的模块不存在，可以进入安装目录，输入下面命令重新编译安装。 1./configure --prefix=/usr/local/nginx --with-http_stub_status_module --with-http_ssl_module 运行完成之后还需要make (不用make install) 1234# 备份nginx的二进制文件cp -rf /usr/local/nginx/sbin/nginx /usr/local/nginx/sbin/nginx.bak# 覆盖nginx的二进制文件cp -rf objs/nginx /usr/local/nginx/sbin/ HTTPS server 1234567891011121314151617181920212223242526server &#123; listen 443 ssl; server_name localhost; ssl_certificate /etc/nginx/ssl/nginx.crt; ssl_certificate_key /etc/nginx/ssl/nginx.key; # 禁止在header中出现服务器版本，防止黑客利用版本漏洞攻击 server_tokens off; # 设置ssl/tls会话缓存的类型和大小。如果设置了这个参数一般是shared，buildin可能会参数内存碎片，默认是none，和off差不多，停用缓存。如shared:SSL:10m表示我所有的nginx工作进程共享ssl会话缓存，官网介绍说1M可以存放约4000个sessions。 ssl_session_cache shared:SSL:1m; # 客户端可以重用会话缓存中ssl参数的过期时间，内网系统默认5分钟太短了，可以设成30m即30分钟甚至4h。 ssl_session_timeout 5m; # 选择加密套件，不同的浏览器所支持的套件（和顺序）可能会不同。 # 这里指定的是OpenSSL库能够识别的写法，你可以通过 openssl -v cipher &apos;RC4:HIGH:!aNULL:!MD5&apos;（后面是你所指定的套件加密算法） 来看所支持算法。 ssl_ciphers HIGH:!aNULL:!MD5; # 设置协商加密算法时，优先使用我们服务端的加密套件，而不是客户端浏览器的加密套件。 ssl_prefer_server_ciphers on; location / &#123; root html; index index.html index.htm; &#125;&#125; 强制将http重定向到https1234567server &#123; listen 80; server_name example.com; rewrite ^ https://$http_host$request_uri? permanent; # 强制将http重定向到https # 在错误页面和“服务器”响应头字段中启用或禁用发射nginx版本。 防止黑客利用版本漏洞攻击 server_tokens off;&#125; 两个虚拟主机纯静态-html 支持 1234567891011121314151617181920http &#123; server &#123; listen 80; server_name www.domain1.com; access_log logs/domain1.access.log main; location / &#123; index index.html; root /var/www/domain1.com/htdocs; &#125; &#125; server &#123; listen 80; server_name www.domain2.com; access_log logs/domain2.access.log main; location / &#123; index index.html; root /var/www/domain2.com/htdocs; &#125; &#125;&#125; 虚拟主机标准配置1234567891011http &#123; server &#123; listen 80 default; server_name _ *; access_log logs/default.access.log main; location / &#123; index index.html; root /var/www/default/htdocs; &#125; &#125;&#125; 爬虫过滤根据 User-Agent 过滤请求，通过一个简单的正则表达式，就可以过滤不符合要求的爬虫请求(初级爬虫)。 ~* 表示不区分大小写的正则匹配 1234567location / &#123; if ($http_user_agent ~* &quot;python|curl|java|wget|httpclient|okhttp&quot;) &#123; return 503; &#125; # 正常处理 # ...&#125; 防盗链12345678location ~* \.(gif|jpg|png|swf|flv)$ &#123; root html valid_referers none blocked *.nginxcn.com; if ($invalid_referer) &#123; rewrite ^/ www.nginx.cn #return 404; &#125;&#125; 虚拟目录配置alias指定的目录是准确的，root是指定目录的上级目录，并且该上级目录要含有location指定名称的同名目录。 12345678location /img/ &#123; alias /var/www/image/;&#125;# 访问/img/目录里面的文件时，ningx会自动去/var/www/image/目录找文件location /img/ &#123; root /var/www/image;&#125;# 访问/img/目录下的文件时，nginx会去/var/www/image/img/目录下找文件。] 防盗图配置123456location ~ \/public\/(css|js|img)\/.*\.(js|css|gif|jpg|jpeg|png|bmp|swf) &#123; valid_referers none blocked *.jslite.io; if ($invalid_referer) &#123; rewrite ^/ http://wangchujiang.com/piratesp.png; &#125;&#125; 屏蔽.git等文件123location ~ (.git|.gitattributes|.gitignore|.svn) &#123; deny all;&#125; 域名路径加不加需要都能正常访问12345http://wangchujiang.com/api/index.php?a=1&amp;name=wcj ^ 有后缀http://wangchujiang.com/api/index?a=1&amp;name=wcj ^ 没有后缀 nginx rewrite规则如下： 12345678910rewrite ^/(.*)/$ /index.php?/$1 permanent;if (!-d $request_filename)&#123; set $rule_1 1$rule_1;&#125;if (!-f $request_filename)&#123; set $rule_1 2$rule_1;&#125;if ($rule_1 = &quot;21&quot;)&#123; rewrite ^/ /index.php last;&#125; 错误问题1The plain HTTP request was sent to HTTPS port 解决办法，fastcgi_param HTTPS $https if_not_empty 添加这条规则， 1234567891011121314server &#123; listen 443 ssl; # 注意这条规则 server_name my.domain.com; fastcgi_param HTTPS $https if_not_empty; fastcgi_param HTTPS on; ssl_certificate /etc/ssl/certs/your.pem; ssl_certificate_key /etc/ssl/private/your.key; location / &#123; # Your config here... &#125;&#125;]]></content>
      <categories>
        <category>中间件</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[区块链浏览器部署]]></title>
    <url>%2Fposts%2F984b410.html</url>
    <content type="text"><![CDATA[Hyperledger ExplorerHyperledger Explorer是一个简单，功能强大，易于使用，高度可维护的开源浏览器，用于查看底层区块链网络上的活动 。 postgresql安装创建用户 1useradd postgres 123456789101112131415161718注意：更新yum源，163或者阿里的yum源都可以添加RPM yum install https://download.postgresql.org/pub/repos/yum/9.5/redhat/rhel-7-x86_64/pgdg-centos95-9.5-3.noarch.rpm安装PostgreSQL 9.5 yum install postgresql95-server postgresql95-contrib初始化数据库 /usr/pgsql-9.5/bin/postgresql95-setup initdb设置开机自启动 systemctl enable postgresql-9.5.service启动服务 systemctl start postgresql-9.5.service查看服务运行状态 systemctl status postgresql-9.5.service postgreSQL 安装完成后，会建立一下‘postgres’用户，用于执行PostgreSQL，数据库中也会建立一个’postgres’用户，默认密码为自动生成，需要在系统中改一下。 修改用户密码1234su - postgres 切换用户，执行后提示符会变为 &apos;-bash-4.2$&apos;psql -U postgres 登录数据库，执行后提示符变为 &apos;postgres=#&apos;ALTER USER postgres WITH PASSWORD &apos;gooagoo&apos; 设置postgres用户密码\q 退出数据库 开启远程访问123vi /var/lib/pgsql/9.5/data/postgresql.conf修改#listen_addresses = &apos;localhost&apos; 为 listen_addresses=&apos;*&apos;当然，此处‘*’也可以改为任何你想开放的服务器IP 信任远程连接12345vi /var/lib/pgsql/9.5/data/pg_hba.conf 修改如下内容，信任指定服务器连接 # IPv4 local connections: host all all 127.0.0.1/32 trust host all all 10.211.55.6/32（需要连接的服务器IP） trust 重启1systemctl restart postgresql-9.5.service blockchain-explorer克隆存储库12345678git clone https://github.com/hyperledger/blockchain-explorer.gitcd blockchain-explorer也可以从我的百度链接上面下载：链接：https://pan.baidu.com/s/1VsxMlk5qo_5hUKsJ03DTlA 提取码：9s5f cp -apr blockchain-explorer /var/lib/pgsql/ 数据库设置1234567891011121314su - postgrescd blockchain-explorer/app修改explorerconfig.json以更新postgresql属性postgreSQL主机，端口，数据库，用户名，密码详细信息。“postgreSQL”：&#123; &quot;host&quot;: &quot;127.0.0.1&quot;, &quot;port&quot;: &quot;5432&quot;, &quot;database&quot;: &quot;fabricexplorer&quot;, &quot;username&quot;: &quot;postgres&quot;, &quot;passwd&quot;: &quot;gooagoo&quot;&#125; 运行create database脚本12cd blockchain-explorer/app/persistence/fabric/postgreSQL/db./createdb.sh 安装node1234567tar xvf node-v11.10.0-linux-x64.tarcd node-v11.10.0-linux-x64./configure &amp;&amp; make &amp;&amp; make install装cnpm淘宝源npm install -g cnpm --registry=https://registry.npm.taobao.org npm测试12345678910cnpm installcd blockchain-explorer/app/testcnpm installcnpm run testcd client/cnpm installcnpm test -- -u --coveragecnpm run build由于config.json还没有写配置，所以node test会测试不成功 fabric的网络配置1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586vim blockchain-explorer/app/platform/fabric/config.json&#123; &quot;network-configs&quot;: &#123; &quot;network-1&quot;: &#123; &quot;version&quot;: &quot;1.0&quot;, &quot;clients&quot;: &#123; &quot;client-1&quot;: &#123; &quot;tlsEnable&quot;: false, &quot;organization&quot;: &quot;1D8L291SQ3QRQ80AB2M1029FB60010HCMSP&quot;, &quot;channel&quot;: &quot;vaccine&quot;, &quot;credentialStore&quot;: &#123; &quot;path&quot;: &quot;./tmp/credentialStore_Org1/credential&quot;, &quot;cryptoStore&quot;: &#123; &quot;path&quot;: &quot;./tmp/credentialStore_Org1/crypto&quot; &#125; &#125; &#125; &#125;, &quot;channels&quot;: &#123; &quot;vaccine&quot;: &#123; &quot;peers&quot;: &#123; &quot;peer0.syj.vaccine.com&quot;: &#123;&#125; &#125;, &quot;connection&quot;: &#123; &quot;timeout&quot;: &#123; &quot;peer&quot;: &#123; &quot;endorser&quot;: &quot;6000&quot;, &quot;eventHub&quot;: &quot;6000&quot;, &quot;eventReg&quot;: &quot;6000&quot; &#125; &#125; &#125; &#125; &#125;, &quot;organizations&quot;: &#123; &quot;1D8L291SQ3QRQ80AB2M1029FB60010HCMSP&quot;: &#123; &quot;mspid&quot;: &quot;1D8L291SQ3QRQ80AB2M1029FB60010HCMSP&quot;, &quot;fullpath&quot;: false, &quot;adminPrivateKey&quot;: &#123; &quot;path&quot;: &quot;/data/fabric/fabric-ca-files/vaccine-org/syj.vaccine.com/admin/msp/keystore&quot; &#125;, &quot;signedCert&quot;: &#123; &quot;path&quot;: &quot;/data/fabric/fabric-ca-files/vaccine-org/syj.vaccine.com/admin/msp/signcerts&quot; &#125; &#125;, &quot;1D9K2HVDM752IN0AB2M105R9Q5001125MSP&quot;: &#123; &quot;mspid&quot;: &quot;1D9K2HVDM752IN0AB2M105R9Q5001125MSP&quot;, &quot;fullpath&quot;: false, &quot;adminPrivateKey&quot;: &#123; &quot;path&quot;: &quot;/data/fabric/fabric-ca-files/vaccine-org/czsrmyy.czsjkzx.hbsjkzx.vaccine.com/admin/msp/keystore&quot; &#125;, &quot;signedCert&quot;: &#123; &quot;path&quot;: &quot;/data/fabric/fabric-ca-files/vaccine-org/czsrmyy.czsjkzx.hbsjkzx.vaccine.com/admin/msp/signcerts&quot; &#125; &#125;, &quot;OrdererMSP&quot;: &#123; &quot;mspid&quot;: &quot;OrdererMSP&quot;, &quot;adminPrivateKey&quot;: &#123; &quot;path&quot;: &quot;/data/fabric/fabric-ca-files/vaccine-order/vaccine.syj.vaccine.com/admin/msp/keystore&quot; &#125; &#125; &#125;, &quot;peers&quot;: &#123; &quot;peer0.syj.vaccine.com&quot;: &#123; &quot;url&quot;: &quot;grpc://peer0.syj.vaccine.com:7051&quot;, &quot;eventUrl&quot;: &quot;grpc://peer0.syj.vaccine.com:7053&quot;, &quot;grpcOptions&quot;: &#123; &quot;ssl-target-name-override&quot;: &quot;peer0.syj.vaccine.com&quot; &#125; &#125;, &quot;peer0.czsrmyy.czsjkzx.hbsjkzx.vaccine.com&quot;: &#123; &quot;url&quot;: &quot;grpc://peer0.czsrmyy.czsjkzx.hbsjkzx.vaccine.com:7351&quot; &#125; &#125;, &quot;orderers&quot;: &#123; &quot;orderer1.vaccine.syj.vaccine.com&quot;: &#123; &quot;url&quot;: &quot;grpc://orderer1.vaccine.syj.vaccine.com:7050&quot; &#125; &#125; &#125;, &quot;network-2&quot;: &#123;&#125; &#125;, &quot;configtxgenToolPath&quot;: &quot;/data/fabric/bin&quot;, &quot;license&quot;: &quot;Apache-2.0&quot;&#125; 完成之后，在执行上面的，cnpm test 汉化1234cd /var/lib/pgsql/blockchain-explorer/client/src将components替换成我百度链接的包之后还需要重新，cnpm build一下 注意1234由于区块链浏览器默认需要有锚节点，才能显示所有节点，所以在部署了第一个组织之后，需要在升级下锚节点./bin/configtxgen -profile TwoOrgsChannel -outputAnchorPeersUpdate ./channel-artifacts/Org1MSPanchors.tx -channelID vaccine -asOrg Org1MSPdocker exec -it cli-vaccine peer channel update -o orderer1.vaccine.syj.vaccine.com:7050 -c vaccine -f ./channel-artifacts/Org1MSPanchors.tx 启动12cd blockchain-explorer/./start.sh 访问1ip:8080]]></content>
      <categories>
        <category>区块链</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[python监控es状态]]></title>
    <url>%2Fposts%2F71abe607.html</url>
    <content type="text"><![CDATA[需求用python写一个监控es状态的脚本 实例监控es的机器1234567891011配置文件[root@Ops-script monitor_elasticsearch]# cat escluster_ip.ini[mail]name = sy@xxx.com[tax_es]cluster_ip = 192.168.50.7:9200,192.168.50.8:9200,192.168.50.9:9200name_pass = none,none[analysis_es]cluster_ip = 192.168.50.24:9200,192.168.50.25:9200name_pass = none,none 脚本12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455[root@Ops-script monitor_elasticsearch]# cat monitor_elastic_cluster.pyimport urllib,socket,time,jsonimport logging,requests,configparser,os# 定义日志格式读取配置文件cur_path = os.path.dirname(os.path.realpath(__file__))logging.basicConfig(format=&apos;[ %(asctime)s ] -- %(message)s&apos;, datefmt=&apos;%a, %d %b %Y %H:%M:%S&apos;, filename=cur_path+&quot;/scripts.log&quot;, level=logging.INFO)config_path = os.path.join(cur_path,&quot;escluster_ip.ini&quot;)conf = configparser.ConfigParser()conf.read(config_path)esgroup = conf.sections()def GetClusterIp(): # 按集群名循环检查,集群名为配置文件中的标题 for group in esgroup: # 获取到 mail 中的邮件地址不再继续循环 if group == &quot;mail&quot;: mailname = conf.get(group,&quot;name&quot;) continue # 获取到一个集群 ip 后进行 get 请求 iplist = conf.get(group,&quot;cluster_ip&quot;).split(&quot;,&quot;) for esip in iplist: url = &quot;http://%s/_cat/health&quot;%esip try: # 超时时间为 3 秒, request 的请求值不是200的将全部置为400 # 如果是请求成功,则获取 status 的状态和 status_num 的百分比 response = requests.get(url,timeout=3) request = response.status_code status = response.text.split()[3] status_num = response.text.split()[-1] except: request = 400 # 请求值为 200 后,检查 status 值非 green 状态发送报警邮件,并不在继续检查本集群内的剩余节点 if request == 200: if status != &quot;green&quot;: mailtitle = &quot;elasticsearch集群 [ %s ], ip为:%s ,查状态: %s, 状态百分比: %s&quot;%(group,esip,status,status_num) mailtxt = &quot;elasticsearch集群 [ %s ]\n\nip为: [ %s ]\n\n检查状态为: %s\n\n状态百分比: %s&quot;%(group,esip,status,status_num) command = &quot;echo -e %s%s%s | mail -s %s%s%s %s&quot;%(&apos;&quot;&apos;,mailtxt,&apos;&quot;&apos;,&apos;&quot;&apos;,mailtitle,&apos;&quot;&apos;,mailname) logging.info(mailtitle) os.system(command) break # 请求值不是 200 ,报警后继续检查集群内剩余 ip else: mailtitle = &quot;elasticsearch集群 [ %s ], ip为:%s, 请求超时,请检查端口&quot;%(group,esip) mailtxt = &quot;elasticsearch集群 [ %s ]\n\nip: [ %s ]\n\n请求超时,请检查端口&quot;%(group,esip) command = &quot;echo -e %s%s%s | mail -s %s%s%s %s&quot;%(&apos;&quot;&apos;,mailtxt,&apos;&quot;&apos;,&apos;&quot;&apos;,mailtitle,&apos;&quot;&apos;,mailname) logging.info(mailtitle) os.system(command)if __name__ == &quot;__main__&quot;: GetClusterIp()]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[kubeadm证书以及etcd证书过期处理]]></title>
    <url>%2Fposts%2Ffk755lfl.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[钉钉定时发送值班人员]]></title>
    <url>%2Fposts%2F59cdc228.html</url>
    <content type="text"><![CDATA[需求每天运维人员都需要去做些基础服务，就需要值班人员去轮班解决，现在需要写一个定时发送值班人员的脚本 前提需要自己在钉钉群，申请个机器人，申请过程这里不赘述了，下面是脚本 脚本123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869[root@Ops-script dingding]# mkdir /home/monitor/dingding[root@Ops-script dingding]# touch groupkey helpkey[root@Ops-script dingding]# cat send_dingding.sh #!/bin/bashgroupfiles=&quot;/home/monitor/dingding/groupkey&quot;helpfiles=&quot;/home/monitor/dingding/helpkey&quot;Date=`date +%Y-%m-%d\ %H:%M:%S`url=&quot;https://oapi.dingtalk.com/robot/send?access_token=c2123f81820fccfadfc47bbd629d26e7613ae49f1a053edc6e81f5864c550e30&quot;group=(&quot;a:xx;&quot; &quot;b:xx;&quot; &quot;c:xx;&quot;)opshelp=(&quot;a:xx;&quot; &quot;b:xx;&quot; &quot;c:xx;&quot;)groupkey=`sed -n &quot;1p&quot; $groupfiles`helpkeys=`awk &apos;NR==1&#123;print $1&#125;&apos; $helpfiles`helpkey=`awk &apos;NR==1&#123;print $2&#125;&apos; $helpfiles`# 每日值班人for crew in $&#123;group[@]&#125;;do if echo $crew | grep -q $groupkey ;then values=`echo $crew | awk -F&apos;:&apos; &apos;&#123;print $2&#125;&apos;` onduty_mess=&quot;今日运维值班人: [ $values ]&quot; fidone# 修改缓存文件内的运维值班人员 key , 使得下次人员自动更换if [ $groupkey == &quot;a&quot; ];then echo &quot;b&quot; &gt; $groupfileselif [ $groupkey == &quot;b&quot; ];then echo &quot;c&quot; &gt; $groupfileselif [ $groupkey == &quot;c&quot; ];then echo &quot;a&quot; &gt; $groupfilesfi# 修改缓存文件内的运维上线人员 key , 使得下次人员自动更换if [ $helpkeys == 7 ];then helpsum=1else helpsum=$(($helpkeys+1))fiif [ $helpsum == 1 ];then if [ $helpkey == &quot;a&quot; ];then echo &quot;$helpsum b&quot; &gt; $helpfiles elif [ $helpkey == &quot;b&quot; ];then echo &quot;$helpsum c&quot; &gt; $helpfiles elif [ $helpkey == &quot;c&quot; ];then echo &quot;$helpsum a&quot; &gt; $helpfiles fielse echo &quot;$helpsum $helpkey&quot; &gt; $helpfilesfi# 每周支持上线人for opsdit in $&#123;opshelp[@]&#125;;do if [ $helpsum == 1 ];then helpkey=`awk &apos;NR==1&#123;print $2&#125;&apos; $helpfiles` fi if echo $opsdit | grep -q $helpkey ;then helpvalues=`echo $opsdit | awk -F&apos;:&apos; &apos;&#123;print $2&#125;&apos;` help_mess=&quot;本周版本上线运维支持: [ $helpvalues ]&quot; fidonecurl -XPOST -s -L -H &quot;Content-Type:application/json&quot; -H &quot;charset:utf-8&quot; $url -d &quot; &#123; \&quot;msgtype\&quot;: \&quot;text\&quot;, \&quot;text\&quot;: &#123; \&quot;content\&quot;: \&quot;大家好~\n$onduty_mess\n$help_mess\&quot; &#125; &#125;&quot;]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[docker存储驱动]]></title>
    <url>%2Fposts%2F12280181.html</url>
    <content type="text"><![CDATA[摘要Docker最开始采用AUFS作为文件系统，也得益于AUFS分层的概念，实现了多个Container可以共享同一个image。但由于AUFS未并入Linux内核，且只支持Ubuntu，考虑到兼容性问题，在Docker 0.7版本中引入了存储驱动。 目前，Docker支持的存储驱动：aufs，devicemapper，btrfs，zfs，overlay和overlay2。 就如Docker官网上说的，没有单一的驱动适合所有的应用场景，要根据不同的场景选择合适的存储驱动，才能有效的提高Docker的性能。如何选择适合的存储驱动，要先了解存储驱动原理才能更好的判断 写时复制（CoW）所有驱动都用到的技术——写时复制（CoW）。CoW就是copy-on-write，表示只在需要写时才去复制，这个是针对已有文件的修改场景。比如基于一个image启动多个Container，如果为每个Container都去分配一个image一样的文件系统，那么将会占用大量的磁盘空间。而CoW技术可以让所有的容器共享image的文件系统，所有数据都从image中读取，只有当要对文件进行写操作时，才从image里把要写的文件复制到自己的文件系统进行修改。所以无论有多少个容器共享同一个image，所做的写操作都是对从image中复制到自己的文件系统中的复本上进行，并不会修改image的源文件，且多个容器操作同一个文件，会在每个容器的文件系统里生成一个复本，每个容器修改的都是自己的复本，相互隔离，相互不影响。使用CoW可以有效的提高磁盘的利用率。 用时分配（allocate-on-demand）而写时分配是用在原本没有这个文件的场景，只有在要新写入一个文件时才分配空间，这样可以提高存储资源的利用率。比如启动一个容器，并不会为这个容器预分配一些磁盘空间，而是当有新文件写入时，才按需分配新空间。 AUFSAUFS（AnotherUnionFS）是一种Union FS，是文件级的存储驱动。AUFS能透明覆盖一或多个现有文件系统的层状文件系统，把多层合并成文件系统的单层表示。简单来说就是支持将不同目录挂载到同一个虚拟文件系统下的文件系统。这种文件系统可以一层一层地叠加修改文件。无论底下有多少层都是只读的，只有最上层的文件系统是可写的。当需要修改一个文件时，AUFS创建该文件的一个副本，使用CoW将文件从只读层复制到可写层进行修改，结果也保存在可写层。在Docker中，底下的只读层就是image，可写层就是Container。结构如下图所示： OverlayOverlay是Linux内核3.18后支持的，也是一种Union FS，和AUFS的多层不同的是Overlay只有两层：一个upper文件系统和一个lower文件系统，分别代表Docker的镜像层和容器层。当需要修改一个文件时，使用CoW将文件从只读的lower复制到可写的upper进行修改，结果也保存在upper层。在Docker中，底下的只读层就是image，可写层就是Container。结构如下图所示： Device mapperDevice mapper是Linux内核2.6.9后支持的，提供的一种从逻辑设备到物理设备的映射框架机制，在该机制下，用户可以很方便的根据自己的需要制定实现存储资源的管理策略。前面讲的AUFS和OverlayFS都是文件级存储，而Device mapper是块级存储，所有的操作都是直接对块进行操作，而不是文件。Device mapper驱动会先在块设备上创建一个资源池，然后在资源池上创建一个带有文件系统的基本设备，所有镜像都是这个基本设备的快照，而容器则是镜像的快照。所以在容器里看到文件系统是资源池上基本设备的文件系统的快照，并不有为容器分配空间。当要写入一个新文件时，在容器的镜像内为其分配新的块并写入数据，这个叫用时分配。当要修改已有文件时，再使用CoW为容器快照分配块空间，将要修改的数据复制到在容器快照中新的块里再进行修改。Device mapper 驱动默认会创建一个100G的文件包含镜像和容器。每一个容器被限制在10G大小的卷内，可以自己配置调整。结构如下图所示： BtrfsBtrfs被称为下一代写时复制文件系统，并入Linux内核，也是文件级级存储，但可以像Device mapper一直接操作底层设备。Btrfs把文件系统的一部分配置为一个完整的子文件系统，称之为subvolume 。那么采用 subvolume，一个大的文件系统可以被划分为多个子文件系统，这些子文件系统共享底层的设备空间，在需要磁盘空间时便从底层设备中分配，类似应用程序调用 malloc()分配内存一样。为了灵活利用设备空间，Btrfs 将磁盘空间划分为多个chunk 。每个chunk可以使用不同的磁盘空间分配策略。比如某些chunk只存放metadata，某些chunk只存放数据。这种模型有很多优点，比如Btrfs支持动态添加设备。用户在系统中增加新的磁盘之后，可以使用Btrfs的命令将该设备添加到文件系统中。Btrfs把一个大的文件系统当成一个资源池，配置成多个完整的子文件系统，还可以往资源池里加新的子文件系统，而基础镜像则是子文件系统的快照，每个子镜像和容器都有自己的快照，这些快照则都是subvolume的快照。 当写入一个新文件时，为在容器的快照里为其分配一个新的数据块，文件写在这个空间里，这个叫用时分配。而当要修改已有文件时，使用CoW复制分配一个新的原始数据和快照，在这个新分配的空间变更数据，变结束再更新相关的数据结构指向新子文件系统和快照，原来的原始数据和快照没有指针指向，被覆盖。 ZFSZFS 文件系统是一个革命性的全新的文件系统，它从根本上改变了文件系统的管理方式，ZFS 完全抛弃了“卷管理”，不再创建虚拟的卷，而是把所有设备集中到一个存储池中来进行管理，用“存储池”的概念来管理物理存储空间。过去，文件系统都是构建在物理设备之上的。为了管理这些物理设备，并为数据提供冗余，“卷管理”的概念提供了一个单设备的映像。而ZFS创建在虚拟的，被称为“zpools”的存储池之上。每个存储池由若干虚拟设备（virtual devices，vdevs）组成。这些虚拟设备可以是原始磁盘，也可能是一个RAID1镜像设备，或是非标准RAID等级的多磁盘组。于是zpool上的文件系统可以使用这些虚拟设备的总存储容量。 下面看一下在Docker里ZFS的使用。首先从zpool里分配一个ZFS文件系统给镜像的基础层，而其他镜像层则是这个ZFS文件系统快照的克隆，快照是只读的，而克隆是可写的，当容器启动时则在镜像的最顶层生成一个可写层。如下图所示： 当要写一个新文件时，使用按需分配，一个新的数据快从zpool里生成，新的数据写入这个块，而这个新空间存于容器（ZFS的克隆）里。当要修改一个已存在的文件时，使用写时复制，分配一个新空间并把原始数据复制到新空间完成修改。 overlay2OverlayFS将Linux主机上的两个单独目录分层，并将它们显示为一个目录。这些目录称为层，统一过程称为联合安装。OverlayFS指向一个upper文件系统和一个lower文件系统，分别代表Docker的镜像层和容器层。用统一视图将整合的目录公开。 该overlay2驱动程序原生支持多达128个较低的OverlayFS层。此功能为与层相关的Docker命令（如docker build和docker commit）提供了更好的性能，并且大量减少了inode的消耗。 对比 存储驱动 简介 优点 缺点 存储级别 场景 aufs 最古老的联合文件系统，没有被内核收录，只支持ubuntu 允许容器共享可执行文件和共享内存，历史悠久，使用广泛 会导致一些严重的内核崩溃，多层，在CoW时如果文件大且在低层会慢一些 文件级存储 大并发少IO devicemapper 自动创建的稀疏文件的loop挂载后，自动创建块设备 精简配置和写时复制（CoW）快照技术，只复制修改的块 不支持共享存储，多个容器读同一个文件复制多份，容器启停可能会有磁盘溢出 块级存储 IO密集场景 btrfs 和devicemapper一样操作底层设备 非常快，支持动态添加设备 设备之间不共享可执行内存 文件级块存储 不适合高密度容器的paas平台 zfs 支持多个容器共享一个缓存块，适合大内存场景 CoW使碎片化问题更严重，文件在磁盘上物理地址不连续，顺序读性能差 所有设备集中到一个共享池里面进行管理 Paas平台和高密度场景 overlay 联合文件系统，内核版本3.18.0开始合并到内核中，只有两层 非常快速的联合文件系统。还支持页面缓存共享，这意味着访问同一文件的多个容器可以共享单个页面缓存条目（或条目），如aufs一样高效 会导致过多的inode消耗，不管修改内容大小都会复制整个文件，修改大文件消耗时间长 文件级存储 大并发少IO overlay2 内核版本4.0有附加功能，避免过多的inode消耗 文件级存储 大并发少IO AUFS VS OverlayAUFS和Overlay都是联合文件系统，但AUFS有多层，而Overlay只有两层，所以在做写时复制操作时，如果文件比较大且存在比较低的层，则AUSF可能会慢一些。而且Overlay并入了linux kernel mainline，AUFS没有，所以可能会比AUFS快。但Overlay还太年轻，要谨慎在生产使用。而AUFS做为docker的第一个存储驱动，已经有很长的历史，比较的稳定，且在大量的生产中实践过，有较强的社区支持。目前开源的DC/OS指定使用Overlay。 Overlay VS Device mapperOverlay是文件级存储，Device mapper是块级存储，当文件特别大而修改的内容很小，Overlay不管修改的内容大小都会复制整个文件，对大文件进行修改显示要比小文件要消耗更多的时间，而块级无论是大文件还是小文件都只复制需要修改的块，并不是整个文件，在这种场景下，显然device mapper要快一些。因为块级的是直接访问逻辑盘，适合IO密集的场景。而对于程序内部复杂，大并发但少IO的场景，Overlay的性能相对要强一些。 Device mapper VS Btrfs Driver VS ZFSDevice mapper和Btrfs都是直接对块操作，都不支持共享存储，表示当有多个容器读同一个文件时，需要生活多个复本，所以这种存储驱动不适合在高密度容器的PaaS平台上使用。而且在很多容器启停的情况下可能会导致磁盘溢出，造成主机不能工作。Device mapper不建议在生产使用。Btrfs在docker build可以很高效。 ZFS最初是为拥有大量内存的Salaris服务器设计的，所在在使用时对内存会有影响，适合内存大的环境。ZFS的COW使碎片化问题更加严重，对于顺序写生成的大文件，如果以后随机的对其中的一部分进行了更改，那么这个文件在硬盘上的物理地址就变得不再连续，未来的顺序读会变得性能比较差。ZFS支持多个容器共享一个缓存块，适合PaaS和高密度的用户场景。 IO性能对比 测试工具：IOzone（是一个文件系统的benchmark工具，可以测试不同的操作系统中文件系统的读写性能） 测试场景：从4K到1G文件的顺序和随机IO性能 测试方法：基于不同的存储驱动启动容器，在容器内安装IOzone，执行命令： 1./iozone -a -n 4k -g 1g -i 0 -i 1 -i 2 -f /root/test.rar -Rb ./iozone.xls 测试项的定义和解释 Write：测试向一个新文件写入的性能。 Re-write：测试向一个已存在的文件写入的性能。 Read：测试读一个已存在的文件的性能。 Re-Read：测试读一个最近读过的文件的性能。 Random Read：测试读一个文件中的随机偏移量的性能。 Random Write：测试写一个文件中的随机偏移量的性能。 通过以上的性能数据可以看到：AUFS在读的方面性能相比Overlay要差一些，但在写的方面性能比Overlay要好。device mapper在512M以上文件的读写性能都非常的差，但在512M以下的文件读写性能都比较好。btrfs在512M以上的文件读写性能都非常好，但在512M以下的文件读写性能相比其他的存储驱动都比较差。ZFS整体的读写性能相比其他的存储驱动都要差一些。 简单的测试了一些数据，对测试出来的数据原理还需要进一步的解析。 参数devicemapper12345678&#123; &quot;storage-driver&quot;: &quot;devicemapper&quot;, &quot;storage-opts&quot;: [ &quot;dm.thinpooldev=/dev/mapper/thin-pool&quot;, &quot;dm.use_deferred_deletion=true&quot;, &quot;dm.use_deferred_removal=true&quot; ]&#125; overlay2overlay2需要使用4.0以上版本的内核，如果使用的是RHEL或CentOS，需要3.10.0-514以上版本的内核 12345# 查看是否开启overlaylsmod |grep over# 开启overlay支持modprobe overlay 配置 1234567&#123; &quot;storage-driver&quot;: &quot;overlay2&quot;, &quot;storage-opts&quot;: [ &quot;overlay2.override_kernel_check=true&quot; #&quot;overlay2.size=1G&quot;, # xfs文件系统 ]&#125;]]></content>
      <categories>
        <category>虚拟化</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Kubernetes节点资源耗尽状态的处理]]></title>
    <url>%2Fposts%2Fa54106c5.html</url>
    <content type="text"><![CDATA[Welcome to my blog, please enter password to read. Incorrect Password! No content to display! ]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[wordpress快速安装]]></title>
    <url>%2Fposts%2F5842d4c0.html</url>
    <content type="text"><![CDATA[yum安装lnmp环境安装前准备123456789# 配置阿里云 yum 仓库$ wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo$ wget -O /etc/yum.repos.d/epel.repo http://mirrors.aliyun.com/repo/epel-7.repo$ yum clean all$ yum makecache# 配置时间同步$ vim /etc/crontab00 00 * * * root /sbin/ntpdate ntp.aliyun.com &amp;&gt;/dev/null 配置 nginx repo1234567891011121314$ vim /etc/yum.repos.d/nginx.repo[nginx-stable]name=nginx stable repobaseurl=http://nginx.org/packages/centos/$releasever/$basearch/gpgcheck=1enabled=1gpgkey=https://nginx.org/keys/nginx_signing.key[nginx-mainline]name=nginx mainline repobaseurl=http://nginx.org/packages/mainline/centos/$releasever/$basearch/gpgcheck=1enabled=0gpgkey=https://nginx.org/keys/nginx_signing.key yum安装lnmp1$ yum -y install nginx mariadb-server php php-bcmath php-fpm php-gd php-json php-mbstring php-mcrypt php-mysqlnd php-opcache php-pdo php-pdo_dblib php-pgsql php-recode php-snmp php-soap php-xml php-pecl-zip 启动php和mariadb123456# 启动 PHP-FPM$ systemctl enable php-fpm$ systemctl start php-fpm# 启动 mariadb$ systemctl enable mariadb.service$ systemctl start mariadb.service 创建 wordpress 数据库12345678# 连接数据库，默认密码为空mysql -uroot -p# 创建wordpress数据库名为 wpcreate database wp;# 创建数据库用户，用户名: blog 密码：123456grant all privileges on wp.* to &apos;blog&apos;@&apos;127.0.0.1&apos; identified by &apos;123456&apos;;# 刷新授权flush privileges; 配置nginx虚拟主机123456789101112131415161718192021$ vim /etc/nginx/conf.d/blog.confserver &#123; listen 80; server_name 10.100.4.169; index index.html index.php; # 访问日志目录 access_log /var/log/nginx/blog_access.log main; # 网站根目录 root /data/www; location / &#123; root /data/www; &#125; location ~ \.php$ &#123; fastcgi_pass 127.0.0.1:9000; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; &#125;&#125; 配置wordpress下载最新版wordpress1$ wget https://cn.wordpress.org/latest-zh_CN.tar.gz 配置wordpress连接数据库1234567891011121314151617181920212223$ tar xf latest-zh_CN.tar.gz$ mv wordpress/ /data/www$ cd /data/www/$ cp wp-config-sample.php wp-config.php$ vim wp-config.php// ** MySQL 设置 - 具体信息来自您正在使用的主机 ** ///** WordPress数据库的名称 */define(&apos;DB_NAME&apos;, &apos;wp&apos;);/** MySQL数据库用户名 */define(&apos;DB_USER&apos;, &apos;blog&apos;);/** MySQL数据库密码 */define(&apos;DB_PASSWORD&apos;, &apos;123456&apos;);/** MySQL主机 */define(&apos;DB_HOST&apos;, &apos;127.0.0.1&apos;);/** 创建数据表时默认的文字编码 */define(&apos;DB_CHARSET&apos;, &apos;utf8&apos;);/** 数据库整理类型。如不确定请勿更改 */define(&apos;DB_COLLATE&apos;, &apos;&apos;); 启动 nginx123$ systemctl enable nginx$ systemctl start nginx$ ps -ef|grep nginx 访问wordpressnginx 启动后我们就可以在浏览器通过 IP 地址访问 WordPress 了，首先会让我们给博客起个名字，名设置管理员的账号密码，点击安装 WordPress 就完成了。]]></content>
      <categories>
        <category>中间件</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[多级缓存]]></title>
    <url>%2Fposts%2F9c74e32c.html</url>
    <content type="text"><![CDATA[每一级缓存的意义时效性高的数据：采取DB和redis缓存双写方案 时效性不高的数据：采取nginx本地缓存+redis分布式缓存+tomcat堆缓存的多级缓存架构 a: nginx本地缓存，抗的是热数据的高并发访问。利用nginx本地缓存，将热数据锁定在nginx的本地缓存内，那么对这些热数据的大量访问，就直接走nginx就可以，不需要走后续的各种网络开销了。 b: redis分布式大规模缓存，抗的是很高的离散访问，支撑海量的数据，高并发的访问，高可用的服务。最完整的数据和缓存。 c: tomcat jvm堆内存缓存，主要是抗redis大规模灾难的，如果redis出现了大规模的宕机，导致nginx大量流量直接涌入数据生产服务，那么最后的tomcat堆内存缓存至少可以再抗一下，不至于让数据库直接裸奔， 同时tomcat jvm堆内存缓存，也可以抗住redis没有cache住的最后那少量的部分缓存。 RedisRedis Cluster通过master的水平扩容，来横向扩展读写吞吐量，还有支撑更多的海量数据 redis cluster 高可用性：redis cluster 提供主备切换。slave做master的热备，一旦master故障。slave提升为master，对外提供服务，保证集群的高可用性。并且，当master恢复后，会作为 slave加入到集群中。 redis cluster水平扩容master的水平扩容，来横向扩展读写吞吐量，还有支撑更多的海量数据 slave 自动迁移为redis cluster 添加冗余slave redis性能（需根据机器配置测试） redis单机，读吞吐是5w/s，写吞吐2w/s 扩展redis更多master，那么如果有5台master，不就读吞吐可以达到总量25w/s QPS，写可以达到10w/s QPS redis单机，内存，6G-8G，内存不易过大fork类操作的时候很耗时，会导致请求延时的问题。扩容到5台master，能支撑的总的缓存数据量就是30G Cache Aside模式12（1）读的时候，先读缓存，缓存没有的话，那么就读数据库，然后取出数据后放入缓存，同时返回响应（2）更新的时候，先删除缓存，然后再更新数据库 DB和缓存双写不一致问题以及解决方案 缓存不一致场景一： 1234 解决思路：先删除缓存，再修改数据库，如果删除缓存成功了，如果修改数据库失败了，那么数据库中是旧数据，缓存中是空的，那么数据不会不一致因为读的时候缓存没有，则读数据库中旧数据，然后更新到缓存中 缓存不一致场景二： 12345678910111213141516 解决思路： a：更新数据的时候，根据数据的唯一标识，将操作路由之后，发送到一个jvm内部的队列中 b:读取数据的时候，如果发现数据不在缓存中，那么将重新读取数据+更新缓存的操作，根据唯一标识路由之后，也发送同一个jvm内部的队列中 c:一个队列对应一个工作线程 d:每个工作线程串行拿到对应的操作，然后一条一条的执行这样的话，一个数据变更的操作，先执行，删除缓存，然后再去更新数据库，但是还没完成更新此时如果一个读请求过来，读到了空的缓存，那么可以先将缓存更新的请求发送到队列中，此时会在队列中积压，然后同步等待缓存更新完成 e: 多个更新缓存请求处理：这里有一个优化点，一个队列中，其实多个更新缓存请求串在一起是没意义的，因此可以做过滤，如果发现队列中已经有一个更新缓存的请求了，那么就不用再放个更新请求操作进去了，直接等待前面的更新操作请求完成即可待那个队列对应的工作线程完成了上一个操作的数据库的修改之后，才会去执行下一个操作，也就是缓存更新的操作，此时会从数据库中读取最新的值，然后写入缓存中如果请求还在等待时间范围内，不断轮询发现可以取到值了，那么就直接返回; 如果请求等待的时间超过一定时长，那么这一次直接从数据库中读取当前的旧值 f:多个读请求，进行读请求过滤：对一个商品的库存的数据库更新操作已经在内存队列中了然后对这个商品的库存的读取操作，要求读取数据库的库存数据，然后更新到缓存中，多个读这多个读，其实只要有一个读请求操作压到队列里就可以了其他的读操作，全部都wait那个读请求的操作，刷新缓存，就可以读到缓存中的最新数据了如果读请求发现redis缓存中没有数据，就会发送读请求给库存服务，但是此时缓存中为空，可能是因为写请求先删除了缓存，也可能是数据库里压根儿没这条数据如果是数据库中压根儿没这条数据的场景，那么就不应该将读请求操作给压入队列中，而是直接返回空就可以了 大value缓存的全量更新效率低下问题缓存数据的维度化拆分 缓存数据生产服务工作流程 （1）监听多个kafka topic，每个kafka topic对应一个服务（简化一下，监听一个kafka topic） （2）如果一个服务发生了数据变更，那么就发送一个消息到kafka topic中 （3）缓存数据生产服务监听到了消息以后，就发送请求到对应的服务中调用接口以及拉取数据，此时是从mysql中查询的 （4）缓存数据生产服务拉取到了数据之后，会将数据在本地缓存中写入一份，就是ehcache中 ​ 同时会将数据在redis中写入一份 缓存并发重建冲突解决方案 重建缓存：比如数据在所有的缓存中都不存在了（LRU算法弄掉了），就需要重新查询数据写入缓存，重建缓存 123456缓存重建存在的问题一：缓存数据生产服务在多个机器节点上部署了多个实例 若没有缓存数据。12:00的时候发来一个读请求 12:01发来一个读请求（此时12:00的读请求由于网络延迟还未执行完）。12:01请求比12:00的请求执行速度快。更新了生产服务的数据并将数据写入缓存。写完后。12:00的请求将数据写入了缓存。那么此时生产服务的最新数据是12：01的，但是缓存中是服务数据是12:00的。数据不一致。解决思路：对请求的数据ID 进行hash，让对同一个数据的请求落在同一个服务实例上 123456789缓存重建存在的问题二：生产服务发送的变更消息到kafka。由于问题一解决方案中的hash算法与kafka分区策略不一致。数据变更的消息所到的缓存服务实例，跟请求分发到的那个缓存服务实例也许就不在一台机器上了 （1）变更缓存重建以及空缓存请求重建，更新redis之前，都需要先获取对应商品id的分布式锁（2）拿到分布式锁之后，需要根据时间版本去比较一下，如果自己的版本新于redis中的版本，那么就更新，否则就不更新（3）如果拿不到分布式锁，那么就等待，不断轮询等待，直到自己获取到分布式的锁 缓存雪崩问题12345678910111213缓存雪崩产生场景：1、redis集群彻底崩溃2、缓存服务大量对redis的请求hang住，占用资源3、缓存服务大量的请求打到源头服务去查询mysql，直接打死mysql4、源头服务因为mysql被打死也崩溃，对源服务的请求也hang住，占用资源5、缓存服务大量的资源全部耗费在访问redis和源服务无果，最后自己被拖死，无法提供服务6、nginx无法访问缓存服务，redis和源服务，只能基于本地缓存提供服务，但是缓存过期后，没有数据提供解决思路 1、对redis访问做资源隔离 2、若redis集群崩溃，对redis进行熔断 3、对源服务的访问做限流 4、限流失败后采用stubbed fallback降级机制 缓存穿透问题每次如果从生产查询到的数据是空，就说明这个数据根本就不存在 那么如果这个数据不存在的话，我们不要不往redis和ehcache等缓存中写入数据，我们呢，给写入一个空的数据，比如说空的productInfo的json串 因为我们有一个异步监听数据变更的机制在里面，也就是说，如果数据变更的话，某个数据本来是没有的，可能会导致缓存穿透，所以我们给了个空数据 但是现在这个数据有了，我们接收到这个变更的消息过后，就可以将数据再次从生产服务中查询出来 然后设置到各级缓存中去了 缓存失效问题设置随机的缓存失效时间]]></content>
      <categories>
        <category>中间件</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[fabric分布式部署]]></title>
    <url>%2Fposts%2Fe0275bab.html</url>
    <content type="text"><![CDATA[Kafka模式简介Hyperledger Fabric采用kafka方式实现排序（orderer）服务的集群，kafka模块被认为是半中心化结构。顺便提一下，去中心化的BFT（拜占庭容错）排序（orderer）服务集群方式目前还在开发，还没有规定发布时间，将在1.x周期内发布，可以关注跟踪FAB-33的更新。 Kafka模式由排序（orderer）服务、kafka集群和zookeeper集群组成。每个排序(orderer)服务相互之间不通信，只与kafka集群通信，kafka集群与zookeeper相互连接。 Fabric网络中的各节点（Peer）收到客户端发送的交易请求时，把交易信息发送给与其连接的排序（orderer）服务，交由排序（orderer）服务集群进行排序处理。 配置 orderer1.example.com,kafka1,zookeeper1 192.168.3.98 orderer1.example.com,kafka1,zookeeper1 192.168.3.97 orderer1.example.com,kafka1,zookeeper1 192.168.3.94 peer0.org1.example.com 192.168.10.174 peer1.org1.example.com 192.168.10.173 peer0.org2.example.com 192.168.3.93 安装在六台机器上安装依赖工具docker、go、fabric源码 docker就不多说了，17,03以上就可以，go可以yum安装 123456789101112131415161718192021222324252627安装fabric源码:git clone https://github.com/hyperledger/fabric.gitcd fabricgit checkout v1.4.0拉镜像：# mkdir -p /etc/docker# tee /etc/docker/daemon.json &lt;&lt;-&apos;EOF&apos;&#123;&quot;registry-mirrors&quot;: [&quot;https://8w1wqmsz.mirror.aliyuncs.com&quot;]&#125;EOF# systemctl daemon-reload# systemctl restart docker# docker pull hyperledger/fabric-peer:latest# docker pull hyperledger/fabric-orderer:latest# docker pull hyperledger/fabric-tools:latest# docker pull hyperledger/fabric-ccenv:latest# docker pull hyperledger/fabric-baseos:latest# docker pull hyperledger/fabric-kafka:latest# docker pull hyperledger/fabric-zookeeper:latest# docker pull hyperledger/fabric-couchdb:latest# docker pull hyperledger/fabric-ca:latest 部署创建创世快123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339# cd $GOPATH/src/github.com/hyperledger/fabric# mkdir kafkapeer# cd kafkapeer# cat configtx.yaml# Copyright IBM Corp. All Rights Reserved.## SPDX-License-Identifier: Apache-2.0#---################################################################################## Section: Organizations## - This section defines the different organizational identities which will# be referenced later in the configuration.#################################################################################Organizations: # SampleOrg defines an MSP using the sampleconfig. It should never be used # in production but may be used as a template for other definitions - &amp;OrdererOrg # DefaultOrg defines the organization which is used in the sampleconfig # of the fabric.git development environment Name: OrdererOrg # ID to load the MSP definition as ID: OrdererMSP # MSPDir is the filesystem path which contains the MSP configuration MSPDir: crypto-config/ordererOrganizations/example.com/msp # Policies defines the set of policies at this level of the config tree # For organization policies, their canonical path is usually # /Channel/&lt;Application|Orderer&gt;/&lt;OrgName&gt;/&lt;PolicyName&gt; Policies: Readers: Type: Signature Rule: &quot;OR(&apos;OrdererMSP.member&apos;)&quot; Writers: Type: Signature Rule: &quot;OR(&apos;OrdererMSP.member&apos;)&quot; Admins: Type: Signature Rule: &quot;OR(&apos;OrdererMSP.admin&apos;)&quot; - &amp;Org1 # DefaultOrg defines the organization which is used in the sampleconfig # of the fabric.git development environment Name: Org1MSP # ID to load the MSP definition as ID: Org1MSP MSPDir: crypto-config/peerOrganizations/org1.example.com/msp # Policies defines the set of policies at this level of the config tree # For organization policies, their canonical path is usually # /Channel/&lt;Application|Orderer&gt;/&lt;OrgName&gt;/&lt;PolicyName&gt; Policies: Readers: Type: Signature Rule: &quot;OR(&apos;Org1MSP.admin&apos;, &apos;Org1MSP.peer&apos;, &apos;Org1MSP.client&apos;)&quot; Writers: Type: Signature Rule: &quot;OR(&apos;Org1MSP.admin&apos;, &apos;Org1MSP.client&apos;)&quot; Admins: Type: Signature Rule: &quot;OR(&apos;Org1MSP.admin&apos;)&quot; AnchorPeers: # AnchorPeers defines the location of peers which can be used # for cross org gossip communication. Note, this value is only # encoded in the genesis block in the Application section context - Host: peer0.org1.example.com Port: 7051 - &amp;Org2 # DefaultOrg defines the organization which is used in the sampleconfig # of the fabric.git development environment Name: Org2MSP # ID to load the MSP definition as ID: Org2MSP MSPDir: crypto-config/peerOrganizations/org2.example.com/msp # Policies defines the set of policies at this level of the config tree # For organization policies, their canonical path is usually # /Channel/&lt;Application|Orderer&gt;/&lt;OrgName&gt;/&lt;PolicyName&gt; Policies: Readers: Type: Signature Rule: &quot;OR(&apos;Org2MSP.admin&apos;, &apos;Org2MSP.peer&apos;, &apos;Org2MSP.client&apos;)&quot; Writers: Type: Signature Rule: &quot;OR(&apos;Org2MSP.admin&apos;, &apos;Org2MSP.client&apos;)&quot; Admins: Type: Signature Rule: &quot;OR(&apos;Org2MSP.admin&apos;)&quot; AnchorPeers: # AnchorPeers defines the location of peers which can be used # for cross org gossip communication. Note, this value is only # encoded in the genesis block in the Application section context - Host: peer0.org2.example.com Port: 7051################################################################################## SECTION: Capabilities## - This section defines the capabilities of fabric network. This is a new# concept as of v1.1.0 and should not be utilized in mixed networks with# v1.0.x peers and orderers. Capabilities define features which must be# present in a fabric binary for that binary to safely participate in the# fabric network. For instance, if a new MSP type is added, newer binaries# might recognize and validate the signatures from this type, while older# binaries without this support would be unable to validate those# transactions. This could lead to different versions of the fabric binaries# having different world states. Instead, defining a capability for a channel# informs those binaries without this capability that they must cease# processing transactions until they have been upgraded. For v1.0.x if any# capabilities are defined (including a map with all capabilities turned off)# then the v1.0.x peer will deliberately crash.#################################################################################Capabilities: # Channel capabilities apply to both the orderers and the peers and must be # supported by both. Set the value of the capability to true to require it. Global: &amp;ChannelCapabilities # V1.1 for Global is a catchall flag for behavior which has been # determined to be desired for all orderers and peers running v1.0.x, # but the modification of which would cause incompatibilities. Users # should leave this flag set to true. V1_1: true # Orderer capabilities apply only to the orderers, and may be safely # manipulated without concern for upgrading peers. Set the value of the # capability to true to require it. Orderer: &amp;OrdererCapabilities # V1.1 for Order is a catchall flag for behavior which has been # determined to be desired for all orderers running v1.0.x, but the # modification of which would cause incompatibilities. Users should # leave this flag set to true. V1_1: true # Application capabilities apply only to the peer network, and may be safely # manipulated without concern for upgrading orderers. Set the value of the # capability to true to require it. Application: &amp;ApplicationCapabilities # V1.1 for Application is a catchall flag for behavior which has been # determined to be desired for all peers running v1.0.x, but the # modification of which would cause incompatibilities. Users should # leave this flag set to true. V1_2: true################################################################################## SECTION: Application## - This section defines the values to encode into a config transaction or# genesis block for application related parameters#################################################################################Application: &amp;ApplicationDefaults # Organizations is the list of orgs which are defined as participants on # the application side of the network Organizations: # Policies defines the set of policies at this level of the config tree # For Application policies, their canonical path is # /Channel/Application/&lt;PolicyName&gt; Policies: Readers: Type: ImplicitMeta Rule: &quot;ANY Readers&quot; Writers: Type: ImplicitMeta Rule: &quot;ANY Writers&quot; Admins: Type: ImplicitMeta Rule: &quot;MAJORITY Admins&quot; # Capabilities describes the application level capabilities, see the # dedicated Capabilities section elsewhere in this file for a full # description Capabilities: &lt;&lt;: *ApplicationCapabilities################################################################################## SECTION: Orderer## - This section defines the values to encode into a config transaction or# genesis block for orderer related parameters#################################################################################Orderer: &amp;OrdererDefaults # Orderer Type: The orderer implementation to start # Available types are &quot;solo&quot; and &quot;kafka&quot; OrdererType: kafka Addresses: - orderer0.example.com:7050 - orderer1.example.com:7050 - orderer2.example.com:7050 # Batch Timeout: The amount of time to wait before creating a batch BatchTimeout: 2s # Batch Size: Controls the number of messages batched into a block BatchSize: # Max Message Count: The maximum number of messages to permit in a batch MaxMessageCount: 10 # Absolute Max Bytes: The absolute maximum number of bytes allowed for # the serialized messages in a batch. AbsoluteMaxBytes: 98 MB # Preferred Max Bytes: The preferred maximum number of bytes allowed for # the serialized messages in a batch. A message larger than the preferred # max bytes will result in a batch larger than preferred max bytes. PreferredMaxBytes: 512 KB Kafka: # Brokers: A list of Kafka brokers to which the orderer connects. Edit # this list to identify the brokers of the ordering service. # NOTE: Use IP:port notation. Brokers: - kafka0:9092 - kafka1:9092 - kafka2:9092 - kafka3:9092 # Organizations is the list of orgs which are defined as participants on # the orderer side of the network Organizations: # Policies defines the set of policies at this level of the config tree # For Orderer policies, their canonical path is # /Channel/Orderer/&lt;PolicyName&gt; Policies: Readers: Type: ImplicitMeta Rule: &quot;ANY Readers&quot; Writers: Type: ImplicitMeta Rule: &quot;ANY Writers&quot; Admins: Type: ImplicitMeta Rule: &quot;MAJORITY Admins&quot; # BlockValidation specifies what signatures must be included in the block # from the orderer for the peer to validate it. BlockValidation: Type: ImplicitMeta Rule: &quot;ANY Writers&quot; # Capabilities describes the orderer level capabilities, see the # dedicated Capabilities section elsewhere in this file for a full # description Capabilities: &lt;&lt;: *OrdererCapabilities################################################################################## CHANNEL## This section defines the values to encode into a config transaction or# genesis block for channel related parameters.#################################################################################Channel: &amp;ChannelDefaults # Policies defines the set of policies at this level of the config tree # For Channel policies, their canonical path is # /Channel/&lt;PolicyName&gt; Policies: # Who may invoke the &apos;Deliver&apos; API Readers: Type: ImplicitMeta Rule: &quot;ANY Readers&quot; # Who may invoke the &apos;Broadcast&apos; API Writers: Type: ImplicitMeta Rule: &quot;ANY Writers&quot; # By default, who may modify elements at this config level Admins: Type: ImplicitMeta Rule: &quot;MAJORITY Admins&quot; # Capabilities describes the channel level capabilities, see the # dedicated Capabilities section elsewhere in this file for a full # description Capabilities: &lt;&lt;: *ChannelCapabilities################################################################################## Profile## - Different configuration profiles may be encoded here to be specified# as parameters to the configtxgen tool#################################################################################Profiles: TwoOrgsOrdererGenesis: &lt;&lt;: *ChannelDefaults Orderer: &lt;&lt;: *OrdererDefaults Organizations: - *OrdererOrg Consortiums: SampleConsortium: Organizations: - *Org1 - *Org2 TwoOrgsChannel: Consortium: SampleConsortium Application: &lt;&lt;: *ApplicationDefaults Organizations: - *Org1 - *Org2 1234bin目录从fabric源码里面拷过来，这样方便生成块# mkdir channel-artifacts# ./bin/configtxgen -profile TwoOrgsOrdererGenesis -outputBlock ./channel-artifacts/genesis.block# ./bin/configtxgen -profile TwoOrgsChannel -outputCreateChannelTx ./channel-artifacts/mychannel.tx -channelID mychannel 完事之后，把kafka目录，拷到所有机器上 部署kafka、zk1234567891011121314151617181920212223242526zk的yaml文件：# cat docker-compose-zookeeper.yaml# Copyright IBM Corp. All Rights Reserved.## SPDX-License-Identifier: Apache-2.0#version: &apos;2&apos;services: zookeeper0: container_name: zookeeper0 hostname: zookeeper0 image: hyperledger/fabric-zookeeper restart: always environment: - ZOO_MY_ID=1 - ZOO_SERVERS=server.1=zookeeper0:2888:3888 server.2=zookeeper1:2888:3888 server.3=zookeeper2:2888:3888 ports: - 2181:2181 - 2888:2888 - 3888:3888 dns: - &quot;192.168.3.94&quot; 12345678910111213141516171819202122232425262728293031323334kafka的yaml文件：# cat docker-compose-kafka.yaml# Copyright IBM Corp. All Rights Reserved.## SPDX-License-Identifier: Apache-2.0#version: &apos;2&apos;services: kafka0: container_name: kafka0 hostname: kafka0 image: hyperledger/fabric-kafka restart: always environment: - KAFKA_MESSAGE_MAX_BYTES=103809024 # 99 * 1024 * 1024 B - KAFKA_REPLICA_FETCH_MAX_BYTES=103809024 # 99 * 1024 * 1024 B - KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE=false environment: - KAFKA_BROKER_ID=1 - KAFKA_MIN_INSYNC_REPLICAS=2 - KAFKA_DEFAULT_REPLICATION_FACTOR=3 - KAFKA_ZOOKEEPER_CONNECT=zookeeper0:2181,zookeeper1:2181,zookeeper2:2181 ports: - 9092:9092 dns: - &quot;192.168.3.94&quot; 部署orderer1234567891011121314151617181920212223242526272829303132333435363738394041424344因为咱们的fabric证书，没生成tls，所以下面的配置文件需要把tls去掉，zk，kafka都各自按照上述步骤配置在三台不同机器上，orderer也一样cat docker-compose-orderer.yaml# Copyright IBM Corp. All Rights Reserved.## SPDX-License-Identifier: Apache-2.0#version: &apos;2&apos;services: orderer0.example.com: container_name: orderer0.example.com image: hyperledger/fabric-orderer environment: - ORDERER_GENERAL_LOGLEVEL=debug - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0 - ORDERER_GENERAL_GENESISMETHOD=file - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block - ORDERER_GENERAL_LOCALMSPID=OrdererMSP - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp # enabled TLS - ORDERER_GENERAL_TLS_ENABLED=true - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt] - ORDERER_KAFKA_RETRY_LONGINTERVAL=10s - ORDERER_KAFKA_RETRY_LONGTOTAL=100s - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s - ORDERER_KAFKA_VERBOSE=true working_dir: /opt/gopath/src/github.com/hyperledger/fabric command: orderer volumes: - ./channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block - ./crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/msp:/var/hyperledger/orderer/msp - ./crypto-config/ordererOrganizations/example.com/orderers/orderer0.example.com/tls/:/var/hyperledger/orderer/tls ports: - 7050:7050 dns: - &quot;192.168.3.94&quot; 部署peer1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071# cat docker-compose-peer.yaml# All elements in this file should depend on the docker-compose-base.yaml# Provided fabric peer nodeversion: &apos;2&apos;services: peer1.org1.example.com: container_name: peer1.org1.example.com hostname: peer1.org1.example.com image: hyperledger/fabric-peer environment: - CORE_PEER_ID=peer1.org1.example.com - CORE_PEER_ADDRESS=peer1.org1.example.com:7051 - CORE_PEER_CHAINCODELISTENADDRESS=peer1.org1.example.com:7052 - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org1.example.com:7051 - CORE_PEER_LOCALMSPID=Org1MSP - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock # the following setting starts chaincode containers on the same # bridge network as the peers # https://docs.docker.com/compose/networking/ #- CORE_LOGGING_LEVEL=ERROR - CORE_LOGGING_LEVEL=DEBUG - CORE_PEER_GOSSIP_USELEADERELECTION=true - CORE_PEER_GOSSIP_ORGLEADER=false - CORE_PEER_PROFILE_ENABLED=true - CORE_PEER_TLS_ENABLED=true - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer command: peer node start volumes: - /var/run/:/host/var/run/ - ./crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/msp:/etc/hyperledger/fabric/msp - ./crypto-config/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls:/etc/hyperledger/fabric/tls ports: - 7051:7051 - 7052:7052 - 7053:7053 dns: - &quot;192.168.3.94&quot; cli: container_name: cli image: hyperledger/fabric-tools tty: true environment: - GOPATH=/opt/gopath - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock # - CORE_LOGGING_LEVEL=ERROR - CORE_LOGGING_LEVEL=DEBUG - CORE_PEER_ID=cli - CORE_PEER_ADDRESS=peer1.org1.example.com:7051 - CORE_PEER_LOCALMSPID=Org1MSP - CORE_PEER_TLS_ENABLED=true - CORE_PEER_TLS_CERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/server.crt - CORE_PEER_TLS_KEY_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/server.key - CORE_PEER_TLS_ROOTCERT_FILE=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/peers/peer1.org1.example.com/tls/ca.crt - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer volumes: - /var/run/:/host/var/run/ - ./chaincode/go/:/opt/gopath/src/github.com/hyperledger/fabric/kafkapeer/chaincode/go - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/ - ./channel-artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts dns: - &quot;192.168.3.94&quot; 启动1234docker-compose -f docker-compose-zookeeper.yaml up -ddocker-compose -f docker-compose-kafka.yaml up -ddocker-compose -f docker-compose-orderer.yaml up -ddocker-compose -f docker-compose-peer.yaml up -d 创建channel123进入cli：peer channel create -o orderer0.example.com:7050 -c mychannel -f ./channel-artifacts/mychannel.txpeer channel join -b mychannel.block 之后切换变量，批量加就可以了]]></content>
      <categories>
        <category>区块链</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Prometheus添加gateway]]></title>
    <url>%2Fposts%2Fdf2u8ajq.html</url>
    <content type="text"><![CDATA[简介Pushgateway是prometheus的一个重要组件，利用该组件可以实现自动以监控指标，从字面意思来看，该部件不是将数据push到prometheus，而是作为一个中间组件收集外部push来的数据指标，prometheus会定时从pushgateway上pull数据。 pushgateway并不是将Prometheus的pull改成了push，它只是允许用户向他推送指标信息，并记录。而Prometheus每次从 pushgateway拉取的数据并不是期间用户推送上来的所有数据，而是client端最后一次push上来的数据。因此需设置client端向pushgateway端push数据的时间小于等于prometheus去pull数据的时间，这样一来可以保证prometheus的数据是最新的。 使用pushgateway的理由： 1、prometheus默认采用pull模式，由于不在一个网络或者防火墙的问题，导致prometheus 无法拉取各个节点的数据。 2、监控业务数据时，需要将不同数据汇总，然后由prometheus统一收集 pushgateway的缺陷： 1、多个节点的数据汇总到pushgateway，当它宕机后影响很大 2、pushgateway可以持续化推送所有的监控数据，即使监控已经下线，还会获取旧的监控数据。需手动清理不需要的数据 3、重启后数据丢失 部署安装pushgateway1docker run -d --name=pushgateway -p 9091:9091 -v /opt/pushgateway:/pushgateway --restart=always prom/pushgateway:latest prometheus配置1234567- job_name: &apos;pushgateway&apos; scrape_interval: 10s static_configs: - targets: - &apos;192.168.7.107:9091&apos; labels: instance: pushgateway 测试1echo &quot;some_metric 3.14&quot; | curl --data-binary @- http://192.168.7.107:9091/metrics/job/some_job 删除删除某个组下的某实例的所有数据： 1curl -X DELETE http://192.168.7.107:9091/metrics/job/some_job/instance/some_instance 删除某个组下的所有数据： 1curl -X DELETE http://192.168.7.107:9091/metrics/job/some_job]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[tornado-电话报警]]></title>
    <url>%2Fposts%2Faa774e96.html</url>
    <content type="text"><![CDATA[需求某些时候邮件，钉钉的报警我们在家里，或者周末是很少去观看的，这时候如果服务器出了问题，运维人员是没法第一时间排查到，所以短信和电话报警就很有必要去做。 已有阿里云的语音短信报警接口，故做了个端口电话报警。 电话报警脚本[root@aa phone_send]# cat send_model.py 123456789101112131415161718192021222324252627282930313233343536373839404142434445# -*- coding:utf-8 -*-import requestsimport tornado.ioloopimport tornado.webphonenumber = &quot;xxxxxxx,xxxxxxx&quot;portdic = &#123; &quot;9876&quot;:&quot;服务类型MQ,端口9876&quot;, &quot;2181&quot;:&quot;服务类型ZK,端口2181&quot;, &quot;3306&quot;:&quot;服务类型数据库,端口3306&quot;, &quot;27017&quot;:&quot;服务类型数据库,端口27017&quot;, &quot;1908&quot;:&quot;服务类型spada,薛亮应用&quot;, &quot;53&quot;:&quot;服务类型dns,端口53&quot;, &quot;9200&quot;:&quot;服务类型es,端口9200&quot;, &quot;6379&quot;:&quot;服务类型redis,端口6379&quot;, &quot;80&quot;:&quot;服务类型nginx,端口80&quot;&#125;statusdic = &#123; &quot;PROBLEM&quot;:&quot;服务发生故障&quot;, &quot;OK&quot;:&quot;故障恢复&quot;&#125;class MainHandler(tornado.web.RequestHandler): def get(self): status = self.get_argument(&apos;status&apos;) endpoint = self.get_argument(&apos;endpoint&apos;) metric = self.get_argument(&apos;metric&apos;) tags = self.get_argument(&apos;tags&apos;) statusok = statusdic.get(status) port = tags.split(&quot;:&quot;)[1] p_endpoint = endpoint.split(&quot;.&quot;) del(p_endpoint[0]) portmes = portdic.get(port) if portmes == None: portmes = &quot;端口&quot; + port # 短信 requests.get(&quot;http://域名/send_sms/%s,%s,%s,%s/%s&quot;%(statusok,endpoint,metric,portmes,phonenumber)) # 电话 requests.get(&quot;http://域名/send_phone/%s%s%s%s/%s&quot;%(statusok,p_endpoint,metric,portmes,phonenumber)) message = status + endpoint + metric + tags print(status,endpoint,metric,tags,port)application = tornado.web.Application([(r&quot;/message&quot;, MainHandler), ])if __name__ == &quot;__main__&quot;: application.listen(8868) tornado.ioloop.IOLoop.instance().start() 执行1python3 send_model.py callback接口http://ip:8868/message openfalcon监控做模板]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[tornado-hello]]></title>
    <url>%2Fposts%2F6fd83cc1.html</url>
    <content type="text"><![CDATA[概念Tornado是一个Python Web框架和异步网络库，最初是在FriendFeed上开发的。通过使用非阻塞网络I / O，Tornado可以扩展到数万个开放连接，使其成为长轮询， WebSockets和其他需要与每个用户建立长期连接的应用程序的理想选择 。 安装1pip3 install tornado 简单的web12345678910111213import tornado.ioloopimport tornado.webclass MainHandler(tornado.web.RequestHandler): def get(self): self.write(&quot;Hello, world&quot;)if __name__ == &quot;__main__&quot;: application = tornado.web.Application([ (r&quot;/index&quot;, MainHandler), ]) application.listen(8888) tornado.ioloop.IOLoop.current().start() 访问http://ip:8888/index]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[fabric-ca部署]]></title>
    <url>%2Fposts%2F86326b76.html</url>
    <content type="text"><![CDATA[部署一个fabric-ca创建一个由两个组织org1.example.com和org2.example.com组成的的联盟1234567891011121314151617181920还有一个组织example.com用来部署orderer。组织example.com部署了一个solo模式的orderer。（多个orderer的部署方式，以后探讨）orderer.example.com组织org1.example.com部署了两个peer:peer0.org1.example.compeer1.org1.example.com组织org2.example.com部署了一个peer:peer0.org2.example.com每个组织都要有一个Admin用户，每个组件(peer/orderer)也需要一个账号，因此需要通过FabricCA创建7个用户：example.com: Admin@example.com orderer.example.comorg1.example.com: Admin@org1.example.com peer0.org1.example.com peer1.org1.example.com org2.example.com: Admin@org2.example.com peer0.org2.example.com这里只创建了Admin用户和每个组件的账号，普通用户的创建方式相同，只是普通用户的证书不需要添加到目标组件的admincerts目录中。或者说一个用户的证书如果被添加到了对应组织或组件的msp/admincerts目录中，那么这个用户就称为对应的管理员。 启动fabric-ca123456789101112131415161718192021fabirc-ca的编译：$ go get -u github.com/hyperledger/fabric-ca$ cd $GOPATH/src/github.com/hyperledger/fabric-ca$ make fabric-ca-server$ make fabric-ca-client$ ls bin/fabric-ca-client fabric-ca-server这里将fabric-ca部署在/opt/app/fabric-ca/server目录中：mkdir -p /opt/app/fabric-ca/servercp -rf $GOPATH/src/github.com/hyperledger/fabric-ca/bin/* /opt/app/fabric-ca/serverln -s /opt/app/fabric-ca/server/fabric-ca-client /usr/bin/fabric-ca-client直接启动ca，fabric-ca admin的名称为admin，密码为pass。(这里只是演示，生产中使用，你需要根据实际的情况配置)cd /opt/app/fabric-ca/server./fabric-ca-server start -b admin:pass &amp;如果有删除联盟和删除用户的需求，需要用下面的方式启动：cd /opt/app/fabric-ca/server./fabric-ca-server start -b admin:pass --cfg.affiliations.allowremove --cfg.identities.allowremove &amp; 生成fabric-ca admin的凭证123456789101112mkdir /root/fabric-deploycd ~/fabric-deploymkdir fabric-ca-files 生成fabric-ca admin的凭证，用-H参数指定client目录：mkdir -p `pwd`/fabric-ca-files/adminfabric-ca-client enroll -u http://admin:pass@localhost:7054 -H `pwd`/fabric-ca-files/admin也可以用环境变量FABRIC_CA_CLIENT_HOME指定了client的工作目录，生成的用户凭证将存放在这个目录中。export FABRIC_CA_CLIENT_HOME=`pwd`/fabric-ca-files/adminmkdir -p $FABRIC_CA_CLIENT_HOMEfabric-ca-client enroll -u http://admin:pass@localhost:7054 创建联盟123456789101112131415161718192021222324252627282930上面的启动方式默认会创建两个组织：$ fabric-ca-client -H `pwd`/fabric-ca-files/admin affiliation list2018/05/07 02:36:46 [INFO] [::1]:56148 GET /affiliations 200 0 &quot;OK&quot;affiliation: . affiliation: org2 affiliation: org2.department1 affiliation: org1 affiliation: org1.department1 affiliation: org1.department2为了查看信息的时候，看到的输出比较简洁，用下面的命令将其删除：fabric-ca-client -H `pwd`/fabric-ca-files/admin affiliation remove --force org1fabric-ca-client -H `pwd`/fabric-ca-files/admin affiliation remove --force org2执行下面命令创建联盟：fabric-ca-client -H `pwd`/fabric-ca-files/admin affiliation add com fabric-ca-client -H `pwd`/fabric-ca-files/admin affiliation add com.examplefabric-ca-client -H `pwd`/fabric-ca-files/admin affiliation add com.example.org1fabric-ca-client -H `pwd`/fabric-ca-files/admin affiliation add com.example.org2注意：联盟是有层级的。创建联盟如下：$ fabric-ca-client -H `pwd`/fabric-ca-files/admin affiliation list2018/04/28 15:19:34 [INFO] 127.0.0.1:38160 GET /affiliations 201 0 &quot;OK&quot;affiliation: com affiliation: com.example affiliation: com.example.org1 affiliation: com.example.org2 为每个组织准备msp12345678910111213141516171819202122232425262728293031323334353637就是从Fabric-CA中，读取出用来签署用户的根证书等。为example.com准备msp，将ca证书等存放example.com组织的目录中:mkdir -p ./fabric-ca-files/example.com/mspfabric-ca-client getcacert -M `pwd`/fabric-ca-files/example.com/msp //-M需要指定绝对路径命令执行结束后，会在fabric-ca-files/example.com/msp得到文件：$ tree fabric-ca-files/example.com/msp/example.com/msp/|-- cacerts| `-- localhost-7054.pem|-- intermediatecerts| `-- localhost-7054.pem|-- keystore`-- signcerts注意通过getcacert得到msp目录中只有CA证书，而且这里没有使用中间CA，fabric-ca-files/example.com/msp/intermediatecerts/localhost-7054.pem是一个空文件。同样的方式为org1.example.com获取msp:mkdir -p fabric-ca-files/org1.example.com/mspfabric-ca-client getcacert -M `pwd`/fabric-ca-files/org1.example.com/msp为org2.example.com准备msp:mkdir -p ./fabric-ca-files/org2.example.com/mspfabric-ca-client getcacert -M `pwd`/fabric-ca-files/org2.example.com/msp这里是用getcacert为每个组织准备需要的ca文件，在生成创始块的时候会用到。在1.1.0版本的fabric-ca中，只会生成用户在操作区块链的时候用到的证书和密钥，不会生成用来加密grpc通信的证书。这里复用之前用cryptogen生成的tls证书，需要将验证tls证书的ca添加到msp目录中，如下：cp -rf certs/ordererOrganizations/example.com/msp/tlscacerts fabric-ca-files/example.com/msp/cp -rf certs/peerOrganizations/org1.example.com/msp/tlscacerts/ fabric-ca-files/org1.example.com/msp/cp -rf certs/peerOrganizations/org2.example.com/msp/tlscacerts/ fabric-ca-files/org2.example.com/msp/如果在你的环境中，各个组件域名的证书，是由第三方CA签署的，就将第三方CA的根证书添加到msp/tlscacerts目录中。组织的msp目录中，包含都是CA根证书，分别是TLS加密的根证书，和用于身份验证的根证书。另外还需要admin用户的证书，后面的操作中会添加。 注册example.com的管理员Admin@example.com可以直接用命令行（命令比较长，这里用\\截断了）： 123fabric-ca-client register --id.name Admin@example.com --id.type client --id.affiliation &quot;com.example.org1&quot; \ --id.attrs &apos;&quot;hf.Registrar.Roles=client,orderer,peer,user&quot;,&quot;hf.Registrar.DelegateRoles=client,orderer,peer,user&quot;,\ hf.Registrar.Attributes=*,hf.GenCRL=true,hf.Revoker=true,hf.AffiliationMgr=true,hf.IntermediateCA=true,role=admin:ecert&apos; 也可以将命令行参数写在fabric-ca admin的配置文件fabric-ca-files/admin/fabric-ca-client-config.yaml中。 12$ ls fabric-ca-files/admin/admin/fabric-ca-client-config.yaml msp 为了演示清楚，这里使用修改配置文件的方式，将fabric-ca-files/admin/fabric-ca-client-config.yaml其中的id部分修改为： 1234567891011121314151617181920212223id: name: Admin@example.com type: client affiliation: com.example maxenrollments: 0 attributes: - name: hf.Registrar.Roles value: client,orderer,peer,user - name: hf.Registrar.DelegateRoles value: client,orderer,peer,user - name: hf.Registrar.Attributes value: &quot;*&quot; - name: hf.GenCRL value: true - name: hf.Revoker value: true - name: hf.AffiliationMgr value: true - name: hf.IntermediateCA value: true - name: role value: admin ecert: true 注意最后一行role属性，是我们自定义的属性，对于自定义的属性，要设置certs，在配置文件中需要单独设置ecert属性为true或者false。如果在命令行中，添加后缀:ecert表示true，例如: 1fabric-ca-client register --id.affiliation &quot;com.example.org1&quot; --id.attrs &quot;role=admin:ecert&quot; 直接执行下面的命令，即可完成用户`Admin@example.com`注册，注意这时候的注册使用fabricCA的admin账号完成的： 1fabric-ca-client register -H `pwd`/fabric-ca-files/admin --id.secret=password 如果不用--id.secret指定密码，会自动生成密码。 其它配置的含义是用户名为`Admin@example.com，类型是client，它能够管理com.example.*`下的用户，如下: 1234567891011--id.name Admin@example.com //用户名--id.type client //类型为client--id.affiliation &quot;com.example&quot; //权利访问hf.Registrar.Roles=client,orderer,peer,user //能够管理的用户类型hf.Registrar.DelegateRoles=client,orderer,peer,user //可以授权给子用户管理的用户类型hf.Registrar.Attributes=* //可以为子用户设置所有属性hf.GenCRL=true //可以生成撤销证书列表hf.Revoker=true //可以撤销用户hf.AffiliationMgr=true //能够管理联盟hf.IntermediateCA=true //可以作为中间CArole=admin:ecert //自定义属性 完成注册之后，还需生成Admin@example.com凭证： 1234$ mkdir -p ./fabric-ca-files/example.com/admin$ fabric-ca-client enroll -u http://Admin@example.com:password@localhost:7054 -H `pwd`/fabric-ca-files/example.com/admin$ ls ./fabric-ca-files/example.com/adminfabric-ca-client-config.yaml msp/ 这时候可以用Admin@example.com的身份查看联盟： 123456$ fabric-ca-client affiliation list -H `pwd`/fabric-ca-files/example.com/admin2018/04/28 15:35:10 [INFO] 127.0.0.1:38172 GET /affiliations 201 0 &quot;OK&quot;affiliation: com affiliation: com.example affiliation: com.example.org1 affiliation: com.example.org2 最后将Admin@example.com的证书复制到example.com/msp/admincerts/中： 12mkdir fabric-ca-files/example.com/msp/admincerts/cp fabric-ca-files/example.com/admin/msp/signcerts/cert.pem fabric-ca-files/example.com/msp/admincerts/ 注册org1.example.com的管理员Admin@org1.example.com为org1.example.com的管理员Admin@org1.example.com准备一个目录: 12cd ~/fabric-deploymkdir -p ./fabric-ca-files/org1.example.com/admin 将fabric-ca-files/admin/fabric-ca-client-config.yaml其中的id部分修改为： 1234567891011121314151617181920212223id: name: Admin@org1.example.com type: client affiliation: com.example.org1 maxenrollments: 0 attributes: - name: hf.Registrar.Roles value: client,orderer,peer,user - name: hf.Registrar.DelegateRoles value: client,orderer,peer,user - name: hf.Registrar.Attributes value: &quot;*&quot; - name: hf.GenCRL value: true - name: hf.Revoker value: true - name: hf.AffiliationMgr value: true - name: hf.IntermediateCA value: true - name: role value: admin ecert: true 注册： 1fabric-ca-client register -H `pwd`/fabric-ca-files/admin --id.secret=password 生成凭证： 123$ fabric-ca-client enroll -u http://Admin@org1.example.com:password@localhost:7054 -H `pwd`/fabric-ca-files/org1.example.com/admin$ ls ./fabric-ca-files/org1.example.com/adminfabric-ca-client-config.yaml msp/ 查看联盟： 12345$ fabric-ca-client affiliation list -H `pwd`/fabric-ca-files/org1.example.com/admin2018/05/04 15:42:53 [INFO] 127.0.0.1:51298 GET /affiliations 201 0 &quot;OK&quot;affiliation: com affiliation: com.example affiliation: com.example.org1 注意与`Admin@example.com`的区别，这里只能看到组织com.example.org1 将Admin@org1.example.com的证书复制到org1.example.com的msp/admincerts中： 12mkdir fabric-ca-files/org1.example.com/msp/admincerts/cp fabric-ca-files/org1.example.com/admin/msp/signcerts/cert.pem fabric-ca-files/org1.example.com/msp/admincerts/ 在`Admin@org1.example.com目录`中也需要创建msp/admincerts目录，通过peer命令操作fabric的时候会要求admincerts存在： 12mkdir fabric-ca-files/org1.example.com/admin/msp/admincerts/ # 注意是org1.example.com/admin目录cp fabric-ca-files/org1.example.com/admin/msp/signcerts/cert.pem fabric-ca-files/org1.example.com/admin/msp/admincerts/ 另外，这里没有使用中间CA，将intermediatecerts中的空文件删除，否则peer会提示Warning： 1rm fabric-ca-files/org1.example.com/admin/msp/intermediatecerts/* 注册org2.example.com的管理员Admin@org2.example.com为org2.example.com的管理员Admin@org2.example.com准备一个目录: 12cd ~/fabric-deploymkdir -p ./fabric-ca-files/org2.example.com/admin 将fabric-ca-files/admin/fabric-ca-client-config.yaml其中的id部分修改为： 1234567891011121314151617181920212223id: name: Admin@org2.example.com type: client affiliation: com.example.org2 maxenrollments: 0 attributes: - name: hf.Registrar.Roles value: client,orderer,peer,user - name: hf.Registrar.DelegateRoles value: client,orderer,peer,user - name: hf.Registrar.Attributes value: &quot;*&quot; - name: hf.GenCRL value: true - name: hf.Revoker value: true - name: hf.AffiliationMgr value: true - name: hf.IntermediateCA value: true - name: role value: admin ecert: true 注册： 1fabric-ca-client register -H `pwd`/fabric-ca-files/admin --id.secret=password 生成凭证： 123$ fabric-ca-client enroll -u http://Admin@org2.example.com:password@localhost:7054 -H `pwd`/fabric-ca-files/org2.example.com/admin$ ls ./fabric-ca-files/org2.example.com/adminfabric-ca-client-config.yaml msp/ 查看联盟： 12345$ fabric-ca-client affiliation list -H `pwd`/fabric-ca-files/org2.example.com/admin2018/05/02 16:49:00 [INFO] 127.0.0.1:50828 GET /affiliations 201 0 &quot;OK&quot;affiliation: com affiliation: com.example affiliation: com.example.org2 Admin@org2.example.com只能看到组织com.example.org2。 将Admin@org2.example.com的证书复制到org2.example.com的msp/admincerts中： 12mkdir fabric-ca-files/org2.example.com/msp/admincerts/cp fabric-ca-files/org2.example.com/admin/msp/signcerts/cert.pem fabric-ca-files/org2.example.com/msp/admincerts/ 在Admin@org2.example.com中也需要创建msp/admincerts目录，通过peer命令操作fabric的时候会要求admincerts存在： 12mkdir fabric-ca-files/org2.example.com/admin/msp/admincerts/cp fabric-ca-files/org2.example.com/admin/msp/signcerts/cert.pem fabric-ca-files/org2.example.com/admin/msp/admincerts/ 另外，这里没有使用中间CA，将intermediatecerts中的空文件删除，否则peer会提示Warning： 1rm fabric-ca-files/org2.example.com/admin/msp/intermediatecerts/* 各个组织分别使用自己的Admin账户创建其它账号example.com、org1.example.com、org2.example.com三个组织这时候可以分别使用自己的Admin账号创建子账号。 orderer.example.com使用`Admin@example.com注册账号orderer.example.com。注意这时候指定的目录是fabric-ca-files/example.com`/admin/。 修改fabric-ca-files/example.com/admin/fabric-ca-client-config.yaml: 123456789id: name: orderer.example.com type: orderer affiliation: com.example maxenrollments: 0 attributes: - name: role value: orderer ecert: true 注册以及生成凭证： 123fabric-ca-client register -H `pwd`/fabric-ca-files/example.com/admin --id.secret=passwordmkdir ./fabric-ca-files/example.com/ordererfabric-ca-client enroll -u http://orderer.example.com:password@localhost:7054 -H `pwd`/fabric-ca-files/example.com/orderer 将`Admin@example.com`的证书复制到fabric-ca-files/example.com/orderer/msp/admincerts： 12mkdir fabric-ca-files/example.com/orderer/msp/admincertscp fabric-ca-files/example.com/admin/msp/signcerts/cert.pem fabric-ca-files/example.com/orderer/msp/admincerts/ peer0.org1.example.com使用`Admin@org1.example.com注册账号peer0.org1.example.com。这时候指定的目录是fabric-ca-files/org1.example.com`/admin/。 修改fabric-ca-files/org1.example.com/admin/fabric-ca-client-config.yaml: 123456789id: name: peer0.org1.example.com type: peer affiliation: com.example.org1 maxenrollments: 0 attributes: - name: role value: peer ecert: true 注册以及生成凭证： 123fabric-ca-client register -H `pwd`/fabric-ca-files/org1.example.com/admin --id.secret=passwordmkdir ./fabric-ca-files/org1.example.com/peer0fabric-ca-client enroll -u http://peer0.org1.example.com:password@localhost:7054 -H `pwd`/fabric-ca-files/org1.example.com/peer0 将`Admin@org1.example.com`的证书复制到fabric-ca-files/org1.example.com/peer0/msp/admincerts： 12mkdir fabric-ca-files/org1.example.com/peer0/msp/admincertscp fabric-ca-files/org1.example.com/admin/msp/signcerts/cert.pem fabric-ca-files/org1.example.com/peer0/msp/admincerts/ peer1.org1.example.com使用`Admin@org1.example.com注册账号peer1.org1.example.com。这时候指定的目录是fabric-ca-files/org1.example.com`/admin/。 修改fabric-ca-files/org1.example.com/admin/fabric-ca-client-config.yaml: 123456789id: name: peer1.org1.example.com type: peer affiliation: com.example.org1 maxenrollments: 0 attributes: - name: role value: peer ecert: true 注册以及生成凭证： 123fabric-ca-client register -H `pwd`/fabric-ca-files/org1.example.com/admin --id.secret=passwordmkdir ./fabric-ca-files/org1.example.com/peer1fabric-ca-client enroll -u http://peer1.org1.example.com:password@localhost:7054 -H `pwd`/fabric-ca-files/org1.example.com/peer1 将`Admin@org1.example.com`的证书复制到fabric-ca-files/org1.example.com/peer1/msp/admincerts： 12mkdir fabric-ca-files/org1.example.com/peer1/msp/admincertscp fabric-ca-files/org1.example.com/admin/msp/signcerts/cert.pem fabric-ca-files/org1.example.com/peer1/msp/admincerts/ peer0.org2.example.com使用`Admin@org2.example.com注册账号peer0.org2.example.com。这时候指定的目录是fabric-ca-files/org2.example.com`/admin/。 修改fabric-ca-files/org2.example.com/admin/fabric-ca-client-config.yaml: 123456789id: name: peer0.org2.example.com type: peer affiliation: com.example.org2 maxenrollments: 0 attributes: - name: role value: peer ecert: true 注册以及生成凭证： 123fabric-ca-client register -H `pwd`/fabric-ca-files/org2.example.com/admin --id.secret=passwordmkdir ./fabric-ca-files/org2.example.com/peer0fabric-ca-client enroll -u http://peer0.org2.example.com:password@localhost:7054 -H `pwd`/fabric-ca-files/org2.example.com/peer0 将`Admin@org2.example.com`的证书复制到fabric-ca-files/org2.example.com/peer0/msp/admincerts： 12mkdir fabric-ca-files/org2.example.com/peer0/msp/admincertscp fabric-ca-files/org2.example.com/admin/msp/signcerts/cert.pem fabric-ca-files/org2.example.com/peer0/msp/admincerts/ 注意： 之前发现直接这么生成的证书，会少东西，需要在每个组织的msp目录下面配置下config.yaml 1234567891011[root@localhost msp]# pwd/data/fabric/fabric-ca-files/gzyb.vaccine.com/msp[root@localhost msp]# cat config.yaml NodeOUs: Enable: true ClientOUIdentifier: Certificate: cacerts/localhost-7054.pem OrganizationalUnitIdentifier: client PeerOUIdentifier: Certificate: cacerts/localhost-7054.pem OrganizationalUnitIdentifier: peer]]></content>
      <categories>
        <category>区块链</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Prometheus监控jvm]]></title>
    <url>%2Fposts%2F68dkdk23.html</url>
    <content type="text"><![CDATA[k8s的jvm监控在pod里面env将jmx环境变量加上，jar包可以本地挂载上 1-javaagent:/home/aa/config/prom-jvm-demo/jmx_prometheus_javaagent-0.3.1.jar=6060:/home/aa/config/prom-jvm-demo/simple-config.yml&quot; 在service添加： 123456789101112131415apiVersion: v1kind: Servicemetadata: name: prometheus-aa namespace: product annotations: prometheus.io/scrape: &quot;true&quot; prometheus.io/jvm-scrape: &quot;true&quot; prometheus.io/jvm-port: &quot;6060&quot; prometheus.io/jvm-path: &quot;/metrics&quot;spec: ports: - port: 6060 selector: app: aa prometheus配置1不用做任何配置 之后运行重读prometheus配置命令 1./reload-prometheus.sh grafana模板quot;__inputs&quot;: [ &#123; &quot;name&quot;: &quot;DS_K8S集群PROMETHEUS&quot;, &quot;label&quot;: &quot;k8s集群Prometheus&quot;, &quot;description&quot;: &quot;&quot;, &quot;type&quot;: &quot;datasource&quot;, &quot;pluginId&quot;: &quot;prometheus&quot;, &quot;pluginName&quot;: &quot;Prometheus&quot; &#125; ], &quot;__requires&quot;: [ &#123; &quot;type&quot;: &quot;grafana&quot;, &quot;id&quot;: &quot;grafana&quot;, &quot;name&quot;: &quot;Grafana&quot;, &quot;version&quot;: &quot;5.4.3&quot; &#125;, &#123; &quot;type&quot;: &quot;panel&quot;, &quot;id&quot;: &quot;graph&quot;, &quot;name&quot;: &quot;Graph&quot;, &quot;version&quot;: &quot;5.0.0&quot; &#125;, &#123; &quot;type&quot;: &quot;datasource&quot;, &quot;id&quot;: &quot;prometheus&quot;, &quot;name&quot;: &quot;Prometheus&quot;, &quot;version&quot;: &quot;5.0.0&quot; &#125;, &#123; &quot;type&quot;: &quot;panel&quot;, &quot;id&quot;: &quot;singlestat&quot;, &quot;name&quot;: &quot;Singlestat&quot;, &quot;version&quot;: &quot;5.0.0&quot; &#125; ], &quot;annotations&quot;: &#123; &quot;list&quot;: [ &#123; &quot;builtIn&quot;: 1, &quot;datasource&quot;: &quot;-- Grafana --&quot;, &quot;enable&quot;: true, &quot;hide&quot;: true, &quot;iconColor&quot;: &quot;rgba(0, 211, 255, 1)&quot;, &quot;name&quot;: &quot;Annotations &amp; Alerts&quot;, &quot;type&quot;: &quot;dashboard&quot; &#125; ] &#125;, &quot;description&quot;: &quot; tomcat JVM Dashboard for JVM metrics with Prometheus / JMX Exporter&quot;, &quot;editable&quot;: true, &quot;gnetId&quot;: 3066, &quot;graphTooltip&quot;: 0, &quot;id&quot;: null, &quot;iteration&quot;: 1566263556716, &quot;links&quot;: [], &quot;panels&quot;: [ &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorPostfix&quot;: false, &quot;colorPrefix&quot;: false, &quot;colorValue&quot;: true, &quot;colors&quot;: [ &quot;rgba(50, 172, 45, 0.97)&quot;, &quot;#ba43a9&quot;, &quot;rgba(245, 54, 54, 0.9)&quot; ], &quot;datasource&quot;: &quot;$&#123;DS_K8S集群PROMETHEUS&#125;&quot;, &quot;description&quot;: &quot;&quot;, &quot;format&quot;: &quot;none&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;gridPos&quot;: &#123; &quot;h&quot;: 2, &quot;w&quot;: 4, &quot;x&quot;: 0, &quot;y&quot;: 0 &#125;, &quot;hideTimeOverride&quot;: false, &quot;id&quot;: 10, &quot;interval&quot;: null, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;minSpan&quot;: 4, &quot;nullPointMode&quot;: &quot;null&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: true, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: false &#125;, &quot;tableColumn&quot;: &quot;&quot;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;jvm_threads_started_total&#123;kubernetes_pod_name=\&quot;$kubernetes_pod_name\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;instant&quot;: true, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 20 &#125; ], &quot;thresholds&quot;: &quot;&quot;, &quot;title&quot;: &quot;JVM 总线程数&quot;, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;100%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;current&quot; &#125;, &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: true, &quot;colors&quot;: [ &quot;#299c46&quot;, &quot;rgba(237, 129, 40, 0.89)&quot;, &quot;#d44a3a&quot; ], &quot;datasource&quot;: &quot;$&#123;DS_K8S集群PROMETHEUS&#125;&quot;, &quot;format&quot;: &quot;none&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;gridPos&quot;: &#123; &quot;h&quot;: 2, &quot;w&quot;: 4, &quot;x&quot;: 4, &quot;y&quot;: 0 &#125;, &quot;id&quot;: 12, &quot;interval&quot;: null, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: false, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: false &#125;, &quot;tableColumn&quot;: &quot;&quot;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;jvm_threads_peak&#123;kubernetes_pod_name=~\&quot;$kubernetes_pod_name\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;&quot;, &quot;refId&quot;: &quot;A&quot; &#125; ], &quot;thresholds&quot;: &quot;&quot;, &quot;title&quot;: &quot;JVM 创建线程峰值&quot;, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;100%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;current&quot; &#125;, &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: false, &quot;colors&quot;: [ &quot;#299c46&quot;, &quot;rgba(237, 129, 40, 0.89)&quot;, &quot;#d44a3a&quot; ], &quot;datasource&quot;: &quot;$&#123;DS_K8S集群PROMETHEUS&#125;&quot;, &quot;format&quot;: &quot;none&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;gridPos&quot;: &#123; &quot;h&quot;: 2, &quot;w&quot;: 4, &quot;x&quot;: 8, &quot;y&quot;: 0 &#125;, &quot;id&quot;: 16, &quot;interval&quot;: null, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: false, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: false &#125;, &quot;tableColumn&quot;: &quot;&quot;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;jvm_threads_current&#123;kubernetes_pod_name=~\&quot;$kubernetes_pod_name\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;intervalFactor&quot;: 1, &quot;refId&quot;: &quot;A&quot; &#125; ], &quot;thresholds&quot;: &quot;&quot;, &quot;title&quot;: &quot;当前产生线程数&quot;, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;100%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;avg&quot; &#125;, &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: true, &quot;colors&quot;: [ &quot;#299c46&quot;, &quot;#806eb7&quot;, &quot;#d44a3a&quot; ], &quot;datasource&quot;: &quot;$&#123;DS_K8S集群PROMETHEUS&#125;&quot;, &quot;format&quot;: &quot;none&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;gridPos&quot;: &#123; &quot;h&quot;: 2, &quot;w&quot;: 4, &quot;x&quot;: 12, &quot;y&quot;: 0 &#125;, &quot;id&quot;: 14, &quot;interval&quot;: null, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: false, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: false &#125;, &quot;tableColumn&quot;: &quot;&quot;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;jvm_threads_daemon&#123;kubernetes_pod_name=~\&quot;$kubernetes_pod_name\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;intervalFactor&quot;: 1, &quot;refId&quot;: &quot;A&quot; &#125; ], &quot;thresholds&quot;: &quot;&quot;, &quot;title&quot;: &quot;守护进程线程数&quot;, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;100%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;current&quot; &#125;, &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: true, &quot;colors&quot;: [ &quot;#299c46&quot;, &quot;#bf1b00&quot;, &quot;#d44a3a&quot; ], &quot;datasource&quot;: &quot;$&#123;DS_K8S集群PROMETHEUS&#125;&quot;, &quot;format&quot;: &quot;none&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;gridPos&quot;: &#123; &quot;h&quot;: 2, &quot;w&quot;: 4, &quot;x&quot;: 16, &quot;y&quot;: 0 &#125;, &quot;id&quot;: 18, &quot;interval&quot;: null, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: false, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: false &#125;, &quot;tableColumn&quot;: &quot;&quot;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;jvm_threads_deadlocked_monitor&#123;kubernetes_pod_name=~\&quot;$kubernetes_pod_name\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;intervalFactor&quot;: 1, &quot;refId&quot;: &quot;A&quot; &#125; ], &quot;thresholds&quot;: &quot;&quot;, &quot;title&quot;: &quot;JVM 内线程死锁监视器数量&quot;, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;80%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;avg&quot; &#125;, &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: true, &quot;colors&quot;: [ &quot;#299c46&quot;, &quot;#6ed0e0&quot;, &quot;#d44a3a&quot; ], &quot;datasource&quot;: &quot;$&#123;DS_K8S集群PROMETHEUS&#125;&quot;, &quot;format&quot;: &quot;none&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;gridPos&quot;: &#123; &quot;h&quot;: 2, &quot;w&quot;: 4, &quot;x&quot;: 20, &quot;y&quot;: 0 &#125;, &quot;id&quot;: 20, &quot;interval&quot;: null, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: false, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: false &#125;, &quot;tableColumn&quot;: &quot;&quot;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;jvm_threads_deadlocked&#123;kubernetes_pod_name=~\&quot;$kubernetes_pod_name\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;intervalFactor&quot;: 1, &quot;refId&quot;: &quot;A&quot; &#125; ], &quot;thresholds&quot;: &quot;&quot;, &quot;title&quot;: &quot;JVM内线程死锁数&quot;, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;80%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;avg&quot; &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;dashLength&quot;: 10, &quot;dashes&quot;: false, &quot;datasource&quot;: &quot;$&#123;DS_K8S集群PROMETHEUS&#125;&quot;, &quot;fill&quot;: 1, &quot;gridPos&quot;: &#123; &quot;h&quot;: 8, &quot;w&quot;: 24, &quot;x&quot;: 0, &quot;y&quot;: 2 &#125;, &quot;id&quot;: 8, &quot;legend&quot;: &#123; &quot;avg&quot;: false, &quot;current&quot;: false, &quot;max&quot;: false, &quot;min&quot;: false, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: false &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 1, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;null&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [], &quot;spaceLength&quot;: 10, &quot;stack&quot;: false, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;jvm_memory_bytes_max&#123;kubernetes_pod_name=~\&quot;$kubernetes_pod_name\&quot;,area=\&quot;heap\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;最大堆内存 &#123;&#123;kubernetes_pod_name&#125;&#125; &#123;&#123;kubernetes_host_ip&#125;&#125; &quot;, &quot;refId&quot;: &quot;A&quot; &#125;, &#123; &quot;expr&quot;: &quot;jvm_memory_bytes_init&#123;kubernetes_pod_name=~\&quot;$kubernetes_pod_name\&quot;,area=\&quot;heap\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;初始化堆内存 &#123;&#123;kubernetes_pod_name&#125;&#125; &#123;&#123;kubernetes_host_ip&#125;&#125; &quot;, &quot;refId&quot;: &quot;B&quot; &#125;, &#123; &quot;expr&quot;: &quot;jvm_memory_bytes_init&#123;kubernetes_pod_name=~\&quot;$kubernetes_pod_name\&quot;,area=\&quot;nonheap\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;初始化非堆内存 &#123;&#123;kubernetes_pod_name&#125;&#125; &#123;&#123;kubernetes_host_ip&#125;&#125; &quot;, &quot;refId&quot;: &quot;C&quot; &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeRegions&quot;: [], &quot;timeShift&quot;: null, &quot;title&quot;: &quot;jvm 最大内存 / 初始化内存 / 初始化非内存&quot;, &quot;tooltip&quot;: &#123; &quot;shared&quot;: true, &quot;sort&quot;: 2, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;buckets&quot;: null, &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;bytes&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125; ], &quot;yaxis&quot;: &#123; &quot;align&quot;: false, &quot;alignLevel&quot;: null &#125; &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;dashLength&quot;: 10, &quot;dashes&quot;: false, &quot;datasource&quot;: &quot;$&#123;DS_K8S集群PROMETHEUS&#125;&quot;, &quot;fill&quot;: 5, &quot;gridPos&quot;: &#123; &quot;h&quot;: 9, &quot;w&quot;: 24, &quot;x&quot;: 0, &quot;y&quot;: 10 &#125;, &quot;id&quot;: 2, &quot;legend&quot;: &#123; &quot;alignAsTable&quot;: false, &quot;avg&quot;: true, &quot;current&quot;: false, &quot;hideEmpty&quot;: false, &quot;hideZero&quot;: false, &quot;max&quot;: false, &quot;min&quot;: false, &quot;rightSide&quot;: false, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: true &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 2, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;null&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;repeat&quot;: null, &quot;seriesOverrides&quot;: [], &quot;spaceLength&quot;: 10, &quot;stack&quot;: false, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;jvm_memory_bytes_used&#123;kubernetes_pod_name=~\&quot;$kubernetes_pod_name\&quot;,area=\&quot;heap\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;interval&quot;: &quot;&quot;, &quot;intervalFactor&quot;: 5, &quot;legendFormat&quot;: &quot;&#123;&#123;kubernetes_host_ip&#125;&#125;--[ &#123;&#123;kubernetes_pod_name&#125;&#125; ]已用堆内存&quot;, &quot;metric&quot;: &quot;jvm_memory_bytes_used&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 5 &#125;, &#123; &quot;expr&quot;: &quot;jvm_memory_bytes_used&#123;kubernetes_pod_name=~\&quot;$kubernetes_pod_name\&quot;,area=\&quot;nonheap\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;&#123;&#123;kubernetes_host_ip&#125;&#125;--[ &#123;&#123;kubernetes_pod_name&#125;&#125; ]已用非堆内存&quot;, &quot;refId&quot;: &quot;B&quot; &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeRegions&quot;: [], &quot;timeShift&quot;: null, &quot;title&quot;: &quot;jvm 已用堆内存 / 已用非堆内存&quot;, &quot;tooltip&quot;: &#123; &quot;shared&quot;: true, &quot;sort&quot;: 2, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;buckets&quot;: null, &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;bytes&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125; ], &quot;yaxis&quot;: &#123; &quot;align&quot;: false, &quot;alignLevel&quot;: null &#125; &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;dashLength&quot;: 10, &quot;dashes&quot;: false, &quot;datasource&quot;: &quot;$&#123;DS_K8S集群PROMETHEUS&#125;&quot;, &quot;fill&quot;: 4, &quot;gridPos&quot;: &#123; &quot;h&quot;: 7, &quot;w&quot;: 12, &quot;x&quot;: 0, &quot;y&quot;: 19 &#125;, &quot;id&quot;: 3, &quot;legend&quot;: &#123; &quot;avg&quot;: false, &quot;current&quot;: false, &quot;max&quot;: false, &quot;min&quot;: false, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: false &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 2, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;null&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [], &quot;spaceLength&quot;: 10, &quot;stack&quot;: false, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;jvm_threads_current&#123;kubernetes_pod_name=~\&quot;$kubernetes_pod_name\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;intervalFactor&quot;: 5, &quot;legendFormat&quot;: &quot;&#123;&#123;kubernetes_host_ip&#125;&#125; [&#123;&#123;kubernetes_pod_name&#125;&#125;]当前活跃线程&quot;, &quot;metric&quot;: &quot;jvm_threads_current&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125;, &#123; &quot;expr&quot;: &quot;jvm_threads_daemon&#123;kubernetes_pod_name=~\&quot;$kubernetes_pod_name\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;intervalFactor&quot;: 5, &quot;legendFormat&quot;: &quot;&#123;&#123;kubernetes_host_ip&#125;&#125; [&#123;&#123;kubernetes_pod_name&#125;&#125;]守护进程线程&quot;, &quot;metric&quot;: &quot;jvm_threads_daemon&quot;, &quot;refId&quot;: &quot;B&quot;, &quot;step&quot;: 10 &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeRegions&quot;: [], &quot;timeShift&quot;: null, &quot;title&quot;: &quot;活跃线程&quot;, &quot;tooltip&quot;: &#123; &quot;shared&quot;: true, &quot;sort&quot;: 2, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;buckets&quot;: null, &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;decimals&quot;: 0, &quot;format&quot;: &quot;none&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125; ], &quot;yaxis&quot;: &#123; &quot;align&quot;: false, &quot;alignLevel&quot;: null &#125; &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;dashLength&quot;: 10, &quot;dashes&quot;: false, &quot;datasource&quot;: &quot;$&#123;DS_K8S集群PROMETHEUS&#125;&quot;, &quot;fill&quot;: 1, &quot;gridPos&quot;: &#123; &quot;h&quot;: 7, &quot;w&quot;: 12, &quot;x&quot;: 12, &quot;y&quot;: 19 &#125;, &quot;id&quot;: 4, &quot;legend&quot;: &#123; &quot;avg&quot;: false, &quot;current&quot;: false, &quot;max&quot;: false, &quot;min&quot;: false, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: false &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 1, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;null&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [], &quot;spaceLength&quot;: 10, &quot;stack&quot;: false, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;jvm_classes_loaded&#123;kubernetes_pod_name=~\&quot;$kubernetes_pod_name\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;interval&quot;: &quot;&quot;, &quot;intervalFactor&quot;: 5, &quot;legendFormat&quot;: &quot;&#123;&#123;kubernetes_host_ip&#125;&#125; [&#123;&#123;kubernetes_pod_name&#125;&#125;]&quot;, &quot;metric&quot;: &quot;jvm_classes_loaded&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeRegions&quot;: [], &quot;timeShift&quot;: null, &quot;title&quot;: &quot;JVM 加载类数量&quot;, &quot;tooltip&quot;: &#123; &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;buckets&quot;: null, &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;decimals&quot;: 0, &quot;format&quot;: &quot;none&quot;, &quot;label&quot;: &quot;&quot;, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125; ], &quot;yaxis&quot;: &#123; &quot;align&quot;: false, &quot;alignLevel&quot;: null &#125; &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;dashLength&quot;: 10, &quot;dashes&quot;: false, &quot;datasource&quot;: &quot;$&#123;DS_K8S集群PROMETHEUS&#125;&quot;, &quot;fill&quot;: 1, &quot;gridPos&quot;: &#123; &quot;h&quot;: 7, &quot;w&quot;: 12, &quot;x&quot;: 0, &quot;y&quot;: 26 &#125;, &quot;id&quot;: 5, &quot;legend&quot;: &#123; &quot;avg&quot;: false, &quot;current&quot;: false, &quot;max&quot;: false, &quot;min&quot;: false, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: false &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 1, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;null&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [], &quot;spaceLength&quot;: 10, &quot;stack&quot;: false, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;rate(jvm_gc_collection_seconds_sum&#123;kubernetes_pod_name=~\&quot;$kubernetes_pod_name\&quot;,gc=\&quot;PS MarkSweep\&quot;&#125;[1m])&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;interval&quot;: &quot;&quot;, &quot;intervalFactor&quot;: 5, &quot;legendFormat&quot;: &quot;&#123;&#123;kubernetes_host_ip&#125;&#125; [&#123;&#123;kubernetes_pod_name&#125;&#125;] 年老带GC&quot;, &quot;metric&quot;: &quot;jvm_gc_collection_seconds_sum&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125;, &#123; &quot;expr&quot;: &quot;rate(jvm_gc_collection_seconds_sum&#123;kubernetes_pod_name=~\&quot;$kubernetes_pod_name\&quot;,gc=\&quot;PS Scavenge\&quot;&#125;[1m])&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;intervalFactor&quot;: 5, &quot;legendFormat&quot;: &quot;&#123;&#123;kubernetes_host_ip&#125;&#125; [&#123;&#123;kubernetes_pod_name&#125;&#125;] 新生代GC&quot;, &quot;refId&quot;: &quot;B&quot; &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeRegions&quot;: [], &quot;timeShift&quot;: null, &quot;title&quot;: &quot;新生带GC / 年老带GC&quot;, &quot;tooltip&quot;: &#123; &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;buckets&quot;: null, &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;s&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125; ], &quot;yaxis&quot;: &#123; &quot;align&quot;: false, &quot;alignLevel&quot;: null &#125; &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;dashLength&quot;: 10, &quot;dashes&quot;: false, &quot;datasource&quot;: &quot;$&#123;DS_K8S集群PROMETHEUS&#125;&quot;, &quot;fill&quot;: 1, &quot;gridPos&quot;: &#123; &quot;h&quot;: 7, &quot;w&quot;: 12, &quot;x&quot;: 12, &quot;y&quot;: 26 &#125;, &quot;id&quot;: 6, &quot;legend&quot;: &#123; &quot;avg&quot;: false, &quot;current&quot;: false, &quot;max&quot;: false, &quot;min&quot;: false, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: false &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 1, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;null&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [], &quot;spaceLength&quot;: 10, &quot;stack&quot;: false, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;jvm_gc_collection_seconds_count&#123;kubernetes_pod_name=~\&quot;$kubernetes_pod_name\&quot;,gc=\&quot;PS MarkSweep\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;interval&quot;: &quot;&quot;, &quot;intervalFactor&quot;: 5, &quot;legendFormat&quot;: &quot;&#123;&#123;kubernetes_host_ip&#125;&#125; [&#123;&#123;kubernetes_pod_name&#125;&#125;] 年老带GC次数&quot;, &quot;metric&quot;: &quot;&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125;, &#123; &quot;expr&quot;: &quot;jvm_gc_collection_seconds_count&#123;kubernetes_pod_name=~\&quot;$kubernetes_pod_name\&quot;,gc=\&quot;PS Scavenge\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;&#123;&#123;kubernetes_host_ip&#125;&#125; [&#123;&#123;kubernetes_pod_name&#125;&#125;] 新生带GC次数&quot;, &quot;refId&quot;: &quot;B&quot; &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeRegions&quot;: [], &quot;timeShift&quot;: null, &quot;title&quot;: &quot;新生代 / 年老带GC次数&quot;, &quot;tooltip&quot;: &#123; &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;buckets&quot;: null, &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;decimals&quot;: 0, &quot;format&quot;: &quot;none&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125; ], &quot;yaxis&quot;: &#123; &quot;align&quot;: false, &quot;alignLevel&quot;: null &#125; &#125; ], &quot;refresh&quot;: &quot;30s&quot;, &quot;schemaVersion&quot;: 16, &quot;style&quot;: &quot;dark&quot;, &quot;tags&quot;: [ &quot;JVM&quot;, &quot;prometheus&quot;, &quot;jmx_exporter&quot; ], &quot;templating&quot;: &#123; &quot;list&quot;: [ &#123; &quot;allValue&quot;: &quot;()&quot;, &quot;current&quot;: &#123;&#125;, &quot;datasource&quot;: &quot;$&#123;DS_K8S集群PROMETHEUS&#125;&quot;, &quot;definition&quot;: &quot;label_values(jvm_memory_bytes_used,app)&quot;, &quot;hide&quot;: 0, &quot;includeAll&quot;: true, &quot;label&quot;: &quot;请选择pod标签&quot;, &quot;multi&quot;: false, &quot;name&quot;: &quot;pod_label&quot;, &quot;options&quot;: [], &quot;query&quot;: &quot;label_values(jvm_memory_bytes_used,app)&quot;, &quot;refresh&quot;: 1, &quot;regex&quot;: &quot;&quot;, &quot;skipUrlSync&quot;: false, &quot;sort&quot;: 0, &quot;tagValuesQuery&quot;: &quot;&quot;, &quot;tags&quot;: [], &quot;tagsQuery&quot;: &quot;&quot;, &quot;type&quot;: &quot;query&quot;, &quot;useTags&quot;: false &#125;, &#123; &quot;allValue&quot;: null, &quot;current&quot;: &#123;&#125;, &quot;datasource&quot;: &quot;$&#123;DS_K8S集群PROMETHEUS&#125;&quot;, &quot;definition&quot;: &quot;label_values(jvm_memory_bytes_used&#123;app=\&quot;$pod_label\&quot;&#125;,kubernetes_pod_name)&quot;, &quot;hide&quot;: 0, &quot;includeAll&quot;: false, &quot;label&quot;: &quot;请选择pod&quot;, &quot;multi&quot;: true, &quot;name&quot;: &quot;kubernetes_pod_name&quot;, &quot;options&quot;: [], &quot;query&quot;: &quot;label_values(jvm_memory_bytes_used&#123;app=\&quot;$pod_label\&quot;&#125;,kubernetes_pod_name)&quot;, &quot;refresh&quot;: 1, &quot;regex&quot;: &quot;&quot;, &quot;skipUrlSync&quot;: false, &quot;sort&quot;: 1, &quot;tagValuesQuery&quot;: &quot;&quot;, &quot;tags&quot;: [], &quot;tagsQuery&quot;: &quot;&quot;, &quot;type&quot;: &quot;query&quot;, &quot;useTags&quot;: false &#125; ] &#125;, &quot;time&quot;: &#123; &quot;from&quot;: &quot;now-30m&quot;, &quot;to&quot;: &quot;now&quot; &#125;, &quot;timepicker&quot;: &#123; &quot;refresh_intervals&quot;: [ &quot;5s&quot;, &quot;10s&quot;, &quot;30s&quot;, &quot;1m&quot;, &quot;5m&quot;, &quot;15m&quot;, &quot;30m&quot;, &quot;1h&quot;, &quot;2h&quot;, &quot;1d&quot; ], &quot;time_options&quot;: [ &quot;5m&quot;, &quot;15m&quot;, &quot;1h&quot;, &quot;6h&quot;, &quot;12h&quot;, &quot;24h&quot;, &quot;2d&quot;, &quot;7d&quot;, &quot;30d&quot; ] &#125;, &quot;timezone&quot;: &quot;&quot;, &quot;title&quot;: &quot;JVM&quot;, &quot;uid&quot;: &quot;PVQFY0Pmz&quot;, &quot;version&quot;: 31&#125; 外部tomcat监控添加jmx的jar包 1在tomcat的catalina.sh文件即可 prometheus配置： 12345- job_name: &apos;java&apos; scrape_interval: 10s static_configs: - targets: - &apos;192.168.xx.xx:6060&apos; 模板：quot;__inputs&quot;: [ &#123; &quot;name&quot;: &quot;VAR_JOB&quot;, &quot;type&quot;: &quot;constant&quot;, &quot;label&quot;: &quot;job&quot;, &quot;value&quot;: &quot;java&quot;, &quot;description&quot;: &quot;&quot; &#125; ], &quot;__requires&quot;: [ &#123; &quot;type&quot;: &quot;grafana&quot;, &quot;id&quot;: &quot;grafana&quot;, &quot;name&quot;: &quot;Grafana&quot;, &quot;version&quot;: &quot;5.4.3&quot; &#125;, &#123; &quot;type&quot;: &quot;panel&quot;, &quot;id&quot;: &quot;graph&quot;, &quot;name&quot;: &quot;Graph&quot;, &quot;version&quot;: &quot;5.0.0&quot; &#125;, &#123; &quot;type&quot;: &quot;datasource&quot;, &quot;id&quot;: &quot;prometheus&quot;, &quot;name&quot;: &quot;Prometheus&quot;, &quot;version&quot;: &quot;5.0.0&quot; &#125;, &#123; &quot;type&quot;: &quot;panel&quot;, &quot;id&quot;: &quot;singlestat&quot;, &quot;name&quot;: &quot;Singlestat&quot;, &quot;version&quot;: &quot;5.0.0&quot; &#125; ], &quot;annotations&quot;: &#123; &quot;list&quot;: [ &#123; &quot;builtIn&quot;: 1, &quot;datasource&quot;: &quot;-- Grafana --&quot;, &quot;enable&quot;: true, &quot;hide&quot;: true, &quot;iconColor&quot;: &quot;rgba(0, 211, 255, 1)&quot;, &quot;name&quot;: &quot;Annotations &amp; Alerts&quot;, &quot;type&quot;: &quot;dashboard&quot; &#125; ] &#125;, &quot;description&quot;: &quot;Complete dashboard using metrics from prometheus JMX exporter, with drill down per job &gt; instance&quot;, &quot;editable&quot;: true, &quot;gnetId&quot;: 8563, &quot;graphTooltip&quot;: 0, &quot;id&quot;: null, &quot;iteration&quot;: 1566263511855, &quot;links&quot;: [], &quot;panels&quot;: [ &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: true, &quot;colors&quot;: [ &quot;#d44a3a&quot;, &quot;#e24d42&quot;, &quot;#299c46&quot; ], &quot;datasource&quot;: &quot;$datasource&quot;, &quot;format&quot;: &quot;none&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;gridPos&quot;: &#123; &quot;h&quot;: 4, &quot;w&quot;: 3, &quot;x&quot;: 3, &quot;y&quot;: 0 &#125;, &quot;hideTimeOverride&quot;: false, &quot;id&quot;: 21, &quot;interval&quot;: null, &quot;links&quot;: [ &#123; &quot;dashboard&quot;: &quot;Tomcat dashboard&quot;, &quot;includeVars&quot;: true, &quot;keepTime&quot;: true, &quot;targetBlank&quot;: true, &quot;title&quot;: &quot;Tomcat dashboard&quot;, &quot;type&quot;: &quot;dashboard&quot;, &quot;url&quot;: &quot;/d/chanjarster-tomcat-dashboard/tomcat-dashboard&quot; &#125; ], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: false, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: false &#125;, &quot;tableColumn&quot;: &quot;&quot;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;up&#123;job=\&quot;$job\&quot;,instance=\&quot;$instance\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;instant&quot;: true, &quot;intervalFactor&quot;: 1, &quot;refId&quot;: &quot;A&quot; &#125; ], &quot;thresholds&quot;: &quot;0,1&quot;, &quot;timeShift&quot;: null, &quot;title&quot;: &quot;Status&quot;, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;80%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;UP&quot;, &quot;value&quot;: &quot;1&quot; &#125;, &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;DOWN&quot;, &quot;value&quot;: &quot;0&quot; &#125;, &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;DOWN&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;current&quot; &#125;, &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: false, &quot;colors&quot;: [ &quot;#299c46&quot;, &quot;rgba(237, 129, 40, 0.89)&quot;, &quot;#d44a3a&quot; ], &quot;datasource&quot;: &quot;$datasource&quot;, &quot;decimals&quot;: 0, &quot;format&quot;: &quot;s&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;gridPos&quot;: &#123; &quot;h&quot;: 4, &quot;w&quot;: 4, &quot;x&quot;: 6, &quot;y&quot;: 0 &#125;, &quot;id&quot;: 14, &quot;interval&quot;: null, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: true, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: false &#125;, &quot;tableColumn&quot;: &quot;&quot;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;time() - process_start_time_seconds&#123;job=\&quot;$job\&quot;,instance=\&quot;$instance\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;instant&quot;: true, &quot;intervalFactor&quot;: 1, &quot;refId&quot;: &quot;A&quot; &#125; ], &quot;thresholds&quot;: &quot;&quot;, &quot;title&quot;: &quot;Uptime&quot;, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;80%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;current&quot; &#125;, &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: false, &quot;colors&quot;: [ &quot;#299c46&quot;, &quot;rgba(237, 129, 40, 0.89)&quot;, &quot;#d44a3a&quot; ], &quot;datasource&quot;: &quot;$datasource&quot;, &quot;decimals&quot;: null, &quot;format&quot;: &quot;dateTimeAsIso&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;gridPos&quot;: &#123; &quot;h&quot;: 4, &quot;w&quot;: 4, &quot;x&quot;: 10, &quot;y&quot;: 0 &#125;, &quot;id&quot;: 15, &quot;interval&quot;: &quot;&quot;, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: true, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: false &#125;, &quot;tableColumn&quot;: &quot;&quot;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;process_start_time_seconds&#123;job=\&quot;$job\&quot;,instance=\&quot;$instance\&quot;&#125;*1000&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;instant&quot;: true, &quot;intervalFactor&quot;: 1, &quot;refId&quot;: &quot;A&quot; &#125; ], &quot;thresholds&quot;: &quot;35,50&quot;, &quot;title&quot;: &quot;Start time&quot;, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;80%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;current&quot; &#125;, &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: false, &quot;colors&quot;: [ &quot;#299c46&quot;, &quot;rgba(237, 129, 40, 0.89)&quot;, &quot;#d44a3a&quot; ], &quot;datasource&quot;: &quot;$datasource&quot;, &quot;decimals&quot;: 0, &quot;format&quot;: &quot;none&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;gridPos&quot;: &#123; &quot;h&quot;: 4, &quot;w&quot;: 7, &quot;x&quot;: 14, &quot;y&quot;: 0 &#125;, &quot;id&quot;: 19, &quot;interval&quot;: null, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: true, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: false &#125;, &quot;tableColumn&quot;: &quot;jdk&quot;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;label_join(jvm_info&#123;job=\&quot;$job\&quot;,instance=\&quot;$instance\&quot;&#125;, \&quot;jdk\&quot;, \&quot;, \&quot;, \&quot;vendor\&quot;, \&quot;runtime\&quot;, \&quot;version\&quot;)&quot;, &quot;format&quot;: &quot;table&quot;, &quot;instant&quot;: true, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;&quot;, &quot;refId&quot;: &quot;A&quot; &#125; ], &quot;thresholds&quot;: &quot;&quot;, &quot;title&quot;: &quot;JVM Version&quot;, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;50%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;current&quot; &#125;, &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: false, &quot;colors&quot;: [ &quot;#299c46&quot;, &quot;rgba(237, 129, 40, 0.89)&quot;, &quot;#d44a3a&quot; ], &quot;datasource&quot;: &quot;$datasource&quot;, &quot;decimals&quot;: null, &quot;format&quot;: &quot;none&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;gridPos&quot;: &#123; &quot;h&quot;: 4, &quot;w&quot;: 4, &quot;x&quot;: 6, &quot;y&quot;: 4 &#125;, &quot;id&quot;: 39, &quot;interval&quot;: &quot;&quot;, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: true, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: false &#125;, &quot;tableColumn&quot;: &quot;&quot;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;os_available_processors&#123;job=\&quot;$job\&quot;,instance=\&quot;$instance\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;instant&quot;: true, &quot;intervalFactor&quot;: 1, &quot;refId&quot;: &quot;A&quot; &#125; ], &quot;thresholds&quot;: &quot;&quot;, &quot;title&quot;: &quot;Available CPUs&quot;, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;80%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;current&quot; &#125;, &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: false, &quot;colors&quot;: [ &quot;#299c46&quot;, &quot;rgba(237, 129, 40, 0.89)&quot;, &quot;#d44a3a&quot; ], &quot;datasource&quot;: &quot;$datasource&quot;, &quot;format&quot;: &quot;none&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;gridPos&quot;: &#123; &quot;h&quot;: 4, &quot;w&quot;: 4, &quot;x&quot;: 10, &quot;y&quot;: 4 &#125;, &quot;id&quot;: 23, &quot;interval&quot;: null, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: false, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: false &#125;, &quot;tableColumn&quot;: &quot;&quot;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;os_system_load_average&#123;job=\&quot;$job\&quot;,instance=\&quot;$instance\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;instant&quot;: true, &quot;intervalFactor&quot;: 1, &quot;refId&quot;: &quot;A&quot; &#125; ], &quot;thresholds&quot;: &quot;&quot;, &quot;title&quot;: &quot;System load average&quot;, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;80%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;avg&quot; &#125;, &#123; &quot;cacheTimeout&quot;: null, &quot;colorBackground&quot;: false, &quot;colorValue&quot;: false, &quot;colors&quot;: [ &quot;#299c46&quot;, &quot;rgba(237, 129, 40, 0.89)&quot;, &quot;#d44a3a&quot; ], &quot;datasource&quot;: &quot;$datasource&quot;, &quot;format&quot;: &quot;none&quot;, &quot;gauge&quot;: &#123; &quot;maxValue&quot;: 100, &quot;minValue&quot;: 0, &quot;show&quot;: false, &quot;thresholdLabels&quot;: false, &quot;thresholdMarkers&quot;: true &#125;, &quot;gridPos&quot;: &#123; &quot;h&quot;: 4, &quot;w&quot;: 4, &quot;x&quot;: 14, &quot;y&quot;: 4 &#125;, &quot;id&quot;: 38, &quot;interval&quot;: null, &quot;links&quot;: [], &quot;mappingType&quot;: 1, &quot;mappingTypes&quot;: [ &#123; &quot;name&quot;: &quot;value to text&quot;, &quot;value&quot;: 1 &#125;, &#123; &quot;name&quot;: &quot;range to text&quot;, &quot;value&quot;: 2 &#125; ], &quot;maxDataPoints&quot;: 100, &quot;nullPointMode&quot;: &quot;connected&quot;, &quot;nullText&quot;: null, &quot;postfix&quot;: &quot;&quot;, &quot;postfixFontSize&quot;: &quot;50%&quot;, &quot;prefix&quot;: &quot;&quot;, &quot;prefixFontSize&quot;: &quot;50%&quot;, &quot;rangeMaps&quot;: [ &#123; &quot;from&quot;: &quot;null&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;to&quot;: &quot;null&quot; &#125; ], &quot;sparkline&quot;: &#123; &quot;fillColor&quot;: &quot;rgba(31, 118, 189, 0.18)&quot;, &quot;full&quot;: false, &quot;lineColor&quot;: &quot;rgb(31, 120, 193)&quot;, &quot;show&quot;: false &#125;, &quot;tableColumn&quot;: &quot;&quot;, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;os_open_file_descriptor_count&#123;job=\&quot;$job\&quot;,instance=\&quot;$instance\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;instant&quot;: true, &quot;intervalFactor&quot;: 1, &quot;refId&quot;: &quot;A&quot; &#125; ], &quot;thresholds&quot;: &quot;&quot;, &quot;title&quot;: &quot;Open file descriptors&quot;, &quot;type&quot;: &quot;singlestat&quot;, &quot;valueFontSize&quot;: &quot;80%&quot;, &quot;valueMaps&quot;: [ &#123; &quot;op&quot;: &quot;=&quot;, &quot;text&quot;: &quot;N/A&quot;, &quot;value&quot;: &quot;null&quot; &#125; ], &quot;valueName&quot;: &quot;avg&quot; &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;dashLength&quot;: 10, &quot;dashes&quot;: false, &quot;datasource&quot;: &quot;$datasource&quot;, &quot;decimals&quot;: 1, &quot;fill&quot;: 1, &quot;gridPos&quot;: &#123; &quot;h&quot;: 9, &quot;w&quot;: 24, &quot;x&quot;: 0, &quot;y&quot;: 8 &#125;, &quot;id&quot;: 29, &quot;legend&quot;: &#123; &quot;alignAsTable&quot;: true, &quot;avg&quot;: false, &quot;current&quot;: true, &quot;max&quot;: true, &quot;min&quot;: false, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: true &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 1, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;null&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [], &quot;spaceLength&quot;: 10, &quot;stack&quot;: false, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;os_system_cpu_load&#123;job=\&quot;$job\&quot;,instance=\&quot;$instance\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;System&quot;, &quot;refId&quot;: &quot;B&quot; &#125;, &#123; &quot;expr&quot;: &quot;os_process_cpu_load&#123;job=\&quot;$job\&quot;,instance=\&quot;$instance\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;JVM&quot;, &quot;refId&quot;: &quot;A&quot; &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeRegions&quot;: [], &quot;timeShift&quot;: null, &quot;title&quot;: &quot;CPU load&quot;, &quot;tooltip&quot;: &#123; &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;buckets&quot;: null, &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;decimals&quot;: 1, &quot;format&quot;: &quot;percentunit&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: false &#125; ], &quot;yaxis&quot;: &#123; &quot;align&quot;: false, &quot;alignLevel&quot;: null &#125; &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;dashLength&quot;: 10, &quot;dashes&quot;: false, &quot;datasource&quot;: &quot;$datasource&quot;, &quot;fill&quot;: 1, &quot;gridPos&quot;: &#123; &quot;h&quot;: 9, &quot;w&quot;: 12, &quot;x&quot;: 0, &quot;y&quot;: 17 &#125;, &quot;id&quot;: 8, &quot;legend&quot;: &#123; &quot;alignAsTable&quot;: true, &quot;avg&quot;: true, &quot;current&quot;: true, &quot;max&quot;: true, &quot;min&quot;: true, &quot;rightSide&quot;: false, &quot;show&quot;: true, &quot;sortDesc&quot;: true, &quot;total&quot;: false, &quot;values&quot;: true &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 1, &quot;links&quot;: [], &quot;minSpan&quot;: 12, &quot;nullPointMode&quot;: &quot;null&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;repeat&quot;: &quot;memarea&quot;, &quot;repeatDirection&quot;: &quot;h&quot;, &quot;seriesOverrides&quot;: [ &#123; &quot;alias&quot;: &quot;Usage %&quot;, &quot;bars&quot;: true, &quot;color&quot;: &quot;#6d1f62&quot;, &quot;legend&quot;: false, &quot;lines&quot;: false, &quot;yaxis&quot;: 2, &quot;zindex&quot;: -1 &#125; ], &quot;spaceLength&quot;: 10, &quot;stack&quot;: false, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;jvm_memory_bytes_used&#123;area=\&quot;$memarea\&quot;,job=\&quot;$job\&quot;,instance=\&quot;$instance\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Used&quot;, &quot;refId&quot;: &quot;A&quot; &#125;, &#123; &quot;expr&quot;: &quot; jvm_memory_bytes_max&#123;area=\&quot;$memarea\&quot;,job=\&quot;$job\&quot;,instance=\&quot;$instance\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Max&quot;, &quot;refId&quot;: &quot;B&quot; &#125;, &#123; &quot;expr&quot;: &quot;jvm_memory_bytes_used&#123;area=\&quot;$memarea\&quot;,job=\&quot;$job\&quot;,instance=\&quot;$instance\&quot;&#125; / jvm_memory_bytes_max &gt;= 0&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Usage %&quot;, &quot;refId&quot;: &quot;C&quot; &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeRegions&quot;: [], &quot;timeShift&quot;: null, &quot;title&quot;: &quot;Memory area [$memarea]&quot;, &quot;tooltip&quot;: &#123; &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;buckets&quot;: null, &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;bytes&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;percentunit&quot;, &quot;label&quot;: &quot;&quot;, &quot;logBase&quot;: 1, &quot;max&quot;: &quot;1&quot;, &quot;min&quot;: &quot;0&quot;, &quot;show&quot;: true &#125; ], &quot;yaxis&quot;: &#123; &quot;align&quot;: false, &quot;alignLevel&quot;: null &#125; &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;dashLength&quot;: 10, &quot;dashes&quot;: false, &quot;datasource&quot;: &quot;$datasource&quot;, &quot;decimals&quot;: 0, &quot;fill&quot;: 1, &quot;gridPos&quot;: &#123; &quot;h&quot;: 9, &quot;w&quot;: 12, &quot;x&quot;: 12, &quot;y&quot;: 17 &#125;, &quot;id&quot;: 5, &quot;legend&quot;: &#123; &quot;alignAsTable&quot;: true, &quot;avg&quot;: false, &quot;current&quot;: true, &quot;max&quot;: true, &quot;min&quot;: true, &quot;rightSide&quot;: false, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: true &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 1, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;null&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [], &quot;spaceLength&quot;: 10, &quot;stack&quot;: false, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;increase(jvm_gc_collection_seconds_sum&#123;job=\&quot;$job\&quot;,instance=~\&quot;$instance\&quot;&#125;[$__interval])&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;interval&quot;: &quot;60s&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;&#123;&#123;gc&#125;&#125;&quot;, &quot;metric&quot;: &quot;jvm_gc_collection_seconds_sum&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeRegions&quot;: [], &quot;timeShift&quot;: null, &quot;title&quot;: &quot;GC time&quot;, &quot;tooltip&quot;: &#123; &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;buckets&quot;: null, &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;s&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: false &#125; ], &quot;yaxis&quot;: &#123; &quot;align&quot;: false, &quot;alignLevel&quot;: null &#125; &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;dashLength&quot;: 10, &quot;dashes&quot;: false, &quot;datasource&quot;: &quot;$datasource&quot;, &quot;fill&quot;: 1, &quot;gridPos&quot;: &#123; &quot;h&quot;: 9, &quot;w&quot;: 12, &quot;x&quot;: 0, &quot;y&quot;: 26 &#125;, &quot;id&quot;: 2, &quot;legend&quot;: &#123; &quot;alignAsTable&quot;: true, &quot;avg&quot;: true, &quot;current&quot;: true, &quot;max&quot;: true, &quot;min&quot;: true, &quot;rightSide&quot;: false, &quot;show&quot;: true, &quot;sort&quot;: &quot;current&quot;, &quot;sortDesc&quot;: true, &quot;total&quot;: false, &quot;values&quot;: true &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 1, &quot;links&quot;: [], &quot;minSpan&quot;: 12, &quot;nullPointMode&quot;: &quot;null&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;repeat&quot;: &quot;mempool&quot;, &quot;repeatDirection&quot;: &quot;h&quot;, &quot;seriesOverrides&quot;: [], &quot;spaceLength&quot;: 10, &quot;stack&quot;: false, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;jvm_memory_pool_bytes_max&#123;pool=\&quot;$mempool\&quot;,job=\&quot;$job\&quot;,instance=\&quot;$instance\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;interval&quot;: &quot;&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Max&quot;, &quot;metric&quot;: &quot;jvm_memory_bytes_used&quot;, &quot;refId&quot;: &quot;B&quot;, &quot;step&quot;: 5 &#125;, &#123; &quot;expr&quot;: &quot;jvm_memory_pool_bytes_used&#123;pool=\&quot;$mempool\&quot;,job=\&quot;$job\&quot;,instance=\&quot;$instance\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;interval&quot;: &quot;&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Used&quot;, &quot;metric&quot;: &quot;jvm_memory_bytes_used&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 5 &#125;, &#123; &quot;expr&quot;: &quot;jvm_memory_pool_bytes_committed&#123;pool=\&quot;$mempool\&quot;,job=\&quot;$job\&quot;,instance=\&quot;$instance\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;interval&quot;: &quot;&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Committed&quot;, &quot;metric&quot;: &quot;jvm_memory_bytes_used&quot;, &quot;refId&quot;: &quot;C&quot;, &quot;step&quot;: 5 &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeRegions&quot;: [], &quot;timeShift&quot;: null, &quot;title&quot;: &quot;Memory pool [$mempool]&quot;, &quot;tooltip&quot;: &#123; &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;buckets&quot;: null, &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;bytes&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125; ], &quot;yaxis&quot;: &#123; &quot;align&quot;: false, &quot;alignLevel&quot;: null &#125; &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;dashLength&quot;: 10, &quot;dashes&quot;: false, &quot;datasource&quot;: &quot;$datasource&quot;, &quot;fill&quot;: 1, &quot;gridPos&quot;: &#123; &quot;h&quot;: 9, &quot;w&quot;: 12, &quot;x&quot;: 12, &quot;y&quot;: 26 &#125;, &quot;id&quot;: 4, &quot;legend&quot;: &#123; &quot;alignAsTable&quot;: true, &quot;avg&quot;: false, &quot;current&quot;: true, &quot;max&quot;: true, &quot;min&quot;: true, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: true &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 1, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;null&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [], &quot;spaceLength&quot;: 10, &quot;stack&quot;: false, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;jvm_classes_loaded&#123;job=\&quot;$job\&quot;, instance=\&quot;$instance\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;interval&quot;: &quot;&quot;, &quot;intervalFactor&quot;: 5, &quot;legendFormat&quot;: &quot;loaded&quot;, &quot;metric&quot;: &quot;jvm_classes_loaded&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeRegions&quot;: [], &quot;timeShift&quot;: null, &quot;title&quot;: &quot;Class loading&quot;, &quot;tooltip&quot;: &#123; &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;buckets&quot;: null, &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;decimals&quot;: 0, &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: &quot;&quot;, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: false &#125; ], &quot;yaxis&quot;: &#123; &quot;align&quot;: false, &quot;alignLevel&quot;: null &#125; &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;dashLength&quot;: 10, &quot;dashes&quot;: false, &quot;datasource&quot;: &quot;$datasource&quot;, &quot;decimals&quot;: 0, &quot;fill&quot;: 1, &quot;gridPos&quot;: &#123; &quot;h&quot;: 9, &quot;w&quot;: 12, &quot;x&quot;: 0, &quot;y&quot;: 35 &#125;, &quot;id&quot;: 6, &quot;legend&quot;: &#123; &quot;alignAsTable&quot;: true, &quot;avg&quot;: false, &quot;current&quot;: true, &quot;max&quot;: true, &quot;min&quot;: true, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: true &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 1, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;null&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [], &quot;spaceLength&quot;: 10, &quot;stack&quot;: false, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;increase(jvm_gc_collection_seconds_count&#123;job=\&quot;$job\&quot;,instance=~\&quot;$instance\&quot;&#125;[$__interval])&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;interval&quot;: &quot;60s&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;&#123;&#123;gc&#125;&#125;&quot;, &quot;metric&quot;: &quot;&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeRegions&quot;: [], &quot;timeShift&quot;: null, &quot;title&quot;: &quot;GC count increase&quot;, &quot;tooltip&quot;: &#123; &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;buckets&quot;: null, &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;decimals&quot;: 0, &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: false &#125; ], &quot;yaxis&quot;: &#123; &quot;align&quot;: false, &quot;alignLevel&quot;: null &#125; &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;dashLength&quot;: 10, &quot;dashes&quot;: false, &quot;datasource&quot;: &quot;$datasource&quot;, &quot;decimals&quot;: 0, &quot;fill&quot;: 1, &quot;gridPos&quot;: &#123; &quot;h&quot;: 9, &quot;w&quot;: 12, &quot;x&quot;: 0, &quot;y&quot;: 44 &#125;, &quot;id&quot;: 3, &quot;legend&quot;: &#123; &quot;alignAsTable&quot;: true, &quot;avg&quot;: false, &quot;current&quot;: true, &quot;hideZero&quot;: true, &quot;max&quot;: true, &quot;min&quot;: false, &quot;rightSide&quot;: false, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: true &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 1, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;null&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [], &quot;spaceLength&quot;: 10, &quot;stack&quot;: false, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;jvm_threads_current&#123;job=\&quot;$job\&quot;,instance=\&quot;$instance\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;intervalFactor&quot;: 5, &quot;legendFormat&quot;: &quot;JVM current threads&quot;, &quot;metric&quot;: &quot;jvm_threads_current&quot;, &quot;refId&quot;: &quot;A&quot;, &quot;step&quot;: 10 &#125;, &#123; &quot;expr&quot;: &quot;jvm_threads_daemon&#123;job=\&quot;$job\&quot;,instance=\&quot;$instance\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;intervalFactor&quot;: 5, &quot;legendFormat&quot;: &quot;JVM daemon threads&quot;, &quot;metric&quot;: &quot;jvm_threads_daemon&quot;, &quot;refId&quot;: &quot;B&quot;, &quot;step&quot;: 10 &#125;, &#123; &quot;expr&quot;: &quot;jvm_threads_deadlocked&#123;job=\&quot;$job\&quot;,instance=\&quot;$instance\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;JVM deadlocked threads&quot;, &quot;refId&quot;: &quot;C&quot; &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeRegions&quot;: [], &quot;timeShift&quot;: null, &quot;title&quot;: &quot;Threads used&quot;, &quot;tooltip&quot;: &#123; &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;buckets&quot;: null, &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;decimals&quot;: 0, &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: false &#125; ], &quot;yaxis&quot;: &#123; &quot;align&quot;: false, &quot;alignLevel&quot;: null &#125; &#125;, &#123; &quot;aliasColors&quot;: &#123;&#125;, &quot;bars&quot;: false, &quot;dashLength&quot;: 10, &quot;dashes&quot;: false, &quot;datasource&quot;: &quot;$datasource&quot;, &quot;fill&quot;: 1, &quot;gridPos&quot;: &#123; &quot;h&quot;: 10, &quot;w&quot;: 24, &quot;x&quot;: 0, &quot;y&quot;: 53 &#125;, &quot;id&quot;: 44, &quot;legend&quot;: &#123; &quot;alignAsTable&quot;: true, &quot;avg&quot;: false, &quot;current&quot;: true, &quot;max&quot;: true, &quot;min&quot;: true, &quot;show&quot;: true, &quot;total&quot;: false, &quot;values&quot;: true &#125;, &quot;lines&quot;: true, &quot;linewidth&quot;: 1, &quot;links&quot;: [], &quot;nullPointMode&quot;: &quot;null&quot;, &quot;percentage&quot;: false, &quot;pointradius&quot;: 5, &quot;points&quot;: false, &quot;renderer&quot;: &quot;flot&quot;, &quot;seriesOverrides&quot;: [], &quot;spaceLength&quot;: 10, &quot;stack&quot;: false, &quot;steppedLine&quot;: false, &quot;targets&quot;: [ &#123; &quot;expr&quot;: &quot;os_total_physical_memory_bytes&#123;job=\&quot;$job\&quot;,instance=\&quot;$instance\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Total physical memory&quot;, &quot;refId&quot;: &quot;A&quot; &#125;, &#123; &quot;expr&quot;: &quot;os_committed_virtual_memory_bytes&#123;job=\&quot;$job\&quot;,instance=\&quot;$instance\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Committed virtual memory&quot;, &quot;refId&quot;: &quot;B&quot; &#125;, &#123; &quot;expr&quot;: &quot;os_free_physical_memory_bytes&#123;job=\&quot;$job\&quot;,instance=\&quot;$instance\&quot;&#125;&quot;, &quot;format&quot;: &quot;time_series&quot;, &quot;intervalFactor&quot;: 1, &quot;legendFormat&quot;: &quot;Free physical memory&quot;, &quot;refId&quot;: &quot;C&quot; &#125; ], &quot;thresholds&quot;: [], &quot;timeFrom&quot;: null, &quot;timeRegions&quot;: [], &quot;timeShift&quot;: null, &quot;title&quot;: &quot;Physical memory&quot;, &quot;tooltip&quot;: &#123; &quot;shared&quot;: true, &quot;sort&quot;: 0, &quot;value_type&quot;: &quot;individual&quot; &#125;, &quot;type&quot;: &quot;graph&quot;, &quot;xaxis&quot;: &#123; &quot;buckets&quot;: null, &quot;mode&quot;: &quot;time&quot;, &quot;name&quot;: null, &quot;show&quot;: true, &quot;values&quot;: [] &#125;, &quot;yaxes&quot;: [ &#123; &quot;format&quot;: &quot;decbytes&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125;, &#123; &quot;format&quot;: &quot;short&quot;, &quot;label&quot;: null, &quot;logBase&quot;: 1, &quot;max&quot;: null, &quot;min&quot;: null, &quot;show&quot;: true &#125; ], &quot;yaxis&quot;: &#123; &quot;align&quot;: false, &quot;alignLevel&quot;: null &#125; &#125; ], &quot;refresh&quot;: &quot;10s&quot;, &quot;schemaVersion&quot;: 16, &quot;style&quot;: &quot;dark&quot;, &quot;tags&quot;: [ &quot;JVM&quot; ], &quot;templating&quot;: &#123; &quot;list&quot;: [ &#123; &quot;current&quot;: &#123; &quot;tags&quot;: [], &quot;text&quot;: &quot;default&quot;, &quot;value&quot;: &quot;default&quot; &#125;, &quot;hide&quot;: 0, &quot;label&quot;: null, &quot;name&quot;: &quot;datasource&quot;, &quot;options&quot;: [], &quot;query&quot;: &quot;prometheus&quot;, &quot;refresh&quot;: 1, &quot;regex&quot;: &quot;&quot;, &quot;skipUrlSync&quot;: false, &quot;type&quot;: &quot;datasource&quot; &#125;, &#123; &quot;current&quot;: &#123; &quot;value&quot;: &quot;$&#123;VAR_JOB&#125;&quot;, &quot;text&quot;: &quot;$&#123;VAR_JOB&#125;&quot; &#125;, &quot;hide&quot;: 0, &quot;label&quot;: &quot;job&quot;, &quot;name&quot;: &quot;job&quot;, &quot;options&quot;: [ &#123; &quot;value&quot;: &quot;$&#123;VAR_JOB&#125;&quot;, &quot;text&quot;: &quot;$&#123;VAR_JOB&#125;&quot; &#125; ], &quot;query&quot;: &quot;$&#123;VAR_JOB&#125;&quot;, &quot;skipUrlSync&quot;: false, &quot;type&quot;: &quot;constant&quot; &#125;, &#123; &quot;allValue&quot;: &quot;.*&quot;, &quot;current&quot;: &#123;&#125;, &quot;datasource&quot;: &quot;$datasource&quot;, &quot;definition&quot;: &quot;&quot;, &quot;hide&quot;: 0, &quot;includeAll&quot;: false, &quot;label&quot;: &quot;instance&quot;, &quot;multi&quot;: false, &quot;name&quot;: &quot;instance&quot;, &quot;options&quot;: [], &quot;query&quot;: &quot;label_values(jvm_info&#123;job=\&quot;$job\&quot;&#125;,instance)&quot;, &quot;refresh&quot;: 1, &quot;regex&quot;: &quot;&quot;, &quot;skipUrlSync&quot;: false, &quot;sort&quot;: 1, &quot;tagValuesQuery&quot;: &quot;&quot;, &quot;tags&quot;: [], &quot;tagsQuery&quot;: &quot;&quot;, &quot;type&quot;: &quot;query&quot;, &quot;useTags&quot;: false &#125;, &#123; &quot;allValue&quot;: null, &quot;current&quot;: &#123;&#125;, &quot;datasource&quot;: &quot;$datasource&quot;, &quot;definition&quot;: &quot;&quot;, &quot;hide&quot;: 2, &quot;includeAll&quot;: true, &quot;label&quot;: null, &quot;multi&quot;: true, &quot;name&quot;: &quot;mempool&quot;, &quot;options&quot;: [], &quot;query&quot;: &quot;label_values(jvm_memory_pool_bytes_max&#123;job=\&quot;$job\&quot;, instance=\&quot;$instance\&quot;&#125;, pool)&quot;, &quot;refresh&quot;: 1, &quot;regex&quot;: &quot;&quot;, &quot;skipUrlSync&quot;: false, &quot;sort&quot;: 1, &quot;tagValuesQuery&quot;: &quot;&quot;, &quot;tags&quot;: [], &quot;tagsQuery&quot;: &quot;&quot;, &quot;type&quot;: &quot;query&quot;, &quot;useTags&quot;: false &#125;, &#123; &quot;allValue&quot;: null, &quot;current&quot;: &#123;&#125;, &quot;datasource&quot;: &quot;$datasource&quot;, &quot;definition&quot;: &quot;&quot;, &quot;hide&quot;: 2, &quot;includeAll&quot;: true, &quot;label&quot;: null, &quot;multi&quot;: true, &quot;name&quot;: &quot;memarea&quot;, &quot;options&quot;: [], &quot;query&quot;: &quot;label_values(jvm_memory_bytes_used&#123;job=\&quot;$job\&quot;, instance=\&quot;$instance\&quot;&#125;, area)&quot;, &quot;refresh&quot;: 1, &quot;regex&quot;: &quot;&quot;, &quot;skipUrlSync&quot;: false, &quot;sort&quot;: 0, &quot;tagValuesQuery&quot;: &quot;&quot;, &quot;tags&quot;: [], &quot;tagsQuery&quot;: &quot;&quot;, &quot;type&quot;: &quot;query&quot;, &quot;useTags&quot;: false &#125; ] &#125;, &quot;time&quot;: &#123; &quot;from&quot;: &quot;now-15m&quot;, &quot;to&quot;: &quot;now&quot; &#125;, &quot;timepicker&quot;: &#123; &quot;refresh_intervals&quot;: [ &quot;5s&quot;, &quot;10s&quot;, &quot;30s&quot;, &quot;1m&quot;, &quot;5m&quot; ], &quot;time_options&quot;: [ &quot;5m&quot;, &quot;15m&quot;, &quot;1h&quot;, &quot;6h&quot;, &quot;12h&quot;, &quot;24h&quot;, &quot;2d&quot;, &quot;7d&quot;, &quot;30d&quot; ] &#125;, &quot;timezone&quot;: &quot;&quot;, &quot;title&quot;: &quot;JVM tomcat&quot;, &quot;uid&quot;: &quot;0CjGA5kWz&quot;, &quot;version&quot;: 1&#125;]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Prometheus监控mongo]]></title>
    <url>%2Fposts%2F440gqa86.html</url>
    <content type="text"><![CDATA[安装mongo插件123456789yum -y install glidegit clone git@github.com:dcu/mongodb_exporter.git $GOPATH/src/github.com/dcu/mongodb_exporter也可以去github上，下载源码，在编译安装cd $GOPATH/src/github.com/dcu/mongodb_exportermake build./mongodb_exporter -h注意：go环境需要提前安装好，可以编译也可以yum安装如果不会编译，可以通知本人，给你发编译后的包 启动1nohup ./mongodb_exporter --mongodb.uri &quot;mongodb://readonly:readonly@192.168.50.7:27017&quot; &amp; 上面是单点的，集群的话192.168.50.7:27017,192.168.50.8:27017 这样就可以 prometheus配置123456- job_name: mongo_exporter static_configs: - targets: - &apos;192.168.50.7:9001&apos; labels: service: mongo 导入模板https://grafana.com/dashboards/2583]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Prometheus监控elasticsearch]]></title>
    <url>%2Fposts%2F550bdf86.html</url>
    <content type="text"><![CDATA[安装监控插件12345wget https://github.com/justwatchcom/elasticsearch_exporter/releases/download/v1.0.4rc1/elasticsearch_exporter-1.0.4rc1.linux-amd64.tar.gz tar -zxvf elasticsearch_exporter-1.0.4rc1.linux-amd64.tar.gz cd elasticsearch_exporter-1.0.4rc1.linux-amd64/ nohup ./elasticsearch_exporter --web.listen-address &quot;:9109&quot; --es.uri http://192.168.50.153:9200 &amp; 启动成功后，可以访问 http://192.168.50.153:9109/metrics ，看抓取的信息 监控图表 指标 解析 ##搜索和索引性能 elasticsearch_indices_search_query_total 查询总数 吞吐量 elasticsearch_indices_search_query_time_seconds 查询总时间 性能 elasticsearch_indices_search_fetch_total 提取总数 elasticsearch_indices_search_fetch_time_seconds 花费在提取上的总时间 ##索引请求 elasticsearch_indices_indexing_index_total 索引的文件总数 elasticsearch_indices_indexing_index_time_seconds_total 索引文档总时间 elasticsearch_indices_indexing_delete_total 索引的文件删除总数 elasticsearch_indices_indexing_delete_time_seconds_total 索引的文件删除总时间 elasticsearch_indices_refresh_total 索引刷新总数 elasticsearch_indices_refresh_time_seconds_total 刷新指数的总时间 elasticsearch_indices_flush_total 索引刷新总数到磁盘 elasticsearch_indices_flush_time_seconds 将索引刷新到磁盘上的总时间 累计flush时间 ##JVM内存和垃圾回收 elasticsearch_jvm_gc_collection_seconds_sum GC run time in seconds垃圾回收时间 elasticsearch_jvm_gc_collection_seconds_count Count of JVM GC runs垃圾搜集数 elasticsearch_jvm_memory_committed_bytes JVM memory currently committed by area最大使用内存限制 elasticsearch_jvm_memory_max_bytes 配置的最大jvm值 elasticsearch_jvm_memory_pool_max_bytes JVM内存最大池数 elasticsearch_jvm_memory_pool_peak_max_bytes 最大的JVM内存峰值 elasticsearch_jvm_memory_pool_peak_used_bytes 池使用的JVM内存峰值 elasticsearch_jvm_memory_pool_used_bytes 目前使用的JVM内存池 elasticsearch_jvm_memory_used_bytes JVM memory currently used by area 内存使用量 ##集群健康和节点可用性 elasticsearch_cluster_health_status 集群状态，green（ 所有的主分片和副本分片都正常运行）、yellow（所有的主分片都正常运行，但不是所有的副本分片都正常运行）red（有主分片没能正常运行）值为1的即为对应状态 elasticsearch_cluster_health_number_of_data_nodes node节点的数量 elasticsearch_cluster_health_number_of_in_flight_fetch 正在进行的碎片信息请求的数量 elasticsearch_cluster_health_number_of_nodes 集群内所有的节点 elasticsearch_cluster_health_number_of_pending_tasks 尚未执行的集群级别更改 elasticsearch_cluster_health_initializing_shards 正在初始化的分片数 elasticsearch_cluster_health_unassigned_shards 未分配分片数 elasticsearch_cluster_health_active_primary_shards 活跃的主分片总数 elasticsearch_cluster_health_active_shards 活跃的分片总数（包括复制分片） elasticsearch_cluster_health_relocating_shards 当前节点正在迁移到其他节点的分片数量，通常为0，集群中有节点新加入或者退出时该值会增加 ##资源饱和度 elasticsearch_thread_pool_completed_count 线程池操作完成（bulk、index、search、force_merge） elasticsearch_thread_pool_active_count 线程池线程活动（bulk、index、search、force_merge） elasticsearch_thread_pool_largest_count 线程池最大线程数（bulk、index、search、force_merge） elasticsearch_thread_pool_queue_count 线程池中的排队线程数（bulk、index、search、force_merge） elasticsearch_thread_pool_rejected_count 线程池的被拒绝线程数（bulk、index、search、force_merge） elasticsearch_indices_fielddata_memory_size_bytes fielddata缓存的大小（字节） elasticsearch_indices_fielddata_evictions 来自fielddata缓存的驱逐次数 elasticsearch_indices_filter_cache_evictions 来自过滤器缓存的驱逐次数（仅版本2.x） elasticsearch_indices_filter_cache_memory_size_bytes 过滤器高速缓存的大小（字节）（仅版本2.x） elasticsearch_cluster_health_number_of_pending_tasks 待处理任务数 elasticsearch_indices_get_time_seconds elasticsearch_indices_get_missing_total 丢失的文件的GET请求总数 elasticsearch_indices_get_missing_time_seconds 花费在文档丢失的GET请求上的总时间 elasticsearch_indices_get_exists_time_seconds elasticsearch_indices_get_exists_total elasticsearch_indices_get_total ##主机级别的系统和网络指标 elasticsearch_process_cpu_percent Percent CPU used by process CPU使用率 elasticsearch_filesystem_data_free_bytes Free space on block device in bytes 磁盘可用空间 elasticsearch_process_open_files_count Open file descriptors ES进程打开的文件描述符 elasticsearch_transport_rx_packets_total Count of packets receivedES节点之间网络入流量 elasticsearch_transport_tx_packets_total Count of packets sentES节点之间网络出流量 prometheus配置123456789101112131415161718- job_name: &apos;elasticsearch&apos; scrape_interval: 60s scrape_timeout: 30s metrics_path: &quot;/metrics&quot; static_configs: - targets: - &apos;192.168.50.153:9109&apos; labels: service: elasticsearch relabel_configs: - source_labels: [__address__] regex: &apos;(.*)\:9109&apos; target_label: &apos;instance&apos; replacement: &apos;$1&apos; - source_labels: [__address__] regex: &apos;.*\.(.*)\.lan.*&apos; target_label: &apos;environment&apos; replacement: &apos;$1&apos; 之后运行重读prometheus配置命令 1./reload-prometheus.sh grafana模板1https://grafana.com/dashboards/2322 报警配置1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283groups:- name: elasticsearchStatsAlert rules: - alert: Elastic_Cluster_Health_RED expr: elasticsearch_cluster_health_status&#123;color=&quot;red&quot;&#125;==1 for: 1m labels: severity: critical annotations: summary: &quot;Instance &#123;&#123; $labels.instance &#125;&#125;: not all primary and replica shards are allocated in elasticsearch cluster &#123;&#123; $labels.cluster &#125;&#125;&quot; description: &quot;Instance &#123;&#123; $labels.instance &#125;&#125;: not all primary and replica shards are allocated in elasticsearch cluster &#123;&#123; $labels.cluster &#125;&#125;.&quot; - alert: Elastic_Cluster_Health_Yellow expr: elasticsearch_cluster_health_status&#123;color=&quot;yellow&quot;&#125;==1 for: 1m labels: severity: critical annotations: summary: &quot; Instance &#123;&#123; $labels.instance &#125;&#125;: not all primary and replica shards are allocated in elasticsearch cluster &#123;&#123; $labels.cluster &#125;&#125;&quot; description: &quot;Instance &#123;&#123; $labels.instance &#125;&#125;: not all primary and replica shards are allocated in elasticsearch cluster &#123;&#123; $labels.cluster &#125;&#125;.&quot; - alert: Elasticsearch_JVM_Heap_Too_High expr: elasticsearch_jvm_memory_used_bytes&#123;area=&quot;heap&quot;&#125; / elasticsearch_jvm_memory_max_bytes&#123;area=&quot;heap&quot;&#125; &gt; 0.8 for: 1m labels: severity: critical annotations: summary: &quot;ElasticSearch node &#123;&#123; $labels.instance &#125;&#125; heap usage is high &quot; description: &quot;The heap in &#123;&#123; $labels.instance &#125;&#125; is over 80% for 15m.&quot; - alert: Elasticsearch_health_up expr: elasticsearch_cluster_health_up !=1 for: 1m labels: severity: critical annotations: summary: &quot; ElasticSearch node: &#123;&#123; $labels.instance &#125;&#125; last scrape of the ElasticSearch cluster health failed&quot; description: &quot;ElasticSearch node: &#123;&#123; $labels.instance &#125;&#125; last scrape of the ElasticSearch cluster health failed&quot; - alert: Elasticsearch_Too_Few_Nodes_Running expr: elasticsearch_cluster_health_number_of_nodes &lt; 12 for: 1m labels: severity: critical annotations: summary: &quot;There are only &#123;&#123;$value&#125;&#125; &lt; 12 ElasticSearch nodes running &quot; description: &quot;lasticSearch running on less than 12 nodes(total 14)&quot; - alert: Elasticsearch_Count_of_JVM_GC_Runs expr: rate(elasticsearch_jvm_gc_collection_seconds_count&#123;&#125;[5m])&gt;5 for: 1m labels: severity: critical annotations: summary: &quot;ElasticSearch node &#123;&#123; $labels.instance &#125;&#125;: Count of JVM GC runs &gt; 5 per sec and has a value of &#123;&#123; $value &#125;&#125; &quot; description: &quot;ElasticSearch node &#123;&#123; $labels.instance &#125;&#125;: Count of JVM GC runs &gt; 5 per sec and has a value of &#123;&#123; $value &#125;&#125;&quot; - alert: Elasticsearch_GC_Run_Time expr: rate(elasticsearch_jvm_gc_collection_seconds_sum[5m])&gt;0.3 for: 1m labels: severity: critical annotations: summary: &quot; ElasticSearch node &#123;&#123; $labels.instance &#125;&#125;: GC run time in seconds &gt; 0.3 sec and has a value of &#123;&#123; $value &#125;&#125;&quot; description: &quot;ElasticSearch node &#123;&#123; $labels.instance &#125;&#125;: GC run time in seconds &gt; 0.3 sec and has a value of &#123;&#123; $value &#125;&#125;&quot; - alert: Elasticsearch_json_parse_failures expr: elasticsearch_cluster_health_json_parse_failures&gt;0 for: 1m labels: severity: critical annotations: summary: &quot; ElasticSearch node &#123;&#123; $labels.instance &#125;&#125;: json parse failures &gt; 0 and has a value of &#123;&#123; $value &#125;&#125;&quot; description: &quot;ElasticSearch node &#123;&#123; $labels.instance &#125;&#125;: json parse failures &gt; 0 and has a value of &#123;&#123; $value &#125;&#125;&quot; - alert: Elasticsearch_breakers_tripped expr: rate(elasticsearch_breakers_tripped&#123;&#125;[5m])&gt;0 for: 1m labels: severity: critical annotations: summary: &quot; ElasticSearch node &#123;&#123; $labels.instance &#125;&#125;: breakers tripped &gt; 0 and has a value of &#123;&#123; $value &#125;&#125;&quot; description: &quot;ElasticSearch node &#123;&#123; $labels.instance &#125;&#125;: breakers tripped &gt; 0 and has a value of &#123;&#123; $value &#125;&#125;&quot; - alert: Elasticsearch_health_timed_out expr: elasticsearch_cluster_health_timed_out&gt;0 for: 1m labels: severity: critical annotations: summary: &quot; ElasticSearch node &#123;&#123; $labels.instance &#125;&#125;: Number of cluster health checks timed out &gt; 0 and has a value of &#123;&#123; $value &#125;&#125;&quot; description: &quot;ElasticSearch node &#123;&#123; $labels.instance &#125;&#125;: Number of cluster health checks timed out &gt; 0 and has a value of &#123;&#123; $value &#125;&#125;&quot;]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Prometheus删除数据指标]]></title>
    <url>%2Fposts%2F354cfft6.html</url>
    <content type="text"><![CDATA[概述有的时候我们可能希望从 Prometheus 中删除一些不需要的数据指标，或者只是单纯的想要释放一些磁盘空间。Prometheus 中的时间序列只能通过 HTTP API 来进行管理。 默认情况下，管理时间序列的 API 是被禁用的，要启用它，我们需要在 Prometheus 的启动参数中添加--web.enable-admin-api这个参数，比如我们前面的文章中通过 Kubernetes Pod 来部署的，则同样需要添加上这个参数 12345678command:- &quot;/bin/prometheus&quot;args:- &quot;--config.file=/etc/prometheus/prometheus.yml&quot;- &quot;--storage.tsdb.path=/prometheus&quot;- &quot;--storage.tsdb.retention=24h&quot;- &quot;--web.enable-admin-api&quot; # 控制对admin HTTP API的访问，其中包括删除时间序列等功能- &quot;--web.enable-lifecycle&quot; # 支持热更新，直接执行localhost:9090/-/reload立即生效 删除时间序列指标控制管理 API 启用后，可以使用下面的语法来删除与某个标签匹配的所有时间序列指标： 1curl -X POST -g &apos;http://localhost:9090/api/v1/admin/tsdb/delete_series?match[]=&#123;kubernetes_name=&quot;redis&quot;&#125;&apos; 上面命令就可以用于删除具有标签kubernetes_name=&quot;redis&quot;的时间序列指标。 如果要删除一些 job 任务或者 instance 的数据指标，则可以使用下面的命令： 12curl -X POST -g &apos;http://localhost:9090/api/v1/admin/tsdb/delete_series?match[]=&#123;job=&quot;kubernetes-service-endpoints&quot;&#125;&apos;curl -X POST -g &apos;http://localhost:9090/api/v1/admin/tsdb/delete_series?match[]=&#123;instance=&quot;10.244.2.158:9090&quot;&#125;&apos; 要从 Prometheus 中删除所有的数据，可以使用如下命令： 1curl -X POST -g &apos;http://localhost:9090/api/v1/admin/tsdb/delete_series?match[]=&#123;__name__=~&quot;.+&quot;&#125;&apos; 不过需要注意的是上面的 API 调用并不会立即删除数据，实际数据任然还存在磁盘上，会在后面进行数据清理。 要确定何时删除旧数据，可以使用--storage.tsdb.retention参数进行配置（默认情况下，Prometheus 会将数据保留15天）。]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Prometheus监控]]></title>
    <url>%2Fposts%2Fe2e612d1.html</url>
    <content type="text"><![CDATA[在Kubernetes上快速部署Prometheus创建一个新的命名空间12345678[root@prometheus]# cat monitor_namespace.yaml apiVersion: v1kind: Namespacemetadata: name: monitor labels: name: monitor[root@prometheus]#kubectl create -f monitor_namespace.yaml rbac文件12345678910111213141516171819202122232425262728293031323334353637383940414243[root@prometheus]# cat rbac-setup.yaml apiVersion: rbac.authorization.k8s.io/v1kind: ClusterRolemetadata: name: prometheusrules:- apiGroups: [&quot;&quot;] resources: - nodes - nodes/proxy - services - endpoints - pods verbs: [&quot;get&quot;, &quot;list&quot;, &quot;watch&quot;]- apiGroups: - extensions resources: - ingresses verbs: [&quot;get&quot;, &quot;list&quot;, &quot;watch&quot;]- nonResourceURLs: [&quot;/metrics&quot;] verbs: [&quot;get&quot;]---apiVersion: v1kind: ServiceAccountmetadata: name: prometheus namespace: monitor---apiVersion: rbac.authorization.k8s.io/v1kind: ClusterRoleBindingmetadata: name: prometheusroleRef: apiGroup: rbac.authorization.k8s.io kind: ClusterRole name: prometheussubjects:- kind: ServiceAccount name: prometheus namespace: monitor [root@prometheus]#kubectl create -f rbac-setup.yaml prometheus-deploy文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313314315316317318319320321322323324325326327328329330331332333334335336337338339340341342343344345346347348349350351352353354355356357358359360361362363364365366367368369370371372373[root@prometheus]# cat configmap.yamlapiVersion: v1kind: ConfigMapmetadata: name: prometheus-config namespace: monitordata: #被引用到/etc/prometheus/prometheus.yml prometheus.yml: | global: #每15s采集一次数据和15s做一次告警检测 scrape_interval: 15s evaluation_interval: 15s #指定加载的告警规则文件 rule_files: - /etc/prometheus/rules.yml #将报警送至何地进行报警 alerting: alertmanagers: - static_configs: - targets: [&quot;192.168.50.60:9093&quot;] #指定prometheus要监控的目标 scrape_configs: - job_name: &apos;k8s-node&apos; scrape_interval: 10s static_configs: - targets: - &apos;192.168.50.61:31672&apos; #自定义获取监控数据,每个 job_name 都是独立的 - job_name: &apos;tomcat-pods&apos; tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token kubernetes_sd_configs: - role: endpoints relabel_configs: - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape, __meta_kubernetes_service_annotation_prometheus_io_jvm_scrape] regex: true;true action: keep - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_app_metrics_patn] action: replace target_label: __metrics_path__ regex: (.+) - source_labels: [__meta_kubernetes_pod_ip, __meta_kubernetes_service_annotation_prometheus_io_app_metrics_port] action: replace target_label: __address__ regex: (.+);(.+) - source_labels: [__meta_kubernetes_namespace] action: replace target_label: kubernetes_namespace - source_labels: [__meta_kubernetes_pod_name] action: replace target_label: kubernetes_pod_name - action: labelmap regex: __meta_kubernetes_pod_label_(.+) - source_labels: [__meta_kubernetes_pod_host_ip] action: replace target_label: kubernetes_host_ip - job_name: &apos;kubernetes-apiservers&apos; kubernetes_sd_configs: - role: endpoints scheme: https tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token relabel_configs: - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name] action: keep regex: default;kubernetes;https - job_name: &apos;kubernetes-nodes&apos; kubernetes_sd_configs: - role: node scheme: https tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token relabel_configs: - action: labelmap regex: __meta_kubernetes_node_label_(.+) - target_label: __address__ replacement: kubernetes.default.svc:443 - source_labels: [__meta_kubernetes_node_name] regex: (.+) target_label: __metrics_path__ replacement: /api/v1/nodes/$&#123;1&#125;/proxy/metrics - job_name: &apos;kubernetes-cadvisor&apos; kubernetes_sd_configs: - role: node scheme: https tls_config: ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token relabel_configs: - action: labelmap regex: __meta_kubernetes_node_label_(.+) - target_label: __address__ replacement: kubernetes.default.svc:443 - source_labels: [__meta_kubernetes_node_name] regex: (.+) target_label: __metrics_path__ replacement: /api/v1/nodes/$&#123;1&#125;/proxy/metrics/cadvisor - job_name: &apos;kubernetes-service-endpoints&apos; kubernetes_sd_configs: - role: endpoints relabel_configs: - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape] action: keep regex: true - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme] action: replace target_label: __scheme__ regex: (https?) - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path] action: replace target_label: __metrics_path__ regex: (.+) - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port] action: replace target_label: __address__ regex: ([^:]+)(?::\d+)?;(\d+) replacement: $1:$2 - action: labelmap regex: __meta_kubernetes_service_label_(.+) - source_labels: [__meta_kubernetes_namespace] action: replace target_label: kubernetes_namespace - source_labels: [__meta_kubernetes_service_name] action: replace target_label: kubernetes_name - job_name: &apos;kubernetes-services&apos; kubernetes_sd_configs: - role: service metrics_path: /probe params: module: [http_2xx] relabel_configs: - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe] action: keep regex: true - source_labels: [__address__] target_label: __param_target - target_label: __address__ replacement: blackbox-exporter.example.com:9115 - source_labels: [__param_target] target_label: instance - action: labelmap regex: __meta_kubernetes_service_label_(.+) - source_labels: [__meta_kubernetes_namespace] target_label: kubernetes_namespace - source_labels: [__meta_kubernetes_service_name] target_label: kubernetes_name - job_name: &apos;kubernetes-ingresses&apos; kubernetes_sd_configs: - role: ingress relabel_configs: - source_labels: [__meta_kubernetes_ingress_annotation_prometheus_io_probe] action: keep regex: true - source_labels: [__meta_kubernetes_ingress_scheme,__address__,__meta_kubernetes_ingress_path] regex: (.+);(.+);(.+) replacement: $&#123;1&#125;://$&#123;2&#125;$&#123;3&#125; target_label: __param_target - target_label: __address__ replacement: blackbox-exporter.example.com:9115 - source_labels: [__param_target] target_label: instance - action: labelmap regex: __meta_kubernetes_ingress_label_(.+) - source_labels: [__meta_kubernetes_namespace] target_label: kubernetes_namespace - source_labels: [__meta_kubernetes_ingress_name] target_label: kubernetes_name - job_name: &apos;kubernetes-pods&apos; kubernetes_sd_configs: - role: pod relabel_configs: - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape] action: keep regex: true - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path] action: replace target_label: __metrics_path__ regex: (.+) - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port] action: replace regex: ([^:]+)(?::\d+)?;(\d+) replacement: $1:$2 target_label: __address__ - action: labelmap regex: __meta_kubernetes_pod_label_(.+) - source_labels: [__meta_kubernetes_namespace] action: replace target_label: kubernetes_namespace - source_labels: [__meta_kubernetes_pod_name] action: replace target_label: kubernetes_pod_name # 监控规则文件,被引用到/etc/prometheus/rules.yml rules.yml: | groups: - name: test-rule rules: ############# Node监控 ############# - alert: k8s-node状态异常 expr: up&#123;job=&quot;k8s-node&quot;&#125; != 1 for: 3m labels: team: k8s-node annotations: summary: &quot;&#123;&#123;$labels.instance&#125;&#125;: Node节点状态异常&quot; description: &quot;可能是重启了&quot; - alert: k8s-node节点CPU使用率 expr: (1 - avg(irate(node_cpu_seconds_total&#123;job=&quot;k8s-node&quot;,mode=&quot;idle&quot;&#125;[1m])) by (instance)) * 100 &gt; 95 for: 1m labels: team: k8s-node annotations: summary: &quot;&#123;&#123;$labels.instance&#125;&#125;: Node节点CPU使用率超过95%&quot; description: &quot;&#123;&#123;$labels.instance&#125;&#125;: Node节点当前CPU使用率为: &#123;&#123; $value &#125;&#125;&quot; - alert: k8s-node节点磁盘使用率 expr: (node_filesystem_size_bytes&#123;mountpoint=&quot;/&quot;,job=&quot;k8s-node&quot;&#125; - node_filesystem_avail_bytes&#123;mountpoint=&quot;/&quot;,job=&quot;k8s-node&quot;&#125;) / node_filesystem_size_bytes&#123;mountpoint=&quot;/&quot;,job=&quot;k8s-node&quot;&#125; * 100 &gt; 85 for: 1m labels: team: k8s-node annotations: description: &quot;Node服务器[[ &#123;&#123;$labels.instance&#125;&#125; ]] 的 &#123;&#123;mountpoint&#125;&#125; 磁盘空间使用率超过85%&quot; summary: &quot;磁盘 &#123;&#123;$labels.device&#125;&#125; 当前使用率为: &#123;&#123; $value &#125;&#125;&quot; - alert: k8s-node节点内存使用率 expr: (node_memory_MemTotal_bytes&#123;job=&quot;k8s-node&quot;&#125; - (node_memory_Buffers_bytes&#123;job=&quot;k8s-node&quot;&#125; + node_memory_Cached_bytes&#123;job=&quot;k8s-node&quot;&#125; + node_memory_MemFree_bytes&#123;job=&quot;k8s-node&quot;&#125;)) / node_memory_MemTotal_bytes&#123;job=&quot;k8s-node&quot;&#125; * 100 for: 1m labels: team: k8s-node annotations: description: &quot;Node服务器[[ &#123;&#123;$labels.instance&#125;&#125; ]] 内存使用率超过95%&quot; summary: &quot;&#123;&#123;$labels.instance&#125;&#125; 当前内存使用率为: &#123;&#123; $value &#125;&#125;&quot; ############ Pod 监控 ############ - alert: 监控k8s的pod状态异常 expr: up&#123;kubernetes_namespace=&quot;monitor&quot;&#125; != 1 for: 3m labels: team: &quot;kube-state-metrics&quot; annotations: description: &quot;&#123;&#123;$labels.kubernetes_namespace&#125;&#125; 内的 pod 状态有变动&quot; summary: &quot;此 Pod 用于获取 k8s 监控数据, 绑定在一个节点上&quot; - alert: 应用的 pod 状态有变动 expr: kube_pod_container_status_ready&#123;namespace=&quot;product&quot;&#125; != 1 for: 3m labels: status: &quot;product 命名空间内的 pod &#123;&#123;$labels.pod&#125;&#125;有变动&quot; annotations: description: &quot;Deployment &#123;&#123;$labels.container&#125;&#125; 内的 pod 状态有变动&quot; summary: &quot;可能是重启或者在升级版本,如果频繁重启,请跟踪排查问题&quot; - alert: 以下应用的 pod 重启次数已经超过15,请查看原因 expr: kube_pod_container_status_restarts_total&#123;namespace=&quot;product&quot;&#125; &gt; 15 for: 3m labels: status: &quot;product 命名空间内的 pod &#123;&#123;$labels.pod&#125;&#125; 重启次数太多&quot; annotations: description: &quot;Deployment &#123;&#123;$labels.container&#125;&#125; 内的 pod 重启次数太多&quot; summary: &quot;重启次数太多,可能是因为 pod 内应用有问题&quot; ########### Java 监控 ############ - alert: jvm线程数过高 expr: jvm_threads_current&#123;job=&quot;tomcat-pods&quot;&#125;&gt;2000 for: 1m labels: status: &quot;空间内 jvm 的变动情况&quot; annotations: description: &quot;&#123;&#123;$labels.kubernetes_pod_name&#125;&#125;: Jvm线程数过高&quot; summary: &apos;&#123;&#123; $labels.kubernetes_pod_name &#125;&#125; : 当前你线程值为: &#123;&#123; $value &#125;&#125;&apos; [root@prometheus]# cat prometheus.deploy.yml ---apiVersion: apps/v1beta2kind: Deploymentmetadata: labels: name: prometheus-deployment name: prometheus namespace: monitorspec: replicas: 1 selector: matchLabels: app: prometheus template: metadata: labels: app: prometheus spec: containers: - image: prom/prometheus:v2.6.0 name: prometheus command: - &quot;/bin/prometheus&quot; args: - &quot;--config.file=/etc/prometheus/prometheus.yml&quot; - &quot;--storage.tsdb.path=/home/prometheus&quot; - &quot;--storage.tsdb.retention=168h&quot; - &quot;--web.enable-lifecycle&quot; ports: - containerPort: 9090 protocol: TCP volumeMounts: - mountPath: &quot;/home/prometheus&quot; name: data - mountPath: &quot;/etc/prometheus&quot; name: config-volume - mountPath: &quot;/etc/localtime&quot; readOnly: false name: localtime resources: requests: cpu: 100m memory: 2048Mi limits: cpu: 500m memory: 3180Mi serviceAccountName: prometheus nodeSelector: nodetype: prometheus volumes: - name: data hostPath: path: &quot;/opt/prometheus/data&quot; - name: config-volume configMap: name: prometheus-config - name: localtime hostPath: path: &quot;/etc/localtime&quot; type: File [root@prometheus]# cat prometheus.svc.yml ---kind: ServiceapiVersion: v1metadata: labels: app: prometheus name: prometheus namespace: monitorspec: type: NodePort ports: - port: 9090 targetPort: 9090 nodePort: 30003 selector: app: prometheus [root@prometheus]#kubectl create -f configmap.yaml[root@prometheus]#kubectl create -f prometheus.deploy.yml[root@prometheus]#kubectl create -f prometheus.svc.yml注：需要在本地创建/opt/prometheus/data作为prometheus数据路径，另需要给data目录赋予777权限 热重读配置文件congfigmap有热重启功能，这样每次改完配置文件都不需要重启prometheus的pod来重读配置了 123456789- &quot;--web.enable-lifecycle&quot;在prometheus.deploy.yml的配置文件里面加上这段话就可以了[root@prometheus]# cat reload-prometheus.sh #!/bin/bashkubectl apply -f configmap.yamlsleep 60curl -XPOST http://192.168.50.60:30003/-/reload可以写个脚本，每次修改完配置文件的配置之后，执行一下脚本就可以同步生效了！ 安装kube-state-metrics123[root@prometheus]# git clone https://github.com/kubernetes/kube-state-metrics.git之后把默认的命名空间改成monitor，进入kube-state-metrics目录[root@prometheus]#kubectl create -f ./ 安装grafana12345678910111213141516创建grafana的数据目录mkdir /opt/grafana/data启动脚本[root@grafana]# cat start_grafana.sh #!/bin/bashdocker stop `docker ps -a |awk &apos;/grafana/&#123;print $1&#125;&apos;`docker rm `docker ps -a |awk &apos;/grafana/&#123;print $1&#125;&apos;`docker run -d \ --name=grafana \ --restart=always \ -p 3000:3000 \ -m 4096m \ -v /opt/grafana/data:/var/lib/grafana \ -v /opt/grafana/log:/var/log/grafana \ grafana/grafana:5.4.3 1、安装完之后，需要添加source，source直接点prometheus，链接就是http://192.168.50.60:30003之前创建的prometheus界面 2、添加模板dashboad（列出几个常用的） 点import导入，有俩种方式，直接填官网模板，或者导入json https://grafana.com/dashboards/9276 node的cpu、内存等 https://grafana.com/dashboards/3146 pod https://grafana.com/dashboards/8588 deployment 安装alertmanager创建配置文件、目录1234567891011121314151617181920212223242526272829303132创建alert数据目录mkdir /opt/alert/data注意：需要alertmanager.yml配置，此配置钉钉和邮件可同时放松[root@docker60 alert]# cat alertmanager.yml global: resolve_timeout: 5mroute: group_by: [&apos;alertname&apos;] group_wait: 10s group_interval: 10s repeat_interval: 6m receiver: defaultreceivers:- name: &apos;default&apos; email_configs: - to: &quot;&quot; send_resolved: true from: &quot;&quot; smarthost: &quot;smtp.xxx.com:25&quot; auth_username: &quot;&quot; auth_password: &quot;&quot; webhook_configs: - url: &apos;http://192.168.50.60:8060/dingtalk/ops_dingding/send&apos; send_resolved: trueinhibit_rules: - source_match: severity: &apos;critical&apos; target_match: severity: &apos;warning&apos; equal: [&apos;alertname&apos;] 启动脚本1234567891011121314[root@alert]# cat start_alert.sh#!/bin/bashdocker stop `docker ps -a |awk &apos;/alertmanager/&#123;print $1&#125;&apos;`docker rm `docker ps -a |awk &apos;/alertmanager/&#123;print $1&#125;&apos;`docker run -d \ --name alertmanager \ --restart=always \ -p 9093:9093 \ -v /etc/localtime:/etc/localtime:ro \ -v /opt/alert/alertmanager.yml:/etc/alertmanager/alertmanager.yml \ -v /opt/alert/data:/alertmanager \ prom/alertmanager:v0.15.3 安装dingding插件1234567891011121、安装go （这里就不叙述了）2、假设go的路径是/usr/local/gomkdir -pv /usr/local/go/src/github.com/timonwong3、下载dingding插件git clone https://github.com/timonwong/prometheus-webhook-dingtalk.git4、添加dingding机器人在dingding群里面添加即可5、启动dingding[root@alert]# cat start_dingding.sh cd /usr/local/go/src/github.com/timonwong/prometheus-webhook-dingtalkkill -9 `ps -ef | grep prometheus-webhook-dingtalk | grep -v grep | awk &apos;&#123;print $2&#125;&apos;`nohup ./prometheus-webhook-dingtalk --ding.profile=&quot;ops_dingding=https://oapi.dingtalk.com/robot/send?access_token=xxxx&quot; 2&gt;&amp;1 1&gt;dingding.log &amp; 企业微信报警123456789101112131415161718192021222324252627282930313233注册企业微信，添加应用即可；[root@node107 alert]# cat alertmanager.ymlglobal: resolve_timeout: 5mroute: group_by: [&apos;alertname&apos;] group_wait: 10s group_interval: 10s repeat_interval: 6m receiver: defaultreceivers:- name: &apos;default&apos; email_configs: - to: &quot;xxx&quot; send_resolved: true from: &quot;xxx&quot; smarthost: &quot;xxxx:25&quot; auth_username: &quot;xxxxx&quot; auth_password: &quot;xxxx&quot; wechat_configs: - corp_id: &apos;xxxxx&apos; ##企业id to_party: &apos;2&apos; ## 看通讯录部门那编号是几 agent_id: &apos;1000003&apos; api_secret: &apos;xxxxxxx&apos; send_resolved: trueinhibit_rules: - source_match: severity: &apos;critical&apos; target_match: severity: &apos;warning&apos; equal: [&apos;alertname&apos;]]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[jira-安装及破解]]></title>
    <url>%2Fposts%2F6924c90a.html</url>
    <content type="text"><![CDATA[安装jiraJIRA是Atlassian公司出品的项目与事务跟踪工具，被广泛应用于缺陷跟踪、客户服务、需求收集、流程审批、任务跟踪、项目跟踪和敏捷管理等工作领域。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263下载包：wget https://product-downloads.atlassian.com/software/jira/downloads/atlassian-jira-software-7.13.0-x64.bin[root@YZSJHL82-204 ~]# chmod +x atlassian-jira-software-7.13.0-x64.bin[root@YZSJHL82-204 ~]# ./atlassian-jira-software-7.13.0-x64.binUnpacking JRE ...Starting Installer ...十月 23, 2018 4:38:25 下午 java.util.prefs.FileSystemPreferences$1 run信息: Created user preferences directory.十月 23, 2018 4:38:25 下午 java.util.prefs.FileSystemPreferences$2 run信息: Created system preferences directory in java.home.This will install JIRA Software 7.4.1 on your computer.OK [o, Enter], Cancel [c]o #按o安装Choose the appropriate installation or upgrade option.Please choose one of the following:Express Install (use default settings) [1], Custom Install (recommended for advanced users) [2, Enter], Upgrade an existing JIRA installation [3]2 #2为自定义安装Where should JIRA Software be installed?[/opt/atlassian/jira]/usr/local/atlassina/jira #自定义安装目录Default location for JIRA Software data[/var/atlassian/application-data/jira]/usr/local/atlassina/jira_data #自定义数据目录Configure which ports JIRA Software will use.JIRA requires two TCP ports that are not being used by any otherapplications on this machine. The HTTP port is where you will access JIRAthrough your browser. The Control port is used to startup and shutdown JIRA.Use default ports (HTTP: 8080, Control: 8005) - Recommended [1, Enter], Set custom value for HTTP and Control ports [2]2 #2为自定义端口HTTP Port Number[8080] #8080为默认端口8050 #http连接端口Control Port Number[8005]8040 #控制端口JIRA can be run in the background.You may choose to run JIRA as a service, which means it will startautomatically whenever the computer restarts.Install JIRA as Service?Yes [y, Enter], No [n]y #是否开机自启Details on where JIRA Software will be installed and the settings that will be used.Installation Directory: /usr/local/atlassina/jira Home Directory: /usr/local/atlassina/jira_data HTTP Port: 8050 RMI Port: 8040 Install as service: Yes Install [i, Enter], Exit [e]i #确认已选配置Extracting files ...Please wait a few moments while JIRA Software is configured.Installation of JIRA Software 7.4.1 is completeStart JIRA Software 7.4.1 now?Yes [y, Enter], No [n]y #启动Please wait a few moments while JIRA Software starts up.Launching JIRA Software ...Installation of JIRA Software 7.4.1 is completeYour installation of JIRA Software 7.4.1 is now ready and can be accessedvia your browser.JIRA Software 7.4.1 can be accessed at http://localhost:8050Finishing installation ... 浏览器访问jira，地址为：http://IP:8050 请自行修改IP和端口。如果可以访问，说明安装成功。 配置数据库及密码在mySQL上创建用户及库做授权123create database jira_new;grant all privileges on *.* to jira@&apos;10.4.82.204&apos; identified by &apos;jira&apos;;flush privileges; 在授权完用户我们不可以马上填写信息，需要添加MySQL的一个jra包，否则下一步会提示找不到mysql的驱动 wget https://dev.mysql.com/get/Downloads/Connector-J/mysql-connector-java-5.1.46.zip1234567停止jira[root@YZSJHL82-204 ~]# /etc/init.d/jira stop上传软件包[root@YZSJHL82-204 ~]# cp mysql-connector-java-5.1.46-bin.jar /opt/atlassian/jira/atlassian-jira/WEB-INF/lib/启动jira[root@YZSJHL82-204 ~]# /etc/init.d/jira start注意防火墙 安装完数据库插件即可下一步: 设置jira主题 因为第一次安装，我们需要去jira官网注册用户，获取授权码 (免费30天，安装后更换破解即可) 保存好服务器ID，进入atlassian官网获取试用许可证，下边附上注册地址： 注册官网：https://my.atlassian.com 或使用以下地址： https://id.atlassian.com/signup?application=mac&amp;continue=https://my.atlassian.com 登陆账号后，选择New Evaluation License 设置管理员用户:官网注册的账号只可以免费试用30天，所以当我们安装完需要尽快进行破解 破解jirahttps://download.csdn.net/download/lbwahoo/100308071234567停止jira[root@YZSJHL82-204 ~]# /etc/init.d/jira stop进入安装目录下的atlassian-jira/WEB-INF/lib/目录下，用破解包atlassian-extras-3.2.jar替换原来的包。并将mysql连接驱动复制到此目录下。[root@YZSJHL82-204 ~]# cp atlassian-extras-3.2.jar /opt/atlassian/jira/atlassian-jira/WEB-INF/lib/启动jira[root@YZSJHL82-204 ~]# /etc/init.d/jira start注意防火墙 配置数据库连接地址12/var/atlassian/application-data/jira/dbconfig.xml#此路径为默认路径]]></content>
      <categories>
        <category>版本管理工具</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[python删除mongo表]]></title>
    <url>%2Fposts%2F7c0c3da0.html</url>
    <content type="text"><![CDATA[PyMongoPython 要连接 MongoDB 需要 MongoDB 驱动，这里我们使用 PyMongo 驱动来连接。 pip 安装pip 是一个通用的 Python 包管理工具，提供了对 Python 包的查找、下载、安装、卸载的功能。 安装 pymongo: 1$ python3 -m pip3 install pymongo 也可以指定安装的版本: 1$ python3 -m pip3 install pymongo==3.5.1 更新 pymongo 命令： 1$ python3 -m pip3 install --upgrade pymongo easy_install 安装旧版的 Python 可以使用 easy_install 来安装，easy_install 也是 Python 包管理工具。 1$ python -m easy_install pymongo 更新 pymongo 命令： 1$ python -m easy_install -U pymongo 创建数据库创建数据库需要使用 MongoClient 对象，并且指定连接的 URL 地址和要创建的数据库名。 如下实例中，我们创建的数据库 aa : 123456#!/usr/bin/python3 import pymongo myclient = pymongo.MongoClient(&quot;mongodb://localhost:27017/&quot;)mydb = myclient[&quot;aa&quot;] 删除表12345678910111213141516171819202122232425262728293031323334#!/usr/bin/env python#-*- coding: utf-8 -*-from pymongo import MongoClientfrom datetime import datetimedef delete(year,month,day): try: client = MongoClient(&apos;mongodb://192.168.50.223:27017,192.168.50.224:27017,192.168.50.225:27017&apos;) db_auth = client.admin db_auth.authenticate(&quot;root&quot;, &quot;passwd&quot;) db = client.gag_bill old_count = db.billInfo.count() print (&quot;old_count = %d&quot; % (old_count)) db.billInfo.remove(&#123;&quot;cTimeStamp&quot;:&#123;&quot;$lte&quot;:datetime(year,month,day,0,0,0,000)&#125;&#125;) new_count = db.billInfo.count() client.close() print (&quot;del_data = %d&quot; %(old_count-new_count)) print (&quot;new_count = %d&quot; % (new_count)) except Exception as e: print (e)if __name__ == &apos;__main__&apos;: starttime = datetime.now() print (&quot;start_time = %s&quot; % (starttime)) year = starttime.year month = starttime.month day = starttime.day-4 delete(year,month,day) endtime = datetime.now() print (&quot;end_time = %s&quot; % (endtime)) runtime = (endtime - starttime).seconds print (&quot;run_time = %d seconds&quot; % (runtime))]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[mongo副本集配置及一些常用命令]]></title>
    <url>%2Fposts%2F24c2f149.html</url>
    <content type="text"><![CDATA[在每台机器都配置下mongo配置文件123456789101112[root@mangodb1 conf]# cat mongod.conf dbpath= /data/mongodb/data/logpath=/data/mongodb/logs/mongod.loglogappend=truefork=truemaxConns=2000bind_ip=127.0.0.1,10.92.160.5（IP或者主机名）directoryperdb=true#auth=truepidfilepath=/data/mongodb/logs/mongod.pidreplSet = rep#keyFile = /data/mongodb/conf/mongokey 配置mongo副本集1234config = &#123; _id:&quot;rep&quot;,members:[&#123;_id:0,host:&quot;10.92.160.5:27017&quot;&#125;,&#123;_id:1,host:&quot;10.92.160.6:27017&quot;&#125;,&#123;_id:2,host:&quot;10.92.160.7:27017&quot;&#125;]&#125;rs.initiate(config);rs.status(); （查看集群状态的） 常用命令基本命令1234show dbs 看库use 库db.setSlaveOk()show tables 看表 创建admin用户12use admindb.addUser(&quot;root&quot;,&quot;123456&quot;) 导出表加个-c1/data/mongodb/bin/mongoexport -uroot -p123456 --authenticationDatabase admin -d gag_shop -c organizationManagerAuthorities -o organizationManagerAuthorities.json 导入1/data/mongodb/bin/mongoimport -uroot -p123456 --authenticationDatabase admin -d open /root/userInterfaceAuthority.json 查表某个字段信息12db.表名字.findOne(&#123;&#125;)db.terminalMonitorInfo.findOne(&#123;&quot;_id&quot; : &quot;086273F59379&quot;&#125;) 清除日志123db.runCommand( &#123; dropDatabase: 1 &#125; ) 清楚日志，需谨慎，必须得进指定的库里面或者echo &quot;db.runCommand(&#123;dropDatabase:1&#125;)&quot; | /home/mongodb/bin/mongo -uprivate -pPrivate 127.0.0.1:27017/gag_log 导出命令1/data/server/mongodb/bin/mongoexport -uroot -pNTA3NAa579 --authenticationDatabase admin -d gag_base -c sysAuthority -q &quot;&#123;&quot;_id&quot; : /new_pro/&#125;&quot; -o new_pro.txt 导出命令]]></content>
      <categories>
        <category>中间件</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s的pv与pvc]]></title>
    <url>%2Fposts%2Fdfsfa87w.html</url>
    <content type="text"><![CDATA[概念PV 的全称是：PersistentVolume（持久化卷），是对底层的共享存储的一种抽象，PV 由管理员进行创建和配置，它和具体的底层的共享存储技术的实现方式有关，比如 Ceph、GlusterFS、NFS 等，都是通过插件机制完成与共享存储的对接。 PVC 的全称是：PersistentVolumeClaim（持久化卷声明），PVC 是用户存储的一种声明，PVC 和 Pod 比较类似，Pod 消耗的是节点，PVC 消耗的是 PV 资源，Pod 可以请求 CPU 和内存，而 PVC 可以请求特定的存储空间和访问模式。对于真正使用存储的用户不需要关心底层的存储实现细节，只需要直接使用 PVC 即可。 但是通过 PVC 请求到一定的存储空间也很有可能不足以满足应用对于存储设备的各种需求，而且不同的应用程序对于存储性能的要求可能也不尽相同，比如读写速度、并发性能等，为了解决这一问题，Kubernetes 又为我们引入了一个新的资源对象：StorageClass，通过 StorageClass 的定义，管理员可以将存储资源定义为某种类型的资源，比如快速存储、慢速存储等，用户根据 StorageClass 的描述就可以非常直观的知道各种存储资源的具体特性了，这样就可以根据应用的特性去申请合适的存储资源了。 NFSserver12345678910111213yum -y install nfs-utils rpcbindmkdir -pv /data/k8scd /data/k8s/chmod 755 /data/k8s/vim /etc/exports/data/k8s *(rw,sync,no_root_squash)systemctl start rpcbind.servicesystemctl status rpcbindsystemctl start nfs.servicesystemctl status nfs client1234yum -y install nfs-utils rpcbindshowmount -e 192.168.6.101mount -t nfs 192.168.6.101:/data/k8s /root/sy/data PVPV 作为存储资源，主要包括存储能力、访问模式、存储类型、回收策略等关键信息，新建一个 PV 对象，使用 nfs 类型的后端存储，1G 的存储空间，访问模式为 ReadWriteOnce，回收策略为 Recyle。 1234567891011121314[root@master101 pv]# cat pv1-demo.yaml apiVersion: v1kind: PersistentVolumemetadata: name: pv1spec: capacity: storage: 1Gi accessModes: - ReadWriteOnce persistentVolumeReclaimPolicy: Recycle nfs: path: /data/k8s server: 192.168.6.101 12345[root@master101 pv]#kubectl create -f pv1-demo.yaml[root@master101 pv]# kubectl get pvNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEpv1 1Gi RWO Recycle Available 4s Capacity（存储能力）一般来说，一个 PV 对象都要指定一个存储能力，通过 PV 的 capacity属性来设置的，目前只支持存储空间的设置，就是我们这里的 storage=1Gi，不过未来可能会加入 IOPS、吞吐量等指标的配置。 AccessModes（访问模式）AccessModes 是用来对 PV 进行访问模式的设置，用于描述用户应用对存储资源的访问权限，访问权限包括下面几种方式： ReadWriteOnce（RWO）：读写权限，但是只能被单个节点挂载 ReadOnlyMany（ROX）：只读权限，可以被多个节点挂载 ReadWriteMany（RWX）：读写权限，可以被多个节点挂载 注意：一些 PV 可能支持多种访问模式，但是在挂载的时候只能使用一种访问模式，多种访问模式是不会生效的。 persistentVolumeReclaimPolicy（回收策略）我这里指定的 PV 的回收策略为 Recycle，目前 PV 支持的策略有三种： Retain（保留）- 保留数据，需要管理员手工清理数据 Recycle（回收）- 清除 PV 中的数据，效果相当于执行 rm -rf /thevoluem/* Delete（删除）- 与 PV 相连的后端存储完成 volume 的删除操作，当然这常见于云服务商的存储服务，比如 ASW EBS。 不过需要注意的是，目前只有 NFS 和 HostPath 两种类型支持回收策略。当然一般来说还是设置为 Retain 这种策略保险一点。 状态一个 PV 的生命周期中，可能会处于4中不同的阶段： Available（可用）：表示可用状态，还未被任何 PVC 绑定 Bound（已绑定）：表示 PV 已经被 PVC 绑定 Released（已释放）：PVC 被删除，但是资源还未被集群重新声明 Failed（失败）： 表示该 PV 的自动回收失败 PVC创建不带标签的1234567891011[root@master101 pv]# cat pvc-nfs.yaml kind: PersistentVolumeClaimapiVersion: v1metadata: name: pvc-nfsspec: accessModes: - ReadWriteOnce resources: requests: storage: 1Gi 12345678910111213141516[root@master101 pv]# kubectl get pvNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEpv1 1Gi RWO Recycle Available 8m17s[root@master101 pv]# kubectl create -f pvc-nfs.yaml persistentvolumeclaim/pvc-nfs created[root@master101 pv]# kubectl get pvcNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEpvc-nfs Bound pv1 1Gi RWO 18s[root@master101 pv]# kubectl get pvNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEpv1 1Gi RWO Recycle Bound default/pvc-nfs 9m11s 创建带标签的12345678910111213141516[root@master101 pv]# cat pv2-nfs.yaml apiVersion: v1kind: PersistentVolumemetadata: name: pv2-nfs labels: app: nfsspec: capacity: storage: 2Gi accessModes: - ReadWriteOnce persistentVolumeReclaimPolicy: Recycle nfs: server: 192.168.6.101 path: /data/k8s 123456[root@master101 pv]# kubectl create -f pv2-nfs.yaml persistentvolume/pv2-nfs created[root@master101 pv]# kubectl get pvNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEpv1 1Gi RWO Recycle Bound default/pvc-nfs 14mpv2-nfs 2Gi RWO Recycle Available 3s 1234567891011121314[root@master101 pv]# cat pvc2-nfs.yaml kind: PersistentVolumeClaimapiVersion: v1metadata: name: pvc2-nfsspec: accessModes: - ReadWriteOnce resources: requests: storage: 2Gi selector: matchLabels: app: nfs 12345678910[root@master101 pv]# kubectl create -f pvc2-nfs.yamlpersistentvolumeclaim/pvc2-nfs created[root@master101 pv]# kubectl get pvNAME CAPACITY ACCESS MODES RECLAIM POLICY STATUS CLAIM STORAGECLASS REASON AGEpv1 1Gi RWO Recycle Bound default/pvc-nfs 15mpv2-nfs 2Gi RWO Recycle Bound default/pvc2-nfs 61s[root@master101 pv]# kubectl get pvcNAME STATUS VOLUME CAPACITY ACCESS MODES STORAGECLASS AGEpvc-nfs Bound pv1 1Gi RWO 7m21spvc2-nfs Bound pv2-nfs 2Gi RWO 4s StorageClass创建 Provisioner要使用 StorageClass，我们就得安装对应的自动配置程序，比如我们这里存储后端使用的是 nfs，那么我们就需要使用到一个 nfs-client 的自动配置程序，我们也叫它 Provisioner，这个程序使用我们已经配置好的 nfs 服务器，来自动创建持久卷，也就是自动帮我们创建 PV。 自动创建的 PV 以${namespace}-${pvcName}-${pvName}这样的命名格式创建在 NFS 服务器上的共享数据目录中 而当这个 PV 被回收后会以archieved-${namespace}-${pvcName}-${pvName}这样的命名格式存在 NFS 服务器上。 123456789101112131415161718192021222324252627282930313233[root@master101 pv]# cat nfs-client.yamlkind: DeploymentapiVersion: extensions/v1beta1metadata: name: nfs-client-provisionerspec: replicas: 1 strategy: type: Recreate template: metadata: labels: app: nfs-client-provisioner spec: serviceAccountName: nfs-client-provisioner containers: - name: nfs-client-provisioner image: quay.io/external_storage/nfs-client-provisioner:latest volumeMounts: - name: nfs-client-root mountPath: /persistentvolumes env: - name: PROVISIONER_NAME value: fuseim.pri/ifs - name: NFS_SERVER value: 192.168.6.101 - name: NFS_PATH value: /data/k8s volumes: - name: nfs-client-root nfs: server: 192.168.6.101 path: /data/k8s 1234567891011121314151617181920212223242526272829303132333435363738394041[root@master101 pv]# cat nfs-client-sa.yamlapiVersion: v1kind: ServiceAccountmetadata: name: nfs-client-provisioner---kind: ClusterRoleapiVersion: rbac.authorization.k8s.io/v1metadata: name: nfs-client-provisioner-runnerrules: - apiGroups: [&quot;&quot;] resources: [&quot;persistentvolumes&quot;] verbs: [&quot;get&quot;, &quot;list&quot;, &quot;watch&quot;, &quot;create&quot;, &quot;delete&quot;] - apiGroups: [&quot;&quot;] resources: [&quot;persistentvolumeclaims&quot;] verbs: [&quot;get&quot;, &quot;list&quot;, &quot;watch&quot;, &quot;update&quot;] - apiGroups: [&quot;storage.k8s.io&quot;] resources: [&quot;storageclasses&quot;] verbs: [&quot;get&quot;, &quot;list&quot;, &quot;watch&quot;] - apiGroups: [&quot;&quot;] resources: [&quot;events&quot;] verbs: [&quot;list&quot;, &quot;watch&quot;, &quot;create&quot;, &quot;update&quot;, &quot;patch&quot;] - apiGroups: [&quot;&quot;] resources: [&quot;endpoints&quot;] verbs: [&quot;create&quot;, &quot;delete&quot;, &quot;get&quot;, &quot;list&quot;, &quot;watch&quot;, &quot;patch&quot;, &quot;update&quot;]---kind: ClusterRoleBindingapiVersion: rbac.authorization.k8s.io/v1metadata: name: run-nfs-client-provisionersubjects: - kind: ServiceAccount name: nfs-client-provisioner namespace: defaultroleRef: kind: ClusterRole name: nfs-client-provisioner-runner apiGroup: rbac.authorization.k8s.io 123456[root@master101 pv]# cat nfs-client-class.yaml apiVersion: storage.k8s.io/v1kind: StorageClassmetadata: name: nfs-storageprovisioner: fuseim.pri/ifs # or choose another name, must match deployment&apos;s env PROVISIONER_NAME&apos; 123456789101112131415[root@master101 pv]# kubectl create -f nfs-client.yamldeployment.extensions/nfs-client-provisioner created[root@master101 pv]# kubectl create -f nfs-client-sa.yamlserviceaccount/nfs-client-provisioner createdclusterrole.rbac.authorization.k8s.io/nfs-client-provisioner-runner createdclusterrolebinding.rbac.authorization.k8s.io/run-nfs-client-provisioner created[root@master101 pv]# kubectl create -f nfs-client-class.yamlstorageclass.storage.k8s.io/nfs-storage created[root@master101 pv]# kubectl get podsNAME READY STATUS RESTARTS AGEnfs-client-provisioner-8c7fc4457-d8v6z 0/1 ContainerCreating 0 10srecycler-for-pv2-nfs 0/1 ContainerCreating 0 10m[root@master101 pv]# kubectl get storageclassNAME PROVISIONER AGEnfs-storage fuseim.pri/ifs 13s 创建pvc俩种方法添加annotations属性123456789101112kind: PersistentVolumeClaimapiVersion: v1metadata: name: test-pvc annotations: volume.beta.kubernetes.io/storage-class: &quot;nfs-storage&quot;spec: accessModes: - ReadWriteMany resources: requests: storage: 1Mi 设置默认存储1kubectl patch storageclass nfs-storage -p &apos;&#123;&quot;metadata&quot;: &#123;&quot;annotations&quot;:&#123;&quot;storageclass.kubernetes.io/is-default-class&quot;:&quot;true&quot;&#125;&#125;&#125;&apos;]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s拉取Harbor私有镜像]]></title>
    <url>%2Fposts%2F5trce44e.html</url>
    <content type="text"><![CDATA[secret介绍1Secret是用来保存小片敏感数据的k8s资源，例如密码，token，或者秘钥。这类数据当然也可以存放在Pod或者镜像中，但是放在Secret中是为了更方便的控制如何使用数据，并减少暴露的风险。 创建先在服务器上登录 Harbor 仓库 123docker login registry.sy.com输入账号密码 查看登录的秘钥数据 12登录成功后会在当前用户下生成 .docker/config.json 文件cat ~/.docker/config.json 12再对上面的 config.json 进行base64加密cat ~/.docker/config.json |base64 -w 0 创建 secret.yaml 文件 1234567apiVersion: v1kind: Secretmetadata: name: logintype: kubernetes.io/dockerconfigjsondata: .dockerconfigjson: ewoJImF1dGhzIjogewoJCSJ0Y2xvdWQuaHViIjogewoJCQkiYXV0aCI6ICJZV1J0YVc0NlNHRnlZbTl5TVRJek5EVT0iCgkJfQoJfSwKCSJIdHRwSGVhZGVycyI6IHsKCQkiVXNlci1BZ2VudCI6ICJEb2NrZXItQ2xpZW50LzE3LjA5LjAtY2UgKGxpbnV4KSIKCX0KfQ== 1kubectl create -f secret.yaml]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s的亲和性]]></title>
    <url>%2Fposts%2Foigg664a.html</url>
    <content type="text"><![CDATA[摘要一般情况下我们部署的 POD 是通过集群自动调度选择某个节点的，默认情况下调度器考虑的是资源足够，并且负载尽量平均，但是有的时候我们需要能够更加细粒度的去控制 POD 的调度，比如我们内部的一些服务 gitlab 之类的也是跑在Kubernetes集群上的，我们就不希望对外的一些服务和内部的服务跑在同一个节点上了，害怕内部服务对外部的服务产生影响；有的时候呢我们两个服务直接交流比较频繁，又希望能够将这两个服务的 POD 调度到同样的节点上。这就需要用到 Kubernetes 里面的一个概念：亲和性，亲和性主要分为两类：nodeAffinity和podAffinity。 nodeSelector我们知道label是kubernetes中一个非常重要的概念，用户可以非常灵活的利用 label 来管理集群中的资源，比如最常见的一个就是 service 通过匹配 label 去选择 POD 的。而 POD 的调度也可以根据节点的 label 进行特定的部署。 我们可以通过下面的命令查看我们的 node 的 label： 1234[root@node1 ~]# kubectl get nodes --show-labelsNAME STATUS ROLES AGE VERSION LABELSnode1 Ready &lt;none&gt; 10d v1.14.2 beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/arch=amd64,kubernetes.io/hostname=node1,kubernetes.io/os=linuxnode2 Ready &lt;none&gt; 10d v1.14.2 beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/arch=amd64,kubernetes.io/hostname=node2,kubernetes.io/os=linux 123456[root@node1 ~]# kubectl label nodes node1 source=synode/node1 labeled[root@node1 ~]# kubectl get nodes --show-labels NAME STATUS ROLES AGE VERSION LABELSnode1 Ready &lt;none&gt; 10d v1.14.2 beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/arch=amd64,kubernetes.io/hostname=node1,kubernetes.io/os=linux,source=synode2 Ready &lt;none&gt; 10d v1.14.2 beta.kubernetes.io/arch=amd64,beta.kubernetes.io/os=linux,kubernetes.io/arch=amd64,kubernetes.io/hostname=node2,kubernetes.io/os=linux 我们可以通过上面的--show-labels参数可以查看上述标签是否生效。当 node 被打上了相关标签后，在调度的时候就可以使用这些标签了，只需要在 POD 的 spec 字段中添加nodeSelector字段，里面是我们需要被调度的节点的 label。例如，下面是我们之前的一个默认的 busybox POD 的 YAML 文件： 1234567891011121314apiVersion: v1kind: Podmetadata: labels: app: busybox-pod name: test-busyboxspec: containers: - command: - sleep - &quot;3600&quot; image: busybox imagePullPolicy: Always name: test-busybox 然后我需要让上面的 POD 被调度到140的节点上，那么最简单的方法就是去匹配140上面的 label，如下： 12345678910111213141516apiVersion: v1kind: Podmetadata: labels: app: busybox-pod name: test-busyboxspec: containers: - command: - sleep - &quot;3600&quot; image: busybox imagePullPolicy: Always name: test-busybox nodeSelector: source: sy nodeAffinitynodeAffinity就是节点亲和性，相对应的是Anti-Affinity，就是反亲和性，这种方法比上面的nodeSelector更加灵活，它可以进行一些简单的逻辑组合了，不只是简单的相等匹配。 调度可以分成软策略和硬策略两种方式，软策略就是如果你没有满足调度要求的节点的话，POD 就会忽略这条规则，继续完成调度过程，说白了就是满足条件最好了，没有的话也无所谓了的策略；而硬策略就比较强硬了，如果没有满足条件的节点的话，就不断重试直到满足条件为止，简单说就是你必须满足我的要求，不然我就不干的策略。 nodeAffinity就有两上面两种策略：preferredDuringSchedulingIgnoredDuringExecution和requiredDuringSchedulingIgnoredDuringExecution，前面的就是软策略，后面的就是硬策略。 如下例子：（test-node-affinity.yaml） 123456789101112131415161718192021222324252627apiVersion: v1kind: Podmetadata: name: with-node-affinity labels: app: node-affinity-podspec: containers: - name: with-node-affinity image: nginx affinity: nodeAffinity: requiredDuringSchedulingIgnoredDuringExecution: nodeSelectorTerms: - matchExpressions: - key: kubernetes.io/hostname operator: NotIn values: - node1 preferredDuringSchedulingIgnoredDuringExecution: - weight: 1 preference: matchExpressions: - key: source operator: In values: - sy 上面这个 POD 首先是要求 POD 不能运行在node1这个节点上，如果有个节点满足source=sy的话就优先调度到这个节点上，同样的我们可以使用descirbe命令查看具体的调度情况是否满足我们的要求。这里的匹配逻辑是 label 的值在某个列表中，现在Kubernetes提供的操作符有下面的几种： In：label 的值在某个列表中 NotIn：label 的值不在某个列表中 Gt：label 的值大于某个值 Lt：label 的值小于某个值 Exists：某个 label 存在 DoesNotExist：某个 label 不存在 如果nodeSelectorTerms下面有多个选项的话，满足任何一个条件就可以了；如果matchExpressions有多个选项的话，则必须同时满足这些条件才能正常调度 POD。 podAffinity上面两种方式都是让 POD 去选择节点的，有的时候我们也希望能够根据 POD 之间的关系进行调度，Kubernetes在1.4版本引入的podAffinity概念就可以实现我们这个需求。 和nodeAffinity类似，podAffinity也有requiredDuringSchedulingIgnoredDuringExecution和 preferredDuringSchedulingIgnoredDuringExecution两种调度策略，唯一不同的是如果要使用互斥性，我们需要使用podAntiAffinity字段。 如下例子，我们希望with-pod-affinity和busybox-pod能够就近部署，而不希望和node-affinity-pod部署在同一个拓扑域下面：（test-pod-affinity.yaml） 12345678910111213141516171819202122232425262728293031apiVersion: v1kind: Podmetadata: name: with-pod-affinity labels: app: pod-affinity-podspec: containers: - name: with-pod-affinity image: nginx affinity: podAffinity: requiredDuringSchedulingIgnoredDuringExecution: - labelSelector: matchExpressions: - key: app operator: In values: - busybox-pod topologyKey: kubernetes.io/hostname podAntiAffinity: preferredDuringSchedulingIgnoredDuringExecution: - weight: 1 podAffinityTerm: labelSelector: matchExpressions: - key: app operator: In values: - node-affinity-pod topologyKey: kubernetes.io/hostname 上面这个例子中的 POD 需要调度到某个指定的主机上，至少有一个节点上运行了这样的 POD：这个 POD 有一个app=busybox-pod的 label。podAntiAffinity则是希望最好不要调度到这样的节点：这个节点上运行了某个 POD，而这个 POD 有app=node-affinity-pod的 label。 亲和性/反亲和性调度策略比较如下： 调度策略 匹配标签 操作符 拓扑域支持 调度目标 nodeAffinity 主机 In, NotIn, Exists, DoesNotExist, Gt, Lt 否 指定主机 podAffinity POD In, NotIn, Exists, DoesNotExist 是 POD与指定POD同一拓扑域 podAnitAffinity POD In, NotIn, Exists, DoesNotExist 是 POD与指定POD不在同一拓扑域 污点（Taints）与容忍（tolerations）对于nodeAffinity无论是硬策略还是软策略方式，都是调度 POD 到预期节点上，而Taints恰好与之相反，如果一个节点标记为 Taints ，除非 POD 也被标识为可以容忍污点节点，否则该 Taints 节点不会被调度pod。 比如用户希望把 Master 节点保留给 Kubernetes 系统组件使用，或者把一组具有特殊资源预留给某些 POD，则污点就很有用了，POD 不会再被调度到 taint 标记过的节点 1kubectl taint nodes node1 key=value:NoSchedule 如果仍然希望某个 POD 调度到 taint 节点上，则必须在 Spec 中做出Toleration定义，才能调度到该节点，举例如下： 12345tolerations:- key: &quot;key&quot;operator: &quot;Equal&quot;value: &quot;value&quot;effect: &quot;NoSchedule&quot; effect 共有三个可选项，可按实际需求进行设置： NoSchedule：POD 不会被调度到标记为 taints 节点。 PreferNoSchedule：NoSchedule 的软策略版本。 NoExecute：该选项意味着一旦 Taint 生效，如该节点内正在运行的 POD 没有对应 Tolerate 设置，会直接被逐出。]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s的ConfigMap]]></title>
    <url>%2Fposts%2Fdfjg544e.html</url>
    <content type="text"><![CDATA[介绍我们经常都需要为我们的应用程序配置一些特殊的数据，比如密钥、Token 、数据库连接地址或者其他私密的信息。你的应用可能会使用一些特定的配置文件进行配置，比如settings.py文件，或者我们可以在应用的业务逻辑中读取环境变量或者某些标志来处理配置信息。 当然你可以直接将这些应用配置信息直接硬编码到你的应用程序中去，对于一个小型的应用，这或许是可以接受的，但是，对于一个相对较大的应用程序或者微服务的话，硬编码就会变得难以管理了。比如你现在有10个微服务，都连接了数据库A，如果现在需要更改数据库A的连接地址的话，就需要修改10个地方，显然这是难以忍受的。 当然，我们可以使用环境变量和统一的配置文件来解决这个问题，当我们想改变配置的时候，只需要更改环境变量或者配置文件就可以了，但是对于微服务来说的话，这也是比较麻烦的一件事情，Docker 允许我们在 Dockerfile 中指定环境变量，但是如果我们需要在不同的容器中引用相同的数据呢，如果我们的应用程序是运行在集群上的时候，对于配置主机的环境变量也是难以管理的了 （秘钥用secret） configMap用法configMap应用场景 生成为容器内的环境变量 设置容器的启动命令的启动参数 (需要设置为环境变量） 以Volume的形式挂载为容器内部的文件或目录 configMap创建1ConfigMap以一个或多个key:value的形式保存在Kubernetes系统中供应用使用，既可以用于表示一个变量的值(例如apploglevel=info)，也可以用于表示一个完整配置文件的内容(server.xml=&lt;?xml..&gt;..) ConfigMap创建方式 通过直接在命令行中指定configmap参数创建，即–from-literal 通过指定文件创建，即将一个配置文件创建为一个ConfigMap –from-file=&lt;文件&gt; 通过指定目录创建，即将一个目录下的所有配置文件创建为一个ConfigMap，–from-file=&lt;目录&gt; 事先写好标准的configmap的yaml文件，然后kubectl create -f 创建 –from-literal方式创建创建configMap 1kubectl create configmap nginx-config --from-literal=nginx_port=80 --from-literal=server_name=sy.com 替换 1kubectl create configmap nginx-config --from-literal=nginx_port=8080 -o yaml --dry-run | kubectl replace -f - –from-file方式创建注意Pod使用configMap 使用env方式 当configMap修改时，内部环境变量不会动态改变 使用volumeMount方式 修改configMap环境变量随之变化]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[kubectl在shell中的自动补全]]></title>
    <url>%2Fposts%2F4ddce2e2.html</url>
    <content type="text"><![CDATA[在zsh上设置1source &lt;(kubectl completion zsh) 可以导入到.zshrc中实现自动加载： 1kubectl completion zsh &gt;&gt; ~/.zshrc 键入-n以后，按tab，自动弹出可用的ns： 12➜ admin kubectl -ndefault demo-echo demo-webshell kong kube-public kube-system 在linux上设置1234yum install bash-completionsource /usr/share/bash-completion/bash_completionecho &apos;source &lt;(kubectl completion bash)&apos; &gt;&gt;~/.bashrckubectl completion bash &gt;/etc/bash_completion.d/kubectl 在mas上设置-bash12345brew install bash-completion@2export BASH_COMPLETION_COMPAT_DIR=/usr/local/etc/bash_completion.d[[ -r /usr/local/etc/profile.d/bash_completion.sh ]] &amp;&amp; . /usr/local/etc/profile.d/bash_completion.shecho &apos;source &lt;(kubectl completion bash)&apos; &gt;&gt;~/.bashrckubectl completion bash &gt;/usr/local/etc/bash_completion.d/kubectl]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[k8s基本命令]]></title>
    <url>%2Fposts%2F5b3b5a45.html</url>
    <content type="text"><![CDATA[pods12345$ kubectl get pods -n pro$ kubectl get pods --all-namespaces -n pro$ kubectl get pod aa -o wide -n pro$ kubectl get pod aa -o yaml -n pro$ kubectl describe pod aa -n pro 不用grep列出node上的pod1kubectl get pods --field-selector spec.nodeName=node04 --all-namespaces POD升级和历史列出部署历史记录1$ kubectl rollout history deployment/DEPLOYMENT_NAME 跳转到特定修订版1$ kubectl rollout undo deployment/DEPLOYMENT_NAME --to-revision=N service查看服务1$ kubectl get services 将POD作为服务公开（创建端点）1$ kubectl expose deployment/aa --port=2000 --type=NodePort login1kubectl exec -ti 1 bash -n product log1kubectl logs -f 1 -n product]]></content>
      <categories>
        <category>k8s</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Elasticsearch基础入门]]></title>
    <url>%2Fposts%2F8b341200.html</url>
    <content type="text"><![CDATA[什么是 ElasticSearchElasticSearch是一个基于 Lucene 的搜索服务器。它提供了一个分布式多用户能力的全文搜索引擎，基于 RESTful web 接口。Elasticsearch 是用 Java 开发的，并作为 Apache 许可条款下的开放源码发布，是当前流行的企业级搜索引擎。设计用于云计算中，能够达到实时搜索，稳定，可靠，快速，安装使用方便。 基础概念索引：含有相同属性的文档集合 类型：索引可以定义一个或多个类型，文档必须属于一个类型 文档：可以被索引的基础数据单位 分片：每个索引都有多个分片，每个分片都是 Lucene 索引 备份：拷贝一份分片就完成分片的备份 应用场景 海量数据分析引擎 站内搜索引擎 数据仓库 安装和配置依赖环境JDK 和 NodeJS 安装jdk，和node这里就不写了，源码安装即可！ 下载登陆 elasticSearch 官网下载文件。 安装1234567891011121314151617181920212223242526272829303132333435363738394041#增加 elk 组groupadd elk#增加 elk 用户并附加到 es 组useradd elk -g elk -p elkwget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.2.4.tar.gztar -zxvf elasticsearch-6.2.4.tar.gz -C /data/elkmkdir /data/elk/dataelastic/ulimit -n 65536vim /etc/sysctl.confvm.max_map_count=262144#给目录权限chown -R elk:elk elasticsearch-6.2.4#使用es用户su elk配置文件修改如下： path.data: /data/elk/dataelastic/ cluster.name: gag-elk node.name: gag-elk-node-92 network.host: 192.168.50.92 http.port: 9200 transport.tcp.port: 9300 node.master: true node.data: true discovery.zen.ping.unicast.hosts: [&quot;192.168.50.92&quot;,&quot;192.168.50.93&quot;,&quot;192.168.50.94&quot;] discovery.zen.minimum_master_nodes: 2 gateway.recover_after_nodes: 2 gateway.expected_nodes: 2 gateway.recover_after_time: 1m #检测到副本数不够的时候，1分钟之后才开始同步 xpack.security.enabled: false thread_pool.index.size: 8 thread_pool.index.queue_size: 8000 thread_pool.bulk.size: 8 thread_pool.bulk.queue_size: 8000另俩台机器也这么操作,就可以配置es集群 启动1bin/elasticsearch 或 bin/elasticsearch -d # -d 表示后台启动 下载插件1234567wget https://github.com/shenshengkun/elasticsearch-head/archive/master.zipunzip master.zipcd elasticsearch-head-masternpm installnpm run start也可以用谷歌浏览器，搜索扩展程序ElasticSearch Head，就可以直接使用head插件 Elasticsearch常用命令123curl -XDELETE &apos;http://host.IP.address:9200/logstash-*&apos; 删除索引(后面为索引名称)curl -XGET &apos;host.IP.address:9200/_cat/health?v&amp;pretty&apos; 查看集群状态curl -XGET &apos;host.IP.address:9200/_cat/indices?v&amp;pretty&apos; 查看索引]]></content>
      <categories>
        <category>elk</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[rancher升级]]></title>
    <url>%2Fposts%2Fdf5a27ca.html</url>
    <content type="text"><![CDATA[停掉 rancher先把之前的rancher-server停掉，然后在/etc/hosts上加上ip还有主机名的解析，否则升级完主机不识别 下载1.6.8镜像123docker pull privatecloud.docker.domain/privatecloud3.0/rancher_server:1.6.8在官网下载就有，我这个是自己的私有仓库 运行rancherserver1docker run -d -v /data/rancherdata:/var/lib/mysql --restart=always -p 48080:8080 privatecloud.docker.domain/privatecloud3.0/rancher_server:1.6.8 获取rancher的代理镜像1234567891011121314151617181920docker login privatecloud.docker.domain 从镜像库拉取镜像docker pull privatecloud.docker.domain/privatecloud3.0/rancher_agent:v1.2.6docker pull privatecloud.docker.domain/privatecloud3.0/rancher_network-manager:v0.7.8docker pull privatecloud.docker.domain/privatecloud3.0/rancher_net:v0.11.9docker pull privatecloud.docker.domain/privatecloud3.0/rancher_dns:v0.15.3docker pull privatecloud.docker.domain/privatecloud3.0/rancher_metadata:v0.9.4docker pull privatecloud.docker.domain/privatecloud3.0/rancher_healthcheck:v0.3.3docker pull privatecloud.docker.domain/privatecloud3.0/rancher_scheduler:v0.8.2docker pull privatecloud.docker.domain/privatecloud3.0/rancher_net:holder重命名镜像：docker tag privatecloud.docker.domain/privatecloud3.0/rancher_agent:v1.2.6 rancher/agent:v1.2.6docker tag privatecloud.docker.domain/privatecloud3.0/rancher_network-manager:v0.7.8 rancher/network-manager:v0.7.8docker tag privatecloud.docker.domain/privatecloud3.0/rancher_net:v0.11.9 rancher/net:v0.11.9docker tag privatecloud.docker.domain/privatecloud3.0/rancher_dns:v0.15.3 rancher/dns:v0.15.3docker tag privatecloud.docker.domain/privatecloud3.0/rancher_metadata:v0.9.4 rancher/metadata:v0.9.4docker tag privatecloud.docker.domain/privatecloud3.0/rancher_healthcheck:v0.3.3 rancher/healthcheck:v0.3.3docker tag privatecloud.docker.domain/privatecloud3.0/rancher_scheduler:v0.8.2 rancher/scheduler:v0.8.2docker tag privatecloud.docker.domain/privatecloud3.0/rancher_net:holder rancher/net:holder 升级12进入http://rancherserverip:48080/然后点升级即可]]></content>
      <categories>
        <category>虚拟化</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[python模块-sqlite3基础]]></title>
    <url>%2Fposts%2F8df26b6b.html</url>
    <content type="text"><![CDATA[摘要SQLite，是一款轻型的数据库，是遵守ACID的关系型数据库管理系统，它包含在一个相对小的C库中。它是D.RichardHipp建立的公有领域项目。它的设计目标是嵌入式的，而且目前已经在很多嵌入式产品中使用了它，它占用资源非常的低，在嵌入式设备中，可能只需要几百K的内存就够了。它能够支持Windows/Linux/Unix等等主流的操作系统，同时能够跟很多程序语言相结合，比如 Tcl、C#、PHP、Java、Python等，还有ODBC接口，同样比起Mysql、PostgreSQL这两款开源的世界著名数据库管理系统来讲，它的处理速度比他们都快。SQLite第一个Alpha版本诞生于2000年5月。 至2015年已经有15个年头，SQLite也迎来了一个版本 SQLite 3已经发布。 安装SQLite3 可使用 sqlite3 模块与 Python 进行集成。sqlite3 模块是由 Gerhard Haring 编写的。它提供了一个与 PEP 249 描述的 DB-API 2.0 规范兼容的 SQL 接口。您不需要单独安装该模块，因为 Python 2.5.x 以上版本默认自带了该模块。 为了使用 sqlite3 模块，您首先必须创建一个表示数据库的连接对象，然后您可以有选择地创建光标对象，这将帮助您执行所有的 SQL 语句。 Python sqlite3 模块 API以下是重要的 sqlite3 模块程序，可以满足您在 Python 程序中使用 SQLite 数据库的需求。如果您需要了解更多细节，请查看 Python sqlite3 模块的官方文档。 sqlite3.connect(database [,timeout ,other optional arguments])123该 API 打开一个到 SQLite 数据库文件 database 的链接。您可以使用 &quot;:memory:&quot; 来在 RAM 中打开一个到 database 的数据库连接，而不是在磁盘上打开。如果数据库成功打开，则返回一个连接对象。当一个数据库被多个连接访问，且其中一个修改了数据库，此时 SQLite 数据库被锁定，直到事务提交。timeout 参数表示连接等待锁定的持续时间，直到发生异常断开连接。timeout 参数默认是 5.0（5 秒）。如果给定的数据库名称 filename 不存在，则该调用将创建一个数据库。如果您不想在当前目录中创建数据库，那么您可以指定带有路径的文件名，这样您就能在任意地方创建数据库。 connection.cursor([cursorClass])1该例程创建一个 cursor，将在 Python 数据库编程中用到。该方法接受一个单一的可选的参数 cursorClass。如果提供了该参数，则它必须是一个扩展自 sqlite3.Cursor 的自定义的 cursor 类。 cursor.execute(sql [, optional parameters])12该例程执行一个 SQL 语句。该 SQL 语句可以被参数化（即使用占位符代替 SQL 文本）。sqlite3 模块支持两种类型的占位符：问号和命名占位符（命名样式）。例如：cursor.execute(&quot;insert into people values (?, ?)&quot;, (who, age)) connection.execute(sql [, optional parameters])1该例程是上面执行的由光标（cursor）对象提供的方法的快捷方式，它通过调用光标（cursor）方法创建了一个中间的光标对象，然后通过给定的参数调用光标的 execute 方法。 cursor.executemany(sql, seq_of_parameters)1该例程对 seq_of_parameters 中的所有参数或映射执行一个 SQL 命令。 connection.executemany(sql[, parameters])1该例程是一个由调用光标（cursor）方法创建的中间的光标对象的快捷方式，然后通过给定的参数调用光标的 executemany 方法。 cursor.executescript(sql_script)1该例程一旦接收到脚本，会执行多个 SQL 语句。它首先执行 COMMIT 语句，然后执行作为参数传入的 SQL 脚本。所有的 SQL 语句应该用分号（;）分隔。 connection.executescript(sql_script)1该例程是一个由调用光标（cursor）方法创建的中间的光标对象的快捷方式，然后通过给定的参数调用光标的 executescript 方法。 connection.total_changes()1该例程返回自数据库连接打开以来被修改、插入或删除的数据库总行数。 connection.commit()1该方法提交当前的事务。如果您未调用该方法，那么自您上一次调用 commit() 以来所做的任何动作对其他数据库连接来说是不可见的。 connection.rollback()1该方法回滚自上一次调用 commit() 以来对数据库所做的更改。 connection.close()1该方法关闭数据库连接。请注意，这不会自动调用 commit()。如果您之前未调用 commit() 方法，就直接关闭数据库连接，您所做的所有更改将全部丢失！ cursor.fetchone()1该方法获取查询结果集中的下一行，返回一个单一的序列，当没有更多可用的数据时，则返回 None。 cursor.fetchmany([size=cursor.arraysize])1该方法获取查询结果集中的下一行组，返回一个列表。当没有更多的可用的行时，则返回一个空的列表。该方法尝试获取由 size 参数指定的尽可能多的行。 cursor.fetchall()1该例程获取查询结果集中所有（剩余）的行，返回一个列表。当没有可用的行时，则返回一个空的列表。 操作方式连接数据库下面的 Python 代码显示了如何连接到一个现有的数据库。如果数据库不存在，那么它就会被创建，最后将返回一个数据库对象。 1234567891011#!/usr/bin/pythonimport sqlite3conn = sqlite3.connect(&apos;test.db&apos;)print &quot;Opened database successfully&quot;;在这里，您也可以把数据库名称复制为特定的名称 :memory:，这样就会在 RAM 中创建一个数据库。现在，让我们来运行上面的程序，在当前目录中创建我们的数据库 test.db。您可以根据需要改变路径。保存上面代码到 sqlite.py 文件中，并按如下所示执行。如果数据库成功创建，那么会显示下面所示的消息：$chmod +x sqlite.py$./sqlite.pyOpen database successfully 创建表下面的 Python 代码段将用于在先前创建的数据库中创建一个表： 12345678910111213141516171819#!/usr/bin/pythonimport sqlite3conn = sqlite3.connect(&apos;test.db&apos;)print &quot;Opened database successfully&quot;;conn.execute(&apos;&apos;&apos;CREATE TABLE COMPANY (ID INT PRIMARY KEY NOT NULL, NAME TEXT NOT NULL, AGE INT NOT NULL, ADDRESS CHAR(50), SALARY REAL);&apos;&apos;&apos;)print &quot;Table created successfully&quot;;conn.close()上述程序执行时，它会在 test.db 中创建 COMPANY 表，并显示下面所示的消息：Opened database successfullyTable created successfully INSERT 操作下面的 Python 程序显示了如何在上面创建的 COMPANY 表中创建记录： 12345678910111213141516171819202122232425#!/usr/bin/pythonimport sqlite3conn = sqlite3.connect(&apos;test.db&apos;)print &quot;Opened database successfully&quot;;conn.execute(&quot;INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \ VALUES (1, &apos;Paul&apos;, 32, &apos;California&apos;, 20000.00 )&quot;);conn.execute(&quot;INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \ VALUES (2, &apos;Allen&apos;, 25, &apos;Texas&apos;, 15000.00 )&quot;);conn.execute(&quot;INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \ VALUES (3, &apos;Teddy&apos;, 23, &apos;Norway&apos;, 20000.00 )&quot;);conn.execute(&quot;INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) \ VALUES (4, &apos;Mark&apos;, 25, &apos;Rich-Mond &apos;, 65000.00 )&quot;);conn.commit()print &quot;Records created successfully&quot;;conn.close()上述程序执行时，它会在 COMPANY 表中创建给定记录，并会显示以下两行：Opened database successfullyRecords created successfully SELECT 操作下面的 Python 程序显示了如何从前面创建的 COMPANY 表中获取并显示记录： 123456789101112131415161718192021222324252627282930313233343536373839#!/usr/bin/pythonimport sqlite3conn = sqlite3.connect(&apos;test.db&apos;)print &quot;Opened database successfully&quot;;cursor = conn.execute(&quot;SELECT id, name, address, salary from COMPANY&quot;)for row in cursor: print &quot;ID = &quot;, row[0] print &quot;NAME = &quot;, row[1] print &quot;ADDRESS = &quot;, row[2] print &quot;SALARY = &quot;, row[3], &quot;\n&quot;print &quot;Operation done successfully&quot;;conn.close()上述程序执行时，它会产生以下结果：Opened database successfullyID = 1NAME = PaulADDRESS = CaliforniaSALARY = 20000.0ID = 2NAME = AllenADDRESS = TexasSALARY = 15000.0ID = 3NAME = TeddyADDRESS = NorwaySALARY = 20000.0ID = 4NAME = MarkADDRESS = Rich-MondSALARY = 65000.0Operation done successfully UPDATE 操作下面的 Python 代码显示了如何使用 UPDATE 语句来更新任何记录，然后从 COMPANY 表中获取并显示更新的记录： 1234567891011121314151617181920212223242526272829303132333435363738394041424344#!/usr/bin/pythonimport sqlite3conn = sqlite3.connect(&apos;test.db&apos;)print &quot;Opened database successfully&quot;;conn.execute(&quot;UPDATE COMPANY set SALARY = 25000.00 where ID=1&quot;)conn.commit()print &quot;Total number of rows updated :&quot;, conn.total_changescursor = conn.execute(&quot;SELECT id, name, address, salary from COMPANY&quot;)for row in cursor: print &quot;ID = &quot;, row[0] print &quot;NAME = &quot;, row[1] print &quot;ADDRESS = &quot;, row[2] print &quot;SALARY = &quot;, row[3], &quot;\n&quot;print &quot;Operation done successfully&quot;;conn.close()上述程序执行时，它会产生以下结果：Opened database successfullyTotal number of rows updated : 1ID = 1NAME = PaulADDRESS = CaliforniaSALARY = 25000.0ID = 2NAME = AllenADDRESS = TexasSALARY = 15000.0ID = 3NAME = TeddyADDRESS = NorwaySALARY = 20000.0ID = 4NAME = MarkADDRESS = Rich-MondSALARY = 65000.0Operation done successfully DELETE 操作下面的 Python 代码显示了如何使用 DELETE 语句删除任何记录，然后从 COMPANY 表中获取并显示剩余的记录： 123456789101112131415161718192021222324252627282930313233343536373839#!/usr/bin/pythonimport sqlite3conn = sqlite3.connect(&apos;test.db&apos;)print &quot;Opened database successfully&quot;;conn.execute(&quot;DELETE from COMPANY where ID=2;&quot;)conn.commit()print &quot;Total number of rows deleted :&quot;, conn.total_changescursor = conn.execute(&quot;SELECT id, name, address, salary from COMPANY&quot;)for row in cursor: print &quot;ID = &quot;, row[0] print &quot;NAME = &quot;, row[1] print &quot;ADDRESS = &quot;, row[2] print &quot;SALARY = &quot;, row[3], &quot;\n&quot;print &quot;Operation done successfully&quot;;conn.close()上述程序执行时，它会产生以下结果：Opened database successfullyTotal number of rows deleted : 1ID = 1NAME = PaulADDRESS = CaliforniaSALARY = 20000.0ID = 3NAME = TeddyADDRESS = NorwaySALARY = 20000.0ID = 4NAME = MarkADDRESS = Rich-MondSALARY = 65000.0Operation done successfully]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[python模块-xml、yaml]]></title>
    <url>%2Fposts%2F6f65a2ef.html</url>
    <content type="text"><![CDATA[摘要本文记录一些python中xml和yaml模块 xmlxml是实现不同语言或程序之间进行数据交换的协议，跟json差不多，但json使用起来更简单，不过，古时候，在json还没诞生的黑暗年代，大家只能选择用xml呀，至今很多传统公司如金融行业的很多系统的接口还主要是xml。 xml的格式如下，就是通过&lt;&gt;节点来区别数据结构的: 1234567891011121314151617181920212223&lt;?xml version=&quot;1.0&quot;?&gt;&lt;data&gt; &lt;country name=&quot;Liechtenstein&quot;&gt; &lt;rank updated=&quot;yes&quot;&gt;2&lt;/rank&gt; &lt;year&gt;2008&lt;/year&gt; &lt;gdppc&gt;141100&lt;/gdppc&gt; &lt;neighbor name=&quot;Austria&quot; direction=&quot;E&quot;/&gt; &lt;neighbor name=&quot;Switzerland&quot; direction=&quot;W&quot;/&gt; &lt;/country&gt; &lt;country name=&quot;Singapore&quot;&gt; &lt;rank updated=&quot;yes&quot;&gt;5&lt;/rank&gt; &lt;year&gt;2011&lt;/year&gt; &lt;gdppc&gt;59900&lt;/gdppc&gt; &lt;neighbor name=&quot;Malaysia&quot; direction=&quot;N&quot;/&gt; &lt;/country&gt; &lt;country name=&quot;Panama&quot;&gt; &lt;rank updated=&quot;yes&quot;&gt;69&lt;/rank&gt; &lt;year&gt;2011&lt;/year&gt; &lt;gdppc&gt;13600&lt;/gdppc&gt; &lt;neighbor name=&quot;Costa Rica&quot; direction=&quot;W&quot;/&gt; &lt;neighbor name=&quot;Colombia&quot; direction=&quot;E&quot;/&gt; &lt;/country&gt;&lt;/data&gt; xml协议在各个语言里的都 是支持的，在python中可以用以下模块操作xml： 123# print(root.iter(&apos;year&apos;)) #全文搜索# print(root.find(&apos;country&apos;)) #在root的子节点找，只找一个# print(root.findall(&apos;country&apos;)) #在root的子节点找，找所有 1234567891011121314151617181920212223242526272829303132333435363738import xml.etree.ElementTree as ET #导入模块，名字太长了，把这个模块名重命名为ET tree = ET.parse(&quot;xmltest.xml&quot;) #parse解析，用ET模块下的parse这个方法把xml文件解析开，解析开拿到一个tree,tree就是一个对象root = tree.getroot() #这个对象可以调用方法，getroot就是根的意思print(root.tag) #root这个对象有一个属性tag，tag的值就是根标签的名字#遍历xml文档for child in root: print(&apos;========&gt;&apos;,child.tag,child.attrib,child.attrib[&apos;name&apos;]) for i in child: print(i.tag,i.attrib,i.text) #只遍历year 节点for node in root.iter(&apos;year&apos;): print(node.tag,node.text)#---------------------------------------import xml.etree.ElementTree as ET tree = ET.parse(&quot;xmltest.xml&quot;)root = tree.getroot() #修改for node in root.iter(&apos;year&apos;): new_year=int(node.text)+1 node.text=str(new_year) node.set(&apos;updated&apos;,&apos;yes&apos;) node.set(&apos;version&apos;,&apos;1.0&apos;)tree.write(&apos;test.xml&apos;) #删除nodefor country in root.findall(&apos;country&apos;): rank = int(country.find(&apos;rank&apos;).text) if rank &gt; 50: root.remove(country) tree.write(&apos;output.xml&apos;) 12345678910111213#在country内添加（append）节点year2import xml.etree.ElementTree as ETtree = ET.parse(&quot;a.xml&quot;)root=tree.getroot()for country in root.findall(&apos;country&apos;): for year in country.findall(&apos;year&apos;): if int(year.text) &gt; 2000: year2=ET.Element(&apos;year2&apos;) year2.text=&apos;新年&apos; year2.attrib=&#123;&apos;update&apos;:&apos;yes&apos;&#125; country.append(year2) #往country节点下添加子节点tree.write(&apos;a.xml.swap&apos;) 自己创建xml文件 12345678910111213141516import xml.etree.ElementTree as ET new_xml = ET.Element(&quot;namelist&quot;)name = ET.SubElement(new_xml,&quot;name&quot;,attrib=&#123;&quot;enrolled&quot;:&quot;yes&quot;&#125;)age = ET.SubElement(name,&quot;age&quot;,attrib=&#123;&quot;checked&quot;:&quot;no&quot;&#125;)sex = ET.SubElement(name,&quot;sex&quot;)sex.text = &apos;33&apos;name2 = ET.SubElement(new_xml,&quot;name&quot;,attrib=&#123;&quot;enrolled&quot;:&quot;no&quot;&#125;)age = ET.SubElement(name2,&quot;age&quot;)age.text = &apos;19&apos; et = ET.ElementTree(new_xml) #生成文档对象et.write(&quot;test.xml&quot;, encoding=&quot;utf-8&quot;,xml_declaration=True) ET.dump(new_xml) #打印生成的格式 yaml首先安装yaml模块1pip3 install pyyaml 编写yaml配置文件 yaml_example.yaml12345678910 1 name: junxi 2 age: 18 3 spouse: 4 name: Rui 5 age: 18 6 children: 7 - name: Chen You 8 age: 3 9 - name: Ruo Xi10 age: 2 编写解析yaml文件的python程序 yaml_example.py1234567891 import yaml2 3 f = open(&apos;yaml_example.yaml&apos;)4 content = yaml.load(f)5 print(type(content))6 print(&apos;before modification:&apos;, content)7 content[&apos;age&apos;] = 178 content[&apos;children&apos;][1][&apos;age&apos;] = 19 print(&apos;after modification&apos;, content) 程序输出的结果为: 1231 &lt;type &apos;dict&apos;&gt;2 (&apos;before modification:&apos;, &#123;&apos;age&apos;: 18, &apos;spouse&apos;: &#123;&apos;age&apos;: 18, &apos;name&apos;: &apos;Rui&apos;&#125;, &apos;name&apos;: &apos;junxi&apos;, &apos;children&apos;: [&#123;&apos;age&apos;: 3, &apos;name&apos;: &apos;Chen You&apos;&#125;, &#123;&apos;age&apos;: 2, &apos;name&apos;: &apos;Ruo Xi&apos;&#125;]&#125;)3 (&apos;after modification&apos;, &#123;&apos;age&apos;: 17, &apos;spouse&apos;: &#123;&apos;age&apos;: 18, &apos;name&apos;: &apos;Rui&apos;&#125;, &apos;name&apos;: &apos;junxi&apos;, &apos;children&apos;: [&#123;&apos;age&apos;: 3, &apos;name&apos;: &apos;Chen You&apos;&#125;, &#123;&apos;age&apos;: 1, &apos;name&apos;: &apos;Ruo Xi&apos;&#125;]&#125;)]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[python模块-序列化]]></title>
    <url>%2Fposts%2F79185f44.html</url>
    <content type="text"><![CDATA[摘要本文记录一些python中序列化的模块 序列化之前我们学习过用eval内置方法可以将一个字符串转成python对象，不过，eval方法是有局限性的，对于普通的数据类型，json.loads和eval都能用，但遇到特殊类型的时候，eval就不管用了,所以eval的重点还是通常用来执行一个字符串表达式，并返回表达式的值。 1234import jsonx=&quot;[null,true,false,1]&quot;print(eval(x)) #报错，无法解析null类型，而json就可以print(json.loads(x)) 什么是序列化？我们把对象(变量)从内存中变成可存储或传输的过程称之为序列化，在Python中叫pickling，在其他语言中也被称之为serialization，marshalling，flattening等等，都是一个意思。 为什么要序列化？持久保存状态需知一个软件/程序的执行就在处理一系列状态的变化，在编程语言中，’状态’会以各种各样有结构的数据类型(也可简单的理解为变量)的形式被保存在内存中。 内存是无法永久保存数据的，当程序运行了一段时间，我们断电或者重启程序，内存中关于这个程序的之前一段时间的数据（有结构）都被清空了。 在断电或重启程序之前将程序当前内存中所有的数据都保存下来（保存到文件中），以便于下次程序执行能够从文件中载入之前的数据，然后继续执行，这就是序列化。 具体的来说，你玩使命召唤闯到了第13关，你保存游戏状态，关机走人，下次再玩，还能从上次的位置开始继续闯关。或如，虚拟机状态的挂起等。 跨平台数据交互序列化之后，不仅可以把序列化后的内容写入磁盘，还可以通过网络传输到别的机器上，如果收发的双方约定好实用一种序列化的格式，那么便打破了平台/语言差异化带来的限制，实现了跨平台数据交互。 反过来，把变量内容从序列化的对象重新读到内存里称之为反序列化，即unpickling。 如何序列化之json和pickle： json如果我们要在不同的编程语言之间传递对象，就必须把对象序列化为标准格式，比如XML，但更好的方法是序列化为JSON，因为JSON表示出来就是一个字符串，可以被所有语言读取，也可以方便地存储到磁盘或者通过网络传输。JSON不仅是标准格式，并且比XML更快，而且可以直接在Web页面中读取，非常方便。 JSON表示的对象就是标准的JavaScript语言的对象，JSON和Python内置的数据类型对应如下： 12345678910111213141516import json dic=&#123;&apos;name&apos;:&apos;alvin&apos;,&apos;age&apos;:23,&apos;sex&apos;:&apos;male&apos;&#125;print(type(dic))#&lt;class &apos;dict&apos;&gt; j=json.dumps(dic)print(type(j))#&lt;class &apos;str&apos;&gt; f=open(&apos;序列化对象&apos;,&apos;w&apos;)f.write(j) #-------------------等价于json.dump(dic,f)f.close()#-----------------------------反序列化&lt;br&gt;import jsonf=open(&apos;序列化对象&apos;)data=json.loads(f.read())# 等价于data=json.load(f) 注意点123456789import json#dct=&quot;&#123;&apos;1&apos;:111&#125;&quot;#json 不认单引号#dct=str(&#123;&quot;1&quot;:111&#125;)#报错,因为生成的数据还是单引号:&#123;&apos;one&apos;: 1&#125;dct=&apos;&#123;&quot;1&quot;:&quot;111&quot;&#125;&apos;print(json.loads(dct))#conclusion:# 无论数据是怎样创建的，只要满足json格式，就可以json.loads出来,不一定非要dumps的数据才能loads pickle12345678910111213141516171819202122import pickle dic=&#123;&apos;name&apos;:&apos;alvin&apos;,&apos;age&apos;:23,&apos;sex&apos;:&apos;male&apos;&#125; print(type(dic))#&lt;class &apos;dict&apos;&gt; j=pickle.dumps(dic)print(type(j))#&lt;class &apos;bytes&apos;&gt; f=open(&apos;序列化对象_pickle&apos;,&apos;wb&apos;)#注意是w是写入str,wb是写入bytes,j是&apos;bytes&apos;f.write(j) #-------------------等价于pickle.dump(dic,f) f.close()#-------------------------反序列化import picklef=open(&apos;序列化对象_pickle&apos;,&apos;rb&apos;) data=pickle.loads(f.read())# 等价于data=pickle.load(f) print(data[&apos;age&apos;]) Pickle的问题和所有其他编程语言特有的序列化问题一样，就是它只能用于Python，并且可能不同版本的Python彼此都不兼容，因此，只能用Pickle保存那些不重要的数据，不能成功地反序列化也没关系。 shelveshelve模块比pickle模块简单，只有一个open函数，返回类似字典的对象，可读可写;key必须为字符串，而值可以是python所支持的数据类型 123456789import shelvef=shelve.open(r&apos;sheve.txt&apos;)# f[&apos;stu1_info&apos;]=&#123;&apos;name&apos;:&apos;egon&apos;,&apos;age&apos;:18,&apos;hobby&apos;:[&apos;piao&apos;,&apos;smoking&apos;,&apos;drinking&apos;]&#125;# f[&apos;stu2_info&apos;]=&#123;&apos;name&apos;:&apos;gangdan&apos;,&apos;age&apos;:53&#125;# f[&apos;school_info&apos;]=&#123;&apos;website&apos;:&apos;http://www.pypy.org&apos;,&apos;city&apos;:&apos;beijing&apos;&#125;print(f[&apos;stu1_info&apos;][&apos;hobby&apos;])f.close()]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[python模块-configparser]]></title>
    <url>%2Fposts%2Fcf57e5aa.html</url>
    <content type="text"><![CDATA[摘要本文记录一下python中处理配置文件的模块 ConfigParser用于对特定的配置进行操作，当前模块的名称在 python 3.x 版本中变更为 configparser。 12345678910111213# 注释1; 注释2[section1]k1 = v1k2:v2user=egonage=18is_admin=truesalary=31[section2]k1 = v1 读取1234567891011121314151617181920212223242526272829303132import configparserconfig=configparser.ConfigParser()config.read(&apos;a.cfg&apos;)#查看所有的标题res=config.sections() #[&apos;section1&apos;, &apos;section2&apos;]print(res)#查看标题section1下所有key=value的keyoptions=config.options(&apos;section1&apos;)print(options) #[&apos;k1&apos;, &apos;k2&apos;, &apos;user&apos;, &apos;age&apos;, &apos;is_admin&apos;, &apos;salary&apos;]#查看标题section1下所有key=value的(key,value)格式item_list=config.items(&apos;section1&apos;)print(item_list) #[(&apos;k1&apos;, &apos;v1&apos;), (&apos;k2&apos;, &apos;v2&apos;), (&apos;user&apos;, &apos;egon&apos;), (&apos;age&apos;, &apos;18&apos;), (&apos;is_admin&apos;, &apos;true&apos;), (&apos;salary&apos;, &apos;31&apos;)]#查看标题section1下user的值=&gt;字符串格式val=config.get(&apos;section1&apos;,&apos;user&apos;)print(val) #egon#查看标题section1下age的值=&gt;整数格式val1=config.getint(&apos;section1&apos;,&apos;age&apos;)print(val1) #18#查看标题section1下is_admin的值=&gt;布尔值格式val2=config.getboolean(&apos;section1&apos;,&apos;is_admin&apos;)print(val2) #True#查看标题section1下salary的值=&gt;浮点型格式val3=config.getfloat(&apos;section1&apos;,&apos;salary&apos;)print(val3) #31.0 改写123456789101112131415161718192021222324252627282930import configparserconfig=configparser.ConfigParser()config.read(&apos;a.cfg&apos;,encoding=&apos;utf-8&apos;)#删除整个标题section2config.remove_section(&apos;section2&apos;)#删除标题section1下的某个k1和k2config.remove_option(&apos;section1&apos;,&apos;k1&apos;)config.remove_option(&apos;section1&apos;,&apos;k2&apos;)#判断是否存在某个标题print(config.has_section(&apos;section1&apos;))#判断标题section1下是否有userprint(config.has_option(&apos;section1&apos;,&apos;&apos;))#添加一个标题config.add_section(&apos;egon&apos;)#在标题egon下添加name=egon,age=18的配置config.set(&apos;egon&apos;,&apos;name&apos;,&apos;egon&apos;)config.set(&apos;egon&apos;,&apos;age&apos;,18) #报错,必须是字符串#最后将修改的内容写入文件,完成最终的修改config.write(open(&apos;a.cfg&apos;,&apos;w&apos;)) 例子12345678910111213#类似这样的配置文件，一块一块的分类[DEFAULT]ServerAliveInterval = 45Compression = yesCompressionLevel = 9ForwardX11 = yes [bitbucket.org]User = hg [topsecret.server.com]Port = 50022ForwardX11 = no 1234567891011121314151617#生成类似格式的文件import configparserconfig = configparser.ConfigParser()config[&quot;DEFAULT&quot;] = &#123;&apos;ServerAliveInterval&apos;: &apos;45&apos;, &apos;Compression&apos;: &apos;yes&apos;, &apos;CompressionLevel&apos;: &apos;9&apos;&#125;config[&apos;bitbucket.org&apos;] = &#123;&#125;config[&apos;bitbucket.org&apos;][&apos;User&apos;] = &apos;hg&apos;config[&apos;topsecret.server.com&apos;] = &#123;&#125;topsecret = config[&apos;topsecret.server.com&apos;]topsecret[&apos;Host Port&apos;] = &apos;50022&apos; # mutates the parsertopsecret[&apos;ForwardX11&apos;] = &apos;no&apos; # same hereconfig[&apos;DEFAULT&apos;][&apos;ForwardX11&apos;] = &apos;yes&apos;with open(&apos;example.ini&apos;, &apos;w&apos;) as configfile: config.write(configfile) 1234567891011121314151617#删除（创建一个新文件，并删除bitbucket.org）import configparserconfig = configparser.ConfigParser()config.sections()config.read(&apos;example.ini&apos;)rec = config.remove_section(&quot;bitbucket.org&quot;)#删除该项config.write(open(&quot;example.cfg&quot;,&quot;w&quot;))[DEFAULT]compressionlevel = 9compression = yesserveraliveinterval = 45forwardx11 = yes[topsecret.server.com]host port = 50022forwardx11 = no]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[python模块-执行系统命令]]></title>
    <url>%2Fposts%2Fa58affda.html</url>
    <content type="text"><![CDATA[摘要可以执行shell命令的相关模块和函数有： os.system os.spawn* os.popen* –废弃 popen2.* –废弃 commands.* –废弃，3.x中被移除 subprocess commands123456import commandsresult = commands.getoutput(&apos;cmd&apos;)result = commands.getstatus(&apos;cmd&apos;)result = commands.getstatusoutput(&apos;cmd&apos;)(status, out) = commands.getstatusoutput(&apos;cmd&apos; + &apos; 2&gt;&amp;1&apos;) 以上执行shell命令的相关的模块和函数的功能均在 subprocess 模块中实现，并提供了更丰富的功能。 subprocesscall执行命令，返回状态码 12ret = subprocess.call([&quot;ls&quot;, &quot;-l&quot;], shell=False)ret = subprocess.call(&quot;ls -l&quot;, shell=True) shell = True ，允许 shell 命令是字符串形式 check_call执行命令，如果执行状态码是 0 ，则返回0，否则抛异常 12subprocess.check_call([&quot;ls&quot;, &quot;-l&quot;])subprocess.check_call(&quot;exit 1&quot;, shell=True) check_output执行命令，如果状态码是 0 ，则返回执行结果，否则抛异常 12subprocess.check_output([&quot;echo&quot;, &quot;Hello World!&quot;])subprocess.check_output(&quot;exit 1&quot;, shell=True) subprocess.Popen(…)用于执行复杂的系统命令 参数： args：shell命令，可以是字符串或者序列类型（如：list，元组） bufsize：指定缓冲。0 无缓冲,1 行缓冲,其他 缓冲区大小,负值 系统缓冲 stdin, stdout, stderr：分别表示程序的标准输入、输出、错误句柄 preexec_fn：只在Unix平台下有效，用于指定一个可执行对象（callable object），它将在子进程运行之前被调用 close_sfs：在windows平台下，如果close_fds被设置为True，则新创建的子进程将不会继承父进程的输入、输出、错误管道。所以不能将close_fds设置为True同时重定向子进程的标准输入、输出与错误(stdin, stdout, stderr)。 shell：同上 cwd：用于设置子进程的当前目录 env：用于指定子进程的环境变量。如果env = None，子进程的环境变量将从父进程中继承。 universal_newlines：不同系统的换行符不同，True -&gt; 同意使用 \n startupinfo与createionflags只在windows下有效将被传递给底层的CreateProcess()函数，用于设置子进程的一些属性，如：主窗口的外观，进程的优先级等等 123import subprocessret1 = subprocess.Popen([&quot;mkdir&quot;,&quot;t1&quot;])ret2 = subprocess.Popen(&quot;mkdir t2&quot;, shell=True) 终端输入的命令分为两种： 输入即可得到输出，如：ifconfig 输入进行某环境，依赖再输入，如：python 123import subprocessobj = subprocess.Popen(&quot;mkdir t3&quot;, shell=True, cwd=&apos;/home/dev&apos;,) 12345678910111213141516import subprocessobj = subprocess.Popen([&quot;python&quot;], stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)obj.stdin.write(&apos;print 1 \n &apos;)obj.stdin.write(&apos;print 2 \n &apos;)obj.stdin.write(&apos;print 3 \n &apos;)obj.stdin.write(&apos;print 4 \n &apos;)obj.stdin.close()cmd_out = obj.stdout.read()obj.stdout.close()cmd_error = obj.stderr.read()obj.stderr.close()print cmd_outprint cmd_error 12345678910import subprocessobj = subprocess.Popen([&quot;python&quot;], stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)obj.stdin.write(&apos;print 1 \n &apos;)obj.stdin.write(&apos;print 2 \n &apos;)obj.stdin.write(&apos;print 3 \n &apos;)obj.stdin.write(&apos;print 4 \n &apos;)out_error_list = obj.communicate()print out_error_list 1234567891011121314151617181920212223242526272829303132333435import subprocessobj = subprocess.Popen([&quot;python&quot;], stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)out_error_list = obj.communicate(&apos;print &quot;hello&quot;&apos;)print out_error_listimport subprocess&apos;&apos;&apos;sh-3.2# ls /Users/egon/Desktop |grep txt$mysql.txttt.txt事物.txt&apos;&apos;&apos;res1=subprocess.Popen(&apos;ls /Users/jieli/Desktop&apos;,shell=True,stdout=subprocess.PIPE)res=subprocess.Popen(&apos;grep txt$&apos;,shell=True,stdin=res1.stdout, stdout=subprocess.PIPE)print(res.stdout.read().decode(&apos;utf-8&apos;))#等同于上面,但是上面的优势在于,一个数据流可以和另外一个数据流交互,可以通过爬虫得到结果然后交给grepres1=subprocess.Popen(&apos;ls /Users/jieli/Desktop |grep txt$&apos;,shell=True,stdout=subprocess.PIPE)print(res1.stdout.read().decode(&apos;utf-8&apos;))#windows下:# dir | findstr &apos;test*&apos;# dir | findstr &apos;txt$&apos;import subprocessres1=subprocess.Popen(r&apos;dir C:\Users\Administrator\PycharmProjects\test\函数备课&apos;,shell=True,stdout=subprocess.PIPE)res=subprocess.Popen(&apos;findstr test*&apos;,shell=True,stdin=res1.stdout, stdout=subprocess.PIPE)print(res.stdout.read().decode(&apos;gbk&apos;)) #subprocess使用当前系统默认编码，得到结果为bytes类型，在windows下需要用gbk解码 系统命令例子安装cmdb 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980#!/usr/bin/env python2# -*- coding: utf-8 -*-import osimport subprocessimport argparseimport timedef base(cmd): if subprocess.call(cmd, shell=True): raise Exception(&quot;&#123;&#125; 执行失败&quot;.format(cmd))def install_docker(): base(&quot;sudo yum install -y yum-utils device-mapper-persistent-data lvm2&quot;) base(&quot;sudo yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo&quot;) base(&quot;sudo yum makecache fast&quot;) base(&quot;sudo yum -y install docker-ce&quot;) if(not os.path.exists(&quot;/etc/docker&quot;)): base(&quot;mkdir -p /etc/docker&quot;) with open(&quot;/etc/docker/daemon.json&quot;, &quot;w&quot;) as f: f.write(&apos;&#123;\n &quot;registry-mirrors&quot;: [&quot;https://9f4w4icn.mirror.aliyuncs.com&quot;] \n&#125;&apos;) base(&quot;sudo systemctl daemon-reload&quot;) base(&quot;sudo systemctl start docker&quot;)def create_dir(): if (not os.path.exists(&quot;/var/cmdb/db&quot;)): base(&quot;sudo mkdir -p /var/cmdb/db&quot;) if (not os.path.exists(&quot;/var/cmdb/es&quot;)): base(&quot;sudo mkdir -p /var/cmdb/es&quot;)def run_db_container(): base(&quot;sudo docker run --name cmdb-db -d -e MYSQL_ROOT_PASSWORD=cmdbcmdb -v /var/cmdb/db:/var/lib/mysql mysql:5.7.21&quot;)def run_es_container(): base(&quot;sudo docker run --name cmdb-es -d -v /var/cmdb/es:/usr/share/elasticsearch/data elasticsearch:5.6.8&quot;)def init_db(): base(&quot;sudo docker run -it --rm --link cmdb-db -e DB_HOST=cmdb-db -e ENV=PRO -e DB_PORT=3306 -e DB_USERNAME=root -e DB_PASSWORD=cmdbcmdb -e DB_NAME=cmdb mingmingtang/cmdb init-db&quot;)def run_cmdb_container(site_url, email_host, email_port, email_username, email_password): base(&quot;sudo docker run -d --name cmdb --link cmdb-db --link cmdb-es -p 80:80 -e ENV=PRO -e SITE_URL=&#123;&#125; -e DB_HOST=cmdb-db -e DB_PORT=3306 -e DB_USERNAME=root -e DB_PASSWORD=cmdbcmdb -e DB_NAME=cmdb -e ELASTICSEARCH_HOSTS=cmdb-es -e EMAIL_HOST=&#123;&#125; -e EMAIL_PORT=&#123;&#125; -e EMAIL_USERNAME=&#123;&#125; -e EMAIL_PASSWORD=&#123;&#125; mingmingtang/cmdb start&quot;.format(site_url, email_host, email_port, email_username, email_password))def input_para(help): value = &quot;&quot; while(not value): value = raw_input(help) return valueif __name__ == &apos;__main__&apos;: if(os.geteuid() != 0): raise(&quot;请以root权限运行&quot;) # parser = argparse.ArgumentParser() # parser.add_argument(&quot;--siteurl&quot;, type=str, help=&quot;E.g: http://cmdb.xxx.com, http://172.17.100.1&quot;) # parser.add_argument(&quot;--emailhost&quot;, type=str, help=&quot;E.g: http://cmdb.xxx.com, http://172.17.100.1&quot;) # parser.add_argument(&quot;--emailport&quot;, type=str, help=&quot;E.g: http://cmdb.xxx.com, http://172.17.100.1&quot;) # parser.add_argument(&quot;--emailusername&quot;, type=str, help=&quot;E.g: http://cmdb.xxx.com, http://172.17.100.1&quot;) # parser.add_argument(&quot;--emailpassword&quot;, type=str, help=&quot;E.g: http://cmdb.xxx.com, http://172.17.100.1&quot;) # args = parser.parse_args() # SITE_URL = args.SITE_URL site_url = input_para(&quot;请输入网站域名或IP（http://cmdb.xxx.com）：&quot;) email_host = input_para(&quot;网站邮箱服务器（smtp.163.com）：&quot;) email_port = input_para(&quot;邮箱服务器端口（25）：&quot;) email_username = input_para(&quot;邮箱用户名（cmdb@163.com）：&quot;) email_password = input_para(&quot;邮箱密码|独立授权码（P@ssw0rd）：&quot;) print(&quot;开始安装docker&quot;) install_docker() print(&quot;开始创建目录&quot;) create_dir() print(&quot;开始运行mysql容器&quot;) run_db_container() print(&quot;开始运行elasticsearch容器&quot;) run_es_container() print(&quot;等待数据库启动完成(10s)&quot;) time.sleep(10) print(&quot;开始初始化数据库&quot;) init_db() print(&quot;开始运行cmdb&quot;) run_cmdb_container(site_url, email_host, email_port, email_username, email_password) print(&quot;完成！&quot;)]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[python模块-argparse、optparse]]></title>
    <url>%2Fposts%2F7961baec.html</url>
    <content type="text"><![CDATA[摘要本文记录一些python中optparse和argparse模块的常用方法 optparseoptparse模块主要用来为脚本传递命令参数，采用预先定义好的选项来解析命令行参数。 首先需要引入optparser模块，然后执行初始化，实例化一个OptionParser对象(可以带参，也可以不带参数)，再为命令行添加选项 12345678import optparseusage=&quot;python %prog -H &lt;target host&gt; -p/-P &lt;target ports&gt;&quot; #用于显示帮助信息parser=optparse.OptionParser(usage) #创建对象实例parser.add_option(&apos;-H&apos;,dest=&apos;Host&apos;,type=&apos;string&apos;,help=&apos;target host&apos;) ##需要的命令行参数parser.add_option(&apos;-P&apos;,&apos;-p&apos;,dest=&apos;Ports&apos;,type=&apos;string&apos;,help=&apos;target ports&apos; default=&quot;20,21&quot;) ## -p/-P 都可以(options,args)=parser.parse_args()print(options.Host)print(options.Ports) 12345678910from optparse import OptionParserusage=&quot;show something usefull-- for example: how to use this program&quot;parser = OptionParser(usage) #带参的话会把参数变量的内容作为帮助信息输出parser.add_option(&quot;-f&quot;,&quot;--file&quot;,dest=&quot;filename&quot;,help=&quot;read picture from File&quot;,metavar=&quot;FILE&quot;,action = &quot;store&quot;,type=&quot;string&quot;)parser.add_option(&quot;-s&quot;,&quot;--save&quot;,dest=&quot;save_mold&quot;,help=&quot;save image to file or not&quot;,default = True)(options,args)=parser.parse_args()print options.filenameprint options.save_mold 12345678910各个参数的含义：dest：用于保存输入的临时变量，其值通过options的属性进行访问，存储的内容是dest之前输入的参数，多个参数用逗号分隔type: 用于检查命令行参数传入的参数的数据类型是否符合要求，有 string，int，float 等类型help：用于生成帮助信息default: 给dest的默认值，如果用户没有在命令行参数给dest分配值，则使用默认值action: 用于指导程序在遇到命令行参数时候该如何处理，有三种值可选： store,store_false和store_true,默认值是store store：读取参数，如果参数类型符合type的要求，则将参数值传递给dest变量，作为options的一个属性供使用。 store_true/store_false: 一般作为一个标记使用，分别设置dest变量的值为True和Falsemetavar: 占位字符串，用于在输出帮助信息时，代替当前命令选项的附加参数的值进行输出，只在帮助信息里有用，注意其和default的区别 argparse1234567891011import argparseparser = argparse.ArgumentParser(description=&apos;Process some integers.&apos;)parser.add_argument(&apos;integers&apos;, metavar=&apos;N&apos;, type=int, nargs=&apos;+&apos;, help=&apos;an integer for the accumulator&apos;)parser.add_argument(&apos;--sum&apos;, dest=&apos;accumulate&apos;, action=&apos;store_const&apos;, const=sum, default=max, help=&apos;sum the integers (default: find the max)&apos;)args = parser.parse_args()print(args.accumulate(args.integers)) 1234567891011121314151617181920212223$ python prog.py -husage: prog.py [-h] [--sum] N [N ...]Process some integers.positional arguments: N an integer for the accumulatoroptional arguments: -h, --help show this help message and exit --sum sum the integers (default: find the max)### $ python prog.py 1 2 3 44$ python prog.py 1 2 3 4 --sum10### $ python prog.py a b cusage: prog.py [-h] [--sum] N [N ...]prog.py: error: argument N: invalid int value: &apos;a&apos; 使用步骤12345678910# 导入模块1:import argparse# 创建解析对象2:parser = argparse.ArgumentParser()# 添加参数项3:parser.add_argument()# 解析参数项4:args = parser.parse_args()# 使用5:args.xxx ArgumentParser对象参数解析这部分并非重点内容，只要知道前几个参数的用法即可 12class argparse.ArgumentParser(prog=None, usage=None, description=None, epilog=None, parents=[], formatter_class=argparse.HelpFormatter, prefix_chars=&apos;-&apos;, fromfile_prefix_chars=None, argument_default=None, conflict_handler=&apos;error&apos;, add_help=True, allow_abbrev=True)Create a new ArgumentParser object. All parameters should be passed as keyword arguments. Each parameter has its own more detailed description below, but in short they are: prog - The name of the program (default: sys.argv[0]) usage - The string describing the program usage (default: generated from arguments added to parser) description - Text to display before the argument help (default: none) epilog - Text to display after the argument help (default: none) parents - A list of ArgumentParser objects whose arguments should also be included formatter_class - A class for customizing the help output prefix_chars - The set of characters that prefix optional arguments (default: ‘-‘) fromfile_prefix_chars - The set of characters that prefix files from which additional arguments should be read (default: None) argument_default - The global default value for arguments (default: None) conflict_handler - The strategy for resolving conflicting optionals (usually unnecessary) add_help - Add a -h/–help option to the parser (default: True) allow_abbrev - Allows long options to be abbreviated if the abbreviation is unambiguous. (default: True) progprog参数相当于python中的sys.argv[0]，默认为当前执行脚本的脚本名，可以进行自定义。 1parser = argparse.ArgumentParser(prog=&apos;myprogram&apos;) usageusage参数用来提示参数项使用方式，默认会自动生成，可以进行自定义 1parser = argparse.ArgumentParser(prog=&apos;PROG&apos;, usage=&apos;%(prog)s [options]&apos;) descriptiondescription用来添加帮助菜单中的描述信息，默认为空。 1parser = argparse.ArgumentParser(description=&apos;A foo that bars&apos;) epilogepilog用来添加帮助菜单中的程序结尾描述信息，默认为空。 123parser = argparse.ArgumentParser( description=&apos;A foo that bars&apos;, epilog=&quot;And that&apos;s how you&apos;d foo a bar&quot;) parents有时候，有些参数项可能作为一组通用参数项来分享给不通的程序，而无需重复的来定义这些参数项，这时候就可以用到parents参数，子对象会继承parents的所有参数项。 123456789101112131415# 首先定义一个用来继承的parents，需要关闭add_help参数parent_parser = argparse.ArgumentParser(add_help=False)parent_parser.add_argument(&apos;--parent&apos;, type=int)# 子对象foo_parser = argparse.ArgumentParser(parents=[parent_parser])foo_parser.add_argument(&apos;foo&apos;)foo_parser.parse_args([&apos;--parent&apos;, &apos;2&apos;, &apos;XXX&apos;])Namespace(foo=&apos;XXX&apos;, parent=2)# 子对象bar_parser = argparse.ArgumentParser(parents=[parent_parser])bar_parser.add_argument(&apos;--bar&apos;)bar_parser.parse_args([&apos;--bar&apos;, &apos;YYY&apos;])Namespace(bar=&apos;YYY&apos;, parent=None) formatter_class使用这个参数的几个选项可以把帮助信息中的格式进行修改。 RawDescriptionHelpFormatter定制描述信息缩进格式 123456789101112131415161718192021parser = argparse.ArgumentParser( prog=&apos;PROG&apos;, formatter_class=argparse.RawDescriptionHelpFormatter, description=textwrap.dedent(&apos;&apos;&apos;\ Please do not mess up this text! -------------------------------- I have indented it exactly the way I want it &apos;&apos;&apos;))usage: PROG [-h]Please do not mess up this text!-------------------------------- I have indented it exactly the way I want itoptional arguments: -h, --help show this help message and exit ArgumentDefaultsHelpFormatter自动增加defaults值显示 1234567891011121314parser = argparse.ArgumentParser( prog=&apos;PROG&apos;, formatter_class=argparse.ArgumentDefaultsHelpFormatter)parser.add_argument(&apos;--foo&apos;, type=int, default=42, help=&apos;FOO!&apos;)parser.add_argument(&apos;bar&apos;, nargs=&apos;*&apos;, default=[1, 2, 3], help=&apos;BAR!&apos;)usage: PROG [-h] [--foo FOO] [bar [bar ...]]positional arguments: bar BAR! (default: [1, 2, 3])optional arguments: -h, --help show this help message and exit --foo FOO FOO! (default: 42) MetavarTypeHelpFormatter用参数类型来替代帮助信息 1234567891011121314parser = argparse.ArgumentParser( prog=&apos;PROG&apos;, formatter_class=argparse.MetavarTypeHelpFormatter)parser.add_argument(&apos;--foo&apos;, type=int)parser.add_argument(&apos;bar&apos;, type=float)usage: PROG [-h] [--foo int] floatpositional arguments: floatoptional arguments: -h, --help show this help message and exit --foo int prefix_charsprefix_chars可以定义选项参数的前缀，默认为[-/–]。 123parser = argparse.ArgumentParser(prog=&apos;PROG&apos;, prefix_chars=&apos;-+&apos;)parser.add_argument(&apos;+f&apos;)parser.add_argument(&apos;++bar&apos;) fromfile_prefix_charsfromfile_prefix_chars可以指定文件为添加参数项值。 123456with open(&apos;args.txt&apos;, &apos;w&apos;) as fp: fp.write(&apos;-f\nbar&apos;)parser = argparse.ArgumentParser(fromfile_prefix_chars=&apos;@&apos;)parser.add_argument(&apos;-f&apos;)parser.parse_args([&apos;-f&apos;, &apos;foo&apos;, &apos;@args.txt&apos;])Namespace(f=&apos;bar&apos;) argument_default正常来说给一个参数项设定默认值可以通过add_argument()或者set_defaults()方法来添加，但是只能对每个参数单独制定，但是使用argument_default参数可以给所有没有默认值的参数一个默认值。 1Generally, argument defaults are specified either by passing a default to add_argument() or by calling the set_defaults() methods with a specific set of name-value pairs. Sometimes however, it may be useful to specify a single parser-wide default for arguments. This can be accomplished by passing the argument_default= keyword argument to ArgumentParser. For example, to globally suppress attribute creation on parse_args() calls, we supply argument_default=SUPPRESS: 这个参数没看懂，贴一下官方文档吧 1parser = argparse.ArgumentParser(argument_default=argparse.SUPPRESS) allow_abbrev通常情况，当你传递一个参数项的时候，可以传递一个缩写的参数项，allow_abbrev参数可以关闭缩写参数项（python3）。 12345678910111213parser = argparse.ArgumentParser(prog=&apos;PROG&apos;, allow_abbrev=False)parser.add_argument(&apos;--foobar&apos;, action=&apos;store_true&apos;)parser.add_argument(&apos;--foonley&apos;, action=&apos;store_false&apos;)parser.parse_args([&apos;--foon&apos;])usage: PROG [-h] [--foobar] [--foonley]PROG: error: unrecognized arguments: --foon# 不关闭的情况parser.parse_args([&apos;--foob&apos;])Namespace(foobar=True, foonley=True)parser.parse_args([&apos;--foon&apos;])Namespace(foobar=False, foonley=False) conflict_handler正常来说你指定了一个参数项，是不能在此指定来覆盖已经指定的参数项的，conflict_handler可以开放这个功能。 123456789101112131415161718&gt;&gt;&gt; parser = argparse.ArgumentParser(prog=&apos;PROG&apos;)&gt;&gt;&gt; parser.add_argument(&apos;-f&apos;, &apos;--foo&apos;, help=&apos;old foo help&apos;)&gt;&gt;&gt; parser.add_argument(&apos;--foo&apos;, help=&apos;new foo help&apos;)Traceback (most recent call last): ..ArgumentError: argument --foo: conflicting option string(s): --foo&gt;&gt;&gt; parser = argparse.ArgumentParser(prog=&apos;PROG&apos;, conflict_handler=&apos;resolve&apos;)&gt;&gt;&gt; parser.add_argument(&apos;-f&apos;, &apos;--foo&apos;, help=&apos;old foo help&apos;)&gt;&gt;&gt; parser.add_argument(&apos;--foo&apos;, help=&apos;new foo help&apos;)&gt;&gt;&gt; parser.print_help()usage: PROG [-h] [-f FOO] [--foo FOO]optional arguments: -h, --help show this help message and exit -f FOO old foo help --foo FOO new foo help add_help可以用这个参数来关闭默认的help信息，然后自定义。关闭了之后还是可以用parser.print_help() 来打印帮助信息的。 1parser = argparse.ArgumentParser(prog=&apos;PROG&apos;, add_help=False) add_argument方法参数解析这个才是本文的重点 12ArgumentParser.add_argument(name or flags...[, action][, nargs][, const][, default][, type][, choices][, required][, help][, metavar][, dest])Define how a single command-line argument should be parsed. Each parameter has its own more detailed description below, but in short they are: name or flags - Either a name or a list of option strings, e.g. foo or -f, –foo. action - The basic type of action to be taken when this argument is encountered at the command line. nargs - The number of command-line arguments that should be consumed. const - A constant value required by some action and nargs selections. default - The value produced if the argument is absent from the command line. type - The type to which the command-line argument should be converted. choices - A container of the allowable values for the argument. required - Whether or not the command-line option may be omitted (optionals only). help - A brief description of what the argument does. metavar - A name for the argument in usage messages. dest - The name of the attribute to be added to the object returned by parse_args(). name or flags选项名、参数名、标签。分为两种 带前缀：-f -foo ，参数项 不带前缀：bar，位置变量 12parser.add_argument(&apos;-f&apos;, &apos;--foo&apos;)parser.add_argument(&apos;bar&apos;) actionaction用来定义添加参数项的属性类型。 store默认类型，只是用来存储一个值。 1234&gt;&gt;&gt; parser = argparse.ArgumentParser()&gt;&gt;&gt; parser.add_argument(&apos;--foo&apos;)&gt;&gt;&gt; parser.parse_args(&apos;--foo 1&apos;.split())Namespace(foo=&apos;1&apos;) store_const和const参数一起使用，存储一个常量。 1234&gt;&gt;&gt; parser = argparse.ArgumentParser()&gt;&gt;&gt; parser.add_argument(&apos;--foo&apos;, action=&apos;store_const&apos;, const=42)&gt;&gt;&gt; parser.parse_args([&apos;--foo&apos;])Namespace(foo=42) store_true &amp; store_false存储常量的特殊类型，存储布尔值。 123456&gt;&gt;&gt; parser = argparse.ArgumentParser()&gt;&gt;&gt; parser.add_argument(&apos;--foo&apos;, action=&apos;store_true&apos;)&gt;&gt;&gt; parser.add_argument(&apos;--bar&apos;, action=&apos;store_false&apos;)&gt;&gt;&gt; parser.add_argument(&apos;--baz&apos;, action=&apos;store_false&apos;)&gt;&gt;&gt; parser.parse_args(&apos;--foo --bar&apos;.split())Namespace(foo=True, bar=False, baz=True) append追加属性，参数项可以多次出现，多次值会追加成一个list。 1234&gt;&gt;&gt; parser = argparse.ArgumentParser()&gt;&gt;&gt; parser.add_argument(&apos;--foo&apos;, action=&apos;append&apos;)&gt;&gt;&gt; parser.parse_args(&apos;--foo 1 --foo 2&apos;.split())Namespace(foo=[&apos;1&apos;, &apos;2&apos;]) append_const和const一起使用，用来追加常量。 12345&gt;&gt;&gt; parser = argparse.ArgumentParser()&gt;&gt;&gt; parser.add_argument(&apos;--str&apos;, dest=&apos;types&apos;, action=&apos;append_const&apos;, const=str)&gt;&gt;&gt; parser.add_argument(&apos;--int&apos;, dest=&apos;types&apos;, action=&apos;append_const&apos;, const=int)&gt;&gt;&gt; parser.parse_args(&apos;--str --int&apos;.split())Namespace(types=[&lt;class &apos;str&apos;&gt;, &lt;class &apos;int&apos;&gt;]) count数量统计，参数项可以多次出现，记录出现次数为选项的值。 1234&gt;&gt;&gt; parser = argparse.ArgumentParser()&gt;&gt;&gt; parser.add_argument(&apos;--verbose&apos;, &apos;-v&apos;, action=&apos;count&apos;)&gt;&gt;&gt; parser.parse_args([&apos;-vvv&apos;])Namespace(verbose=3) help自定义help选项的时候使用的。 version创建版本信息使用。 12345&gt;&gt;&gt; import argparse&gt;&gt;&gt; parser = argparse.ArgumentParser(prog=&apos;PROG&apos;)&gt;&gt;&gt; parser.add_argument(&apos;--version&apos;, action=&apos;version&apos;, version=&apos;%(prog)s 2.0&apos;)&gt;&gt;&gt; parser.parse_args([&apos;--version&apos;])PROG 2.0 自定义action1234567891011121314151617&gt;&gt;&gt; class FooAction(argparse.Action):... def __init__(self, option_strings, dest, nargs=None, **kwargs):... if nargs is not None:... raise ValueError(&quot;nargs not allowed&quot;)... super(FooAction, self).__init__(option_strings, dest, **kwargs)... def __call__(self, parser, namespace, values, option_string=None):... print(&apos;%r %r %r&apos; % (namespace, values, option_string))... setattr(namespace, self.dest, values)...&gt;&gt;&gt; parser = argparse.ArgumentParser()&gt;&gt;&gt; parser.add_argument(&apos;--foo&apos;, action=FooAction)&gt;&gt;&gt; parser.add_argument(&apos;bar&apos;, action=FooAction)&gt;&gt;&gt; args = parser.parse_args(&apos;1 --foo 2&apos;.split())Namespace(bar=None, foo=None) &apos;1&apos; NoneNamespace(bar=&apos;1&apos;, foo=None) &apos;2&apos; &apos;--foo&apos;&gt;&gt;&gt; argsNamespace(bar=&apos;1&apos;, foo=&apos;2&apos;) nargs这个参数用来规定添加的参数项对应参数值的个数。 1、2、3… ‘?’ 0或1个 ‘+’ 至少一个 ‘*’ 0到多个 argparse.REMAINDER ？？？ 12345&gt;&gt;&gt; parser.add_argument(&apos;--foo&apos;, nargs=2)&gt;&gt;&gt; parser.add_argument(&apos;bar&apos;, nargs=1)&gt;&gt;&gt; parser.add_argument(&apos;--foo&apos;, nargs=&apos;?&apos;, const=&apos;c&apos;, default=&apos;d&apos;)&gt;&gt;&gt; parser.add_argument(&apos;--bar&apos;, nargs=&apos;*&apos;)&gt;&gt;&gt; parser.add_argument(&apos;foo&apos;, nargs=&apos;+&apos;) const设定一个常量的值，与store_const 和append_const 一起使用。 default设定一个默认值 type设定参数项的值的类型。默认str类型，可以int、float等。 12345678910&gt;&gt;&gt; parser = argparse.ArgumentParser()&gt;&gt;&gt; parser.add_argument(&apos;foo&apos;, type=int)&gt;&gt;&gt; parser.add_argument(&apos;bar&apos;, type=open)&gt;&gt;&gt; parser.parse_args(&apos;2 temp.txt&apos;.split())Namespace(bar=&lt;_io.TextIOWrapper name=&apos;temp.txt&apos; encoding=&apos;UTF-8&apos;&gt;, foo=2)&gt;&gt;&gt; parser = argparse.ArgumentParser()&gt;&gt;&gt; parser.add_argument(&apos;bar&apos;, type=argparse.FileType(&apos;w&apos;))&gt;&gt;&gt; parser.parse_args([&apos;out.txt&apos;])Namespace(bar=&lt;_io.TextIOWrapper name=&apos;out.txt&apos; encoding=&apos;UTF-8&apos;&gt;) 可以自定义类型 123456789101112131415&gt;&gt;&gt; def perfect_square(string):... value = int(string)... sqrt = math.sqrt(value)... if sqrt != int(sqrt):... msg = &quot;%r is not a perfect square&quot; % string... raise argparse.ArgumentTypeError(msg)... return value...&gt;&gt;&gt; parser = argparse.ArgumentParser(prog=&apos;PROG&apos;)&gt;&gt;&gt; parser.add_argument(&apos;foo&apos;, type=perfect_square)&gt;&gt;&gt; parser.parse_args([&apos;9&apos;])Namespace(foo=9)&gt;&gt;&gt; parser.parse_args([&apos;7&apos;])usage: PROG [-h] fooPROG: error: argument foo: &apos;7&apos; is not a perfect square 可以配合使用choices参数来定义参数值范围 1234567&gt;&gt;&gt; parser = argparse.ArgumentParser(prog=&apos;PROG&apos;)&gt;&gt;&gt; parser.add_argument(&apos;foo&apos;, type=int, choices=range(5, 10))&gt;&gt;&gt; parser.parse_args([&apos;7&apos;])Namespace(foo=7)&gt;&gt;&gt; parser.parse_args([&apos;11&apos;])usage: PROG [-h] &#123;5,6,7,8,9&#125;PROG: error: argument foo: invalid choice: 11 (choose from 5, 6, 7, 8, 9) choices用来限制参数值的选定范围 12parser.add_argument(&apos;move&apos;, choices=[&apos;rock&apos;, &apos;paper&apos;, &apos;scissors&apos;])parser.add_argument(&apos;door&apos;, type=int, choices=range(1, 4)) required设定这个属性可是让参数项变成必选项。 1234567&gt;&gt;&gt; parser = argparse.ArgumentParser()&gt;&gt;&gt; parser.add_argument(&apos;--foo&apos;, required=True)&gt;&gt;&gt; parser.parse_args([&apos;--foo&apos;, &apos;BAR&apos;])Namespace(foo=&apos;BAR&apos;)&gt;&gt;&gt; parser.parse_args([])usage: argparse.py [-h] [--foo FOO]argparse.py: error: option --foo is required help用来添加参数项的帮助信息 metavar打印帮助信息时，参数项的演示值。 1234567891011121314151617181920212223242526&gt;&gt;&gt; parser = argparse.ArgumentParser()&gt;&gt;&gt; parser.add_argument(&apos;--foo&apos;, metavar=&apos;YYY&apos;)&gt;&gt;&gt; parser.add_argument(&apos;bar&apos;, metavar=&apos;XXX&apos;)&gt;&gt;&gt; parser.parse_args(&apos;X --foo Y&apos;.split())Namespace(bar=&apos;X&apos;, foo=&apos;Y&apos;)&gt;&gt;&gt; parser.print_help()usage: [-h] [--foo YYY] XXXpositional arguments: XXXoptional arguments: -h, --help show this help message and exit --foo YYY &gt;&gt;&gt; parser = argparse.ArgumentParser(prog=&apos;PROG&apos;)&gt;&gt;&gt; parser.add_argument(&apos;-x&apos;, nargs=2)&gt;&gt;&gt; parser.add_argument(&apos;--foo&apos;, nargs=2, metavar=(&apos;bar&apos;, &apos;baz&apos;))&gt;&gt;&gt; parser.print_help()usage: PROG [-h] [-x X X] [--foo bar baz]optional arguments: -h, --help show this help message and exit -x X X --foo bar baz dest可以用来指定参数项名字。 1234&gt;&gt;&gt; parser = argparse.ArgumentParser()&gt;&gt;&gt; parser.add_argument(&apos;--foo&apos;, dest=&apos;bar&apos;)&gt;&gt;&gt; parser.parse_args(&apos;--foo XXX&apos;.split())Namespace(bar=&apos;XXX&apos;) parse_args()方法参数说明用来解析参数项，这部分不是重点，看看就好。 Option value syntax参数项使用方式 1234567891011121314151617181920&gt;&gt;&gt; parser = argparse.ArgumentParser(prog=&apos;PROG&apos;)&gt;&gt;&gt; parser.add_argument(&apos;-x&apos;)&gt;&gt;&gt; parser.add_argument(&apos;--foo&apos;)&gt;&gt;&gt; parser.parse_args([&apos;-x&apos;, &apos;X&apos;])Namespace(foo=None, x=&apos;X&apos;)&gt;&gt;&gt; parser.parse_args([&apos;--foo&apos;, &apos;FOO&apos;])Namespace(foo=&apos;FOO&apos;, x=None)&gt;&gt;&gt; parser.parse_args([&apos;--foo=FOO&apos;])Namespace(foo=&apos;FOO&apos;, x=None)&gt;&gt;&gt; parser.parse_args([&apos;-xX&apos;])Namespace(foo=None, x=&apos;X&apos;)&gt;&gt;&gt; parser = argparse.ArgumentParser(prog=&apos;PROG&apos;)&gt;&gt;&gt; parser.add_argument(&apos;-x&apos;, action=&apos;store_true&apos;)&gt;&gt;&gt; parser.add_argument(&apos;-y&apos;, action=&apos;store_true&apos;)&gt;&gt;&gt; parser.add_argument(&apos;-z&apos;)&gt;&gt;&gt; parser.parse_args([&apos;-xyzZ&apos;])Namespace(x=True, y=True, z=&apos;Z&apos;) Invalid arguments错误输出，参数项或参数值不符合规定时会提示错误信息 123456789101112131415161718&gt;&gt;&gt; parser = argparse.ArgumentParser(prog=&apos;PROG&apos;)&gt;&gt;&gt; parser.add_argument(&apos;--foo&apos;, type=int)&gt;&gt;&gt; parser.add_argument(&apos;bar&apos;, nargs=&apos;?&apos;)&gt;&gt;&gt; # invalid type&gt;&gt;&gt; parser.parse_args([&apos;--foo&apos;, &apos;spam&apos;])usage: PROG [-h] [--foo FOO] [bar]PROG: error: argument --foo: invalid int value: &apos;spam&apos;&gt;&gt;&gt; # invalid option&gt;&gt;&gt; parser.parse_args([&apos;--bar&apos;])usage: PROG [-h] [--foo FOO] [bar]PROG: error: no such option: --bar&gt;&gt;&gt; # wrong number of arguments&gt;&gt;&gt; parser.parse_args([&apos;spam&apos;, &apos;badger&apos;])usage: PROG [-h] [--foo FOO] [bar]PROG: error: extra arguments found: badger Arguments containing1234567891011121314151617181920212223242526272829&gt;&gt;&gt; parser = argparse.ArgumentParser(prog=&apos;PROG&apos;)&gt;&gt;&gt; parser.add_argument(&apos;-x&apos;)&gt;&gt;&gt; parser.add_argument(&apos;foo&apos;, nargs=&apos;?&apos;)&gt;&gt;&gt; # no negative number options, so -1 is a positional argument&gt;&gt;&gt; parser.parse_args([&apos;-x&apos;, &apos;-1&apos;])Namespace(foo=None, x=&apos;-1&apos;)&gt;&gt;&gt; # no negative number options, so -1 and -5 are positional arguments&gt;&gt;&gt; parser.parse_args([&apos;-x&apos;, &apos;-1&apos;, &apos;-5&apos;])Namespace(foo=&apos;-5&apos;, x=&apos;-1&apos;)&gt;&gt;&gt; parser = argparse.ArgumentParser(prog=&apos;PROG&apos;)&gt;&gt;&gt; parser.add_argument(&apos;-1&apos;, dest=&apos;one&apos;)&gt;&gt;&gt; parser.add_argument(&apos;foo&apos;, nargs=&apos;?&apos;)&gt;&gt;&gt; # negative number options present, so -1 is an option&gt;&gt;&gt; parser.parse_args([&apos;-1&apos;, &apos;X&apos;])Namespace(foo=None, one=&apos;X&apos;)&gt;&gt;&gt; # negative number options present, so -2 is an option&gt;&gt;&gt; parser.parse_args([&apos;-2&apos;])usage: PROG [-h] [-1 ONE] [foo]PROG: error: no such option: -2&gt;&gt;&gt; # negative number options present, so both -1s are options&gt;&gt;&gt; parser.parse_args([&apos;-1&apos;, &apos;-1&apos;])usage: PROG [-h] [-1 ONE] [foo]PROG: error: argument -1: expected one argument Argument abbreviations (prefix matching)12345678910&gt;&gt;&gt; parser = argparse.ArgumentParser(prog=&apos;PROG&apos;)&gt;&gt;&gt; parser.add_argument(&apos;-bacon&apos;)&gt;&gt;&gt; parser.add_argument(&apos;-badger&apos;)&gt;&gt;&gt; parser.parse_args(&apos;-bac MMM&apos;.split())Namespace(bacon=&apos;MMM&apos;, badger=None)&gt;&gt;&gt; parser.parse_args(&apos;-bad WOOD&apos;.split())Namespace(bacon=None, badger=&apos;WOOD&apos;)&gt;&gt;&gt; parser.parse_args(&apos;-ba BA&apos;.split())usage: PROG [-h] [-bacon BACON] [-badger BADGER]PROG: error: ambiguous option: -ba could match -badger, -bacon Beyond sys.argv1234567891011&gt;&gt;&gt; parser = argparse.ArgumentParser()&gt;&gt;&gt; parser.add_argument(... &apos;integers&apos;, metavar=&apos;int&apos;, type=int, choices=range(10),... nargs=&apos;+&apos;, help=&apos;an integer in the range 0..9&apos;)&gt;&gt;&gt; parser.add_argument(... &apos;--sum&apos;, dest=&apos;accumulate&apos;, action=&apos;store_const&apos;, const=sum,... default=max, help=&apos;sum the integers (default: find the max)&apos;)&gt;&gt;&gt; parser.parse_args([&apos;1&apos;, &apos;2&apos;, &apos;3&apos;, &apos;4&apos;])Namespace(accumulate=&lt;built-in function max&gt;, integers=[1, 2, 3, 4])&gt;&gt;&gt; parser.parse_args([&apos;1&apos;, &apos;2&apos;, &apos;3&apos;, &apos;4&apos;, &apos;--sum&apos;])Namespace(accumulate=&lt;built-in function sum&gt;, integers=[1, 2, 3, 4]) The Namespace object1234567891011121314151617&gt;&gt;&gt; parser = argparse.ArgumentParser()&gt;&gt;&gt; parser.add_argument(&apos;--foo&apos;)&gt;&gt;&gt; args = parser.parse_args([&apos;--foo&apos;, &apos;BAR&apos;])&gt;&gt;&gt; vars(args)&#123;&apos;foo&apos;: &apos;BAR&apos;&#125;&gt;&gt;&gt; class C:... pass...&gt;&gt;&gt; c = C()&gt;&gt;&gt; parser = argparse.ArgumentParser()&gt;&gt;&gt; parser.add_argument(&apos;--foo&apos;)&gt;&gt;&gt; parser.parse_args(args=[&apos;--foo&apos;, &apos;BAR&apos;], namespace=c)&gt;&gt;&gt; c.foo&apos;BAR&apos; 其他方法这部分内容有一些东西还是比较有用的 Sub-commands子参数项，可以设置子参数项的参数项。 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748&gt;&gt;&gt; # create the top-level parser&gt;&gt;&gt; parser = argparse.ArgumentParser(prog=&apos;PROG&apos;)&gt;&gt;&gt; parser.add_argument(&apos;--foo&apos;, action=&apos;store_true&apos;, help=&apos;foo help&apos;)&gt;&gt;&gt; subparsers = parser.add_subparsers(help=&apos;sub-command help&apos;)&gt;&gt;&gt;&gt;&gt;&gt; # create the parser for the &quot;a&quot; command&gt;&gt;&gt; parser_a = subparsers.add_parser(&apos;a&apos;, help=&apos;a help&apos;)&gt;&gt;&gt; parser_a.add_argument(&apos;bar&apos;, type=int, help=&apos;bar help&apos;)&gt;&gt;&gt;&gt;&gt;&gt; # create the parser for the &quot;b&quot; command&gt;&gt;&gt; parser_b = subparsers.add_parser(&apos;b&apos;, help=&apos;b help&apos;)&gt;&gt;&gt; parser_b.add_argument(&apos;--baz&apos;, choices=&apos;XYZ&apos;, help=&apos;baz help&apos;)&gt;&gt;&gt;&gt;&gt;&gt; # parse some argument lists&gt;&gt;&gt; parser.parse_args([&apos;a&apos;, &apos;12&apos;])Namespace(bar=12, foo=False)&gt;&gt;&gt; parser.parse_args([&apos;--foo&apos;, &apos;b&apos;, &apos;--baz&apos;, &apos;Z&apos;])Namespace(baz=&apos;Z&apos;, foo=True)#####&gt;&gt;&gt; parser.parse_args([&apos;--help&apos;])usage: PROG [-h] [--foo] &#123;a,b&#125; ...positional arguments: &#123;a,b&#125; sub-command help a a help b b helpoptional arguments: -h, --help show this help message and exit --foo foo help&gt;&gt;&gt; parser.parse_args([&apos;a&apos;, &apos;--help&apos;])usage: PROG a [-h] barpositional arguments: bar bar helpoptional arguments: -h, --help show this help message and exit&gt;&gt;&gt; parser.parse_args([&apos;b&apos;, &apos;--help&apos;])usage: PROG b [-h] [--baz &#123;X,Y,Z&#125;]optional arguments: -h, --help show this help message and exit --baz &#123;X,Y,Z&#125; baz help 还可以设置单独的标题和描述信息 12345678910111213141516&gt;&gt;&gt; parser = argparse.ArgumentParser()&gt;&gt;&gt; subparsers = parser.add_subparsers(title=&apos;subcommands&apos;,... description=&apos;valid subcommands&apos;,... help=&apos;additional help&apos;)&gt;&gt;&gt; subparsers.add_parser(&apos;foo&apos;)&gt;&gt;&gt; subparsers.add_parser(&apos;bar&apos;)&gt;&gt;&gt; parser.parse_args([&apos;-h&apos;])usage: [-h] &#123;foo,bar&#125; ...optional arguments: -h, --help show this help message and exitsubcommands: valid subcommands &#123;foo,bar&#125; additional help 可以添加别名 123456&gt;&gt;&gt; parser = argparse.ArgumentParser()&gt;&gt;&gt; subparsers = parser.add_subparsers()&gt;&gt;&gt; checkout = subparsers.add_parser(&apos;checkout&apos;, aliases=[&apos;co&apos;])&gt;&gt;&gt; checkout.add_argument(&apos;foo&apos;)&gt;&gt;&gt; parser.parse_args([&apos;co&apos;, &apos;bar&apos;])Namespace(foo=&apos;bar&apos;) 12345678910111213141516171819202122232425262728293031&gt;&gt;&gt; # sub-command functions&gt;&gt;&gt; def foo(args):... print(args.x * args.y)...&gt;&gt;&gt; def bar(args):... print(&apos;((%s))&apos; % args.z)...&gt;&gt;&gt; # create the top-level parser&gt;&gt;&gt; parser = argparse.ArgumentParser()&gt;&gt;&gt; subparsers = parser.add_subparsers()&gt;&gt;&gt;&gt;&gt;&gt; # create the parser for the &quot;foo&quot; command&gt;&gt;&gt; parser_foo = subparsers.add_parser(&apos;foo&apos;)&gt;&gt;&gt; parser_foo.add_argument(&apos;-x&apos;, type=int, default=1)&gt;&gt;&gt; parser_foo.add_argument(&apos;y&apos;, type=float)&gt;&gt;&gt; parser_foo.set_defaults(func=foo)&gt;&gt;&gt;&gt;&gt;&gt; # create the parser for the &quot;bar&quot; command&gt;&gt;&gt; parser_bar = subparsers.add_parser(&apos;bar&apos;)&gt;&gt;&gt; parser_bar.add_argument(&apos;z&apos;)&gt;&gt;&gt; parser_bar.set_defaults(func=bar)&gt;&gt;&gt;&gt;&gt;&gt; # parse the args and call whatever function was selected&gt;&gt;&gt; args = parser.parse_args(&apos;foo 1 -x 2&apos;.split())&gt;&gt;&gt; args.func(args)2.0&gt;&gt;&gt;&gt;&gt;&gt; # parse the args and call whatever function was selected&gt;&gt;&gt; args = parser.parse_args(&apos;bar XYZYX&apos;.split())&gt;&gt;&gt; args.func(args)((XYZYX)) 12345678&gt;&gt;&gt; parser = argparse.ArgumentParser()&gt;&gt;&gt; subparsers = parser.add_subparsers(dest=&apos;subparser_name&apos;)&gt;&gt;&gt; subparser1 = subparsers.add_parser(&apos;1&apos;)&gt;&gt;&gt; subparser1.add_argument(&apos;-x&apos;)&gt;&gt;&gt; subparser2 = subparsers.add_parser(&apos;2&apos;)&gt;&gt;&gt; subparser2.add_argument(&apos;y&apos;)&gt;&gt;&gt; parser.parse_args([&apos;2&apos;, &apos;frobble&apos;])Namespace(subparser_name=&apos;2&apos;, y=&apos;frobble&apos;) FileType objects12345678910&gt;&gt;&gt; parser = argparse.ArgumentParser()&gt;&gt;&gt; parser.add_argument(&apos;--raw&apos;, type=argparse.FileType(&apos;wb&apos;, 0))&gt;&gt;&gt; parser.add_argument(&apos;out&apos;, type=argparse.FileType(&apos;w&apos;, encoding=&apos;UTF-8&apos;))&gt;&gt;&gt; parser.parse_args([&apos;--raw&apos;, &apos;raw.dat&apos;, &apos;file.txt&apos;])Namespace(out=&lt;_io.TextIOWrapper name=&apos;file.txt&apos; mode=&apos;w&apos; encoding=&apos;UTF-8&apos;&gt;, raw=&lt;_io.FileIO name=&apos;raw.dat&apos; mode=&apos;wb&apos;&gt;)&gt;&gt;&gt; parser = argparse.ArgumentParser()&gt;&gt;&gt; parser.add_argument(&apos;infile&apos;, type=argparse.FileType(&apos;r&apos;))&gt;&gt;&gt; parser.parse_args([&apos;-&apos;])Namespace(infile=&lt;_io.TextIOWrapper name=&apos;&lt;stdin&gt;&apos; encoding=&apos;UTF-8&apos;&gt;) Argument groups参数项组 1234567891011121314151617&gt;&gt;&gt; parser = argparse.ArgumentParser(prog=&apos;PROG&apos;, add_help=False)&gt;&gt;&gt; group1 = parser.add_argument_group(&apos;group1&apos;, &apos;group1 description&apos;)&gt;&gt;&gt; group1.add_argument(&apos;foo&apos;, help=&apos;foo help&apos;)&gt;&gt;&gt; group2 = parser.add_argument_group(&apos;group2&apos;, &apos;group2 description&apos;)&gt;&gt;&gt; group2.add_argument(&apos;--bar&apos;, help=&apos;bar help&apos;)&gt;&gt;&gt; parser.print_help()usage: PROG [--bar BAR] foogroup1: group1 description foo foo helpgroup2: group2 description --bar BAR bar help Mutual exclusion12345678910111213141516171819&gt;&gt;&gt; parser = argparse.ArgumentParser(prog=&apos;PROG&apos;)&gt;&gt;&gt; group = parser.add_mutually_exclusive_group()&gt;&gt;&gt; group.add_argument(&apos;--foo&apos;, action=&apos;store_true&apos;)&gt;&gt;&gt; group.add_argument(&apos;--bar&apos;, action=&apos;store_false&apos;)&gt;&gt;&gt; parser.parse_args([&apos;--foo&apos;])Namespace(bar=True, foo=True)&gt;&gt;&gt; parser.parse_args([&apos;--bar&apos;])Namespace(bar=False, foo=False)&gt;&gt;&gt; parser.parse_args([&apos;--foo&apos;, &apos;--bar&apos;])usage: PROG [-h] [--foo | --bar]PROG: error: argument --bar: not allowed with argument --foo&gt;&gt;&gt; parser = argparse.ArgumentParser(prog=&apos;PROG&apos;)&gt;&gt;&gt; group = parser.add_mutually_exclusive_group(required=True)&gt;&gt;&gt; group.add_argument(&apos;--foo&apos;, action=&apos;store_true&apos;)&gt;&gt;&gt; group.add_argument(&apos;--bar&apos;, action=&apos;store_false&apos;)&gt;&gt;&gt; parser.parse_args([])usage: PROG [-h] (--foo | --bar)PROG: error: one of the arguments --foo --bar is required Parser defaults123456789101112131415161718&gt;&gt;&gt; parser = argparse.ArgumentParser()&gt;&gt;&gt; parser.add_argument(&apos;foo&apos;, type=int)&gt;&gt;&gt; parser.set_defaults(bar=42, baz=&apos;badger&apos;)&gt;&gt;&gt; parser.parse_args([&apos;736&apos;])Namespace(bar=42, baz=&apos;badger&apos;, foo=736)&gt;&gt;&gt; parser = argparse.ArgumentParser()&gt;&gt;&gt; parser.add_argument(&apos;--foo&apos;, default=&apos;bar&apos;)&gt;&gt;&gt; parser.set_defaults(foo=&apos;spam&apos;)&gt;&gt;&gt; parser.parse_args([])Namespace(foo=&apos;spam&apos;)&gt;&gt;&gt; parser = argparse.ArgumentParser()&gt;&gt;&gt; parser.add_argument(&apos;--foo&apos;, default=&apos;badger&apos;)&gt;&gt;&gt; parser.get_default(&apos;foo&apos;)&apos;badger&apos; Printing help12345678910111213ArgumentParser.print_usage(file=None)Print a brief description of how the ArgumentParser should be invoked on the command line. If file is None, sys.stdout is assumed.ArgumentParser.print_help(file=None)Print a help message, including the program usage and information about the arguments registered with the ArgumentParser. If file is None, sys.stdout is assumed.There are also variants of these methods that simply return a string instead of printing it:ArgumentParser.format_usage()Return a string containing a brief description of how the ArgumentParser should be invoked on the command line.ArgumentParser.format_help()Return a string containing a help message, including the program usage and information about the arguments registered with the ArgumentParser. Partial parsing12345&gt;&gt;&gt; parser = argparse.ArgumentParser()&gt;&gt;&gt; parser.add_argument(&apos;--foo&apos;, action=&apos;store_true&apos;)&gt;&gt;&gt; parser.add_argument(&apos;bar&apos;)&gt;&gt;&gt; parser.parse_known_args([&apos;--foo&apos;, &apos;--badger&apos;, &apos;BAR&apos;, &apos;spam&apos;])(Namespace(bar=&apos;BAR&apos;, foo=True), [&apos;--badger&apos;, &apos;spam&apos;]) Customizing file parsing123class MyArgumentParser(argparse.ArgumentParser): def convert_arg_line_to_args(self, arg_line): return arg_line.split() Exiting methods12345ArgumentParser.exit(status=0, message=None)This method terminates the program, exiting with the specified status and, if given, it prints a message before that.ArgumentParser.error(message)This method prints a usage message including the message to the standard error and terminates the program with a status code of 2.]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[python模块-hashlib加密]]></title>
    <url>%2Fposts%2F263d2024.html</url>
    <content type="text"><![CDATA[摘要本文记录hashlib的常用方法 hashlibhash：一种算法,用于加密相关的操作,3.x里代替了md5模块和sha模块，主要提供 SHA1, SHA224, SHA256, SHA384, SHA512 ，MD5 算法三个特点： 内容相同则hash运算结果相同，内容稍微改变则hash值则变 不可逆推 相同算法：无论校验多长的数据，得到的哈希值长度固定。 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849import hashlib# ######## md5 ######## hash = hashlib.md5()hash.update(&apos;hello&apos;.encode(&apos;utf8&apos;))print(hash.hexdigest())#5d41402abc4b2a76b9719d911017c592 hash.update(&apos;alvin&apos;.encode(&apos;utf8&apos;)) print(hash.hexdigest())#92a7e713c30abbb0319fa07da2a5c4af m2=hashlib.md5()m2.update(&apos;helloalvin&apos;.encode(&apos;utf8&apos;))print(m2.hexdigest())#92a7e713c30abbb0319fa07da2a5c4af# 注意：把一段很长的数据update多次，与一次update这段长数据，得到的结果一样# 但是update多次为校验大文件提供了可能。 # ######## sha1 ########hash = hashlib.sha1()hash.update(&apos;admin&apos;)print hash.hexdigest() # ######## sha256 ########hash = hashlib.sha256()hash.update(&apos;admin&apos;)print hash.hexdigest() hash = hashlib.sha256(&apos;898oaFs09f&apos;.encode(&apos;utf8&apos;))hash.update(&apos;alvin&apos;.encode(&apos;utf8&apos;))print (hash.hexdigest())#e79e68f070cdedcfe63eaf1a2e92c83b4cfb1b5c6bc452d214c1b7e77cdfd1c7 # ######## sha384 ######## hash = hashlib.sha384()hash.update(&apos;admin&apos;)print hash.hexdigest() # ######## sha512 ######## hash = hashlib.sha512()hash.update(&apos;admin&apos;) 以上加密算法虽然依然非常厉害，但时候存在缺陷，即：通过撞库可以反解。所以，有必要对加密算法中添加自定义key再来做加密。 1234567import hashlib # ######## md5 ######## hash = hashlib.md5(&apos;898oaFs09f&apos;)hash.update(&apos;admin&apos;)print hash.hexdigest() 模拟撞库破解密码 123456789101112131415161718192021222324import hashlibpasswds=[ &apos;alex3714&apos;, &apos;alex1313&apos;, &apos;alex94139413&apos;, &apos;alex123456&apos;, &apos;123456alex&apos;, &apos;a123lex&apos;, ]def make_passwd_dic(passwds): dic=&#123;&#125; for passwd in passwds: m=hashlib.md5() m.update(passwd.encode(&apos;utf-8&apos;)) dic[passwd]=m.hexdigest() return dicdef break_code(cryptograph,passwd_dic): for k,v in passwd_dic.items(): if v == cryptograph: print(&apos;密码是===&gt;\033[46m%s\033[0m&apos; %k)cryptograph=&apos;aee949757a2e698417463d47acac93df&apos;break_code(cryptograph,make_passwd_dic(passwds)) 还不够吊？python 还有一个 hmac 模块，它内部对我们创建 key 和 内容 再进行处理然后再加密 123456import hmach = hmac.new(&apos;alvin&apos;.encode(&apos;utf8&apos;))h.update(&apos;hello&apos;.encode(&apos;utf8&apos;))print(h.hexdigest())#320df9832eab4c038b6c1d7ed73a5940 注意！注意！注意 1234567891011121314151617181920212223#要想保证hmac最终结果一致，必须保证：#1:hmac.new括号内指定的初始key一样#2:无论update多少次，校验的内容累加到一起是一样的内容import hmach1=hmac.new(b&apos;egon&apos;)h1.update(b&apos;hello&apos;)h1.update(b&apos;world&apos;)print(h1.hexdigest())h2=hmac.new(b&apos;egon&apos;)h2.update(b&apos;helloworld&apos;)print(h2.hexdigest())h3=hmac.new(b&apos;egonhelloworld&apos;)print(h3.hexdigest())&apos;&apos;&apos;f1bf38d054691688f89dcd34ac3c27f2f1bf38d054691688f89dcd34ac3c27f2bcca84edd9eeb86f30539922b28f3981&apos;&apos;&apos;]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[python模块-time、datetime]]></title>
    <url>%2Fposts%2F5d959c43.html</url>
    <content type="text"><![CDATA[摘要在Python中，通常有这几种方式来表示时间： 时间戳 格式化的时间字符串 元组（struct_time）共九个元素。 由于Python的time模块实现主要调用C库，所以各个平台可能有所不同。 UTC（Coordinated Universal Time）即格林威治天文时间，为世界标准时间。中国北京为UTC+8。 DST（Daylight Saving Time）即夏令时。 时间戳（timestamp）的方式：通常来说，时间戳是指格林威治时间1970年01月01日00时00分00秒(北京时间1970年01月01日08时00分00秒)起至现在的总秒数。我们运行“type(time.time())”，返回的是float类型。返回时间戳方式的函数主要有time()，clock()等。 元组（struct_time）方式：struct_time元组共有9个元素，返回struct_time的函数主要有gmtime()，localtime()，strptime()。 datetimeimport datetime1.返回当前时间&gt;&gt;&gt; datetime.datetime.now()datetime.datetime(2017, 5, 9, 17, 7, 0, 514481)2.时间戳转换成日期&gt;&gt;&gt; datetime.date.fromtimestamp(1178766678)datetime.date(2007, 5, 10)3.当前时间+3天&gt;&gt;&gt; datetime.datetime.now() + datetime.timedelta(+3)datetime.datetime(2017, 5, 12, 17, 12, 42, 124379)4.当前时间-3天&gt;&gt;&gt; datetime.datetime.now() + datetime.timedelta(-3)datetime.datetime(2017, 5, 6, 17, 13, 18, 474406)5.当前时间+3小时&gt;&gt;&gt; datetime.datetime.now() + datetime.timedelta(hours=3)datetime.datetime(2017, 5, 9, 20, 13, 55, 678310)6.当前时间+30分钟&gt;&gt;&gt; datetime.datetime.now() + datetime.timedelta(minutes=30)datetime.datetime(2017, 5, 9, 17, 44, 40, 392370)1. 日期输出格式化 datetime =&gt; stringimport datetimenow = datetime.datetime.now()now.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;) 输出&apos;2015-04-07 19:11:21&apos;strftime是datetime类的实例方法。 2. 日期输出格式化 string =&gt; datetimeimport datetimet_str = &apos;2015-04-07 19:11:21&apos;d = datetime.datetime.strptime(t_str, &apos;%Y-%m-%d %H:%M:%S&apos;)strptime是datetime类的静态方法。 3. 日期比较操作在datetime模块中有timedelta类，这个类的对象用于表示一个时间间隔，比如两个日期或者时间的差别。构造方法：import datetimedatetime.timedelta(days=0, seconds=0, microseconds=0, milliseconds=0, minutes=0, hours=0, weeks=0) 所有的参数都有默认值0，这些参数可以是int或float，正的或负的。可以通过 timedelta.days、tiemdelta.seconds 等获取相应的时间值。timedelta 类的实例，支持加、减、乘、除等操作，所得的结果也是 timedelta 类的实例。比如：import datetimeyear = datetime.timedelta(days=365)ten_years = year *10nine_years = ten_years - year 同时，date、time和datetime类也支持与timedelta的加、减运算。datetime1 = datetime2 + timedeltatimedelta = datetime1 - datetime2这样，可以很方便的实现一些功能。 4. 两个日期相差多少天。import datetimed1 = datetime.datetime.strptime(&apos;2015-03-05 17:41:20&apos;, &apos;%Y-%m-%d %H:%M:%S&apos;)d2 = datetime.datetime.strptime(&apos;2015-03-02 17:41:20&apos;, &apos;%Y-%m-%d %H:%M:%S&apos;)delta = d1 - d2print delta.days 输出：3 5. 今天的n天后的日期。import datetimenow = datetime.datetime.now()delta = datetime.timedelta(days=3)n_days = now + deltaprint n_days.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;) 输出：2015-04-10 19:16:34 #coding=utf-8import datetimenow=datetime.datetime.now()print now #将日期转化为字符串datetime =&gt; stringimport datetimenow=datetime.datetime.now()print now.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;) #将字符串转换为日期 string =&gt; datetimeimport datetimet_str = &apos;2015-03-05 16:26:23&apos;d=datetime.datetime.strptime(t_str,&apos;%Y-%m-%d %H:%M:%S&apos;)print d#在datetime模块中有timedelta类，这个类的对象用于表示一个时间间隔，比如两个日#期或者时间的差别。 #计算两个日期的间隔import datetimed1 = datetime.datetime.strptime(&apos;2012-03-05 17:41:20&apos;, &apos;%Y-%m-%d %H:%M:%S&apos;)d2 = datetime.datetime.strptime(&apos;2012-03-02 17:41:20&apos;, &apos;%Y-%m-%d %H:%M:%S&apos;)delta = d1 - d2print delta.days print delta #今天的n天后的日期import datetimenow=datetime.datetime.now()delta=datetime.timedelta(days=3)n_days=now+deltaprint n_days.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;)datetime的好处是可以实现方便的时间运算,比如 endTime - starTime,这在时间duration计算时非常方便.##datetime 模块常用方法小记datetime模块常用的主要有下面这四个类：1. datetime.date: 是指年月日构成的日期(相当于日历)2. datetime.time: 是指时分秒微秒构成的一天24小时中的具体时间(相当于手表)3. datetime.datetime: 上面两个合在一起，既包含时间又包含日期4. datetime.timedelta: 时间间隔对象(timedelta)。一个时间点(datetime)加上一个时间间隔(timedelta)可以得到一个新的时间点(datetime)。比如今天的上午3点加上5个小时得到今天的上午8点。同理，两个时间点相减会得到一个时间间隔。1.datetime.date 类1.新建一个date对象，日期为今天，既可以直接调用datetime.date.today()，也可以直接向datetime.date()传值，如下：In [4]: today = datetime.date.today()In [5]: todayOut[5]: datetime.date(2014, 8, 15)In [6]: t = datetime.date(2014,8,15)In [7]: tOut[7]: datetime.date(2014, 8, 15)2.datetime.date.strftime(format) 格式化为需要的时间，如常用的 “年-月-日 小时：分钟：秒” 格式In [8]: today.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;)Out[8]: &apos;2014-08-15 00:00:00’date对象中小时、分钟、秒默认都是0，纪元年的那个时间3.datetime.date.timple() 转成struct_time格式，这样传递给time.mktime(t) 后，直接转成时间戳格式In [9]: today.timetuple()Out[9]: time.struct_time(tm_year=2014, tm_mon=8, tm_mday=15, tm_hour=0, tm_min=0, tm_sec=0, tm_wday=4, tm_yday=227, tm_isdst=-1)In [10]: time.mktime(today.timetuple())Out[10]: 1408032000.04.datetime.date.replace(year, month, day) 返回一个替换后的date对象In [11]: today.replace(year=2013)Out[11]: datetime.date(2013, 8, 15)5.datetime.date.fromtimestamp(timestamp) 将时间戳转化为date对象In [12]: datetime.date.fromtimestamp(1408058729)Out[12]: datetime.date(2014, 8, 15)2.datetime.time 类1.新建一个time对象In [15]: tOut[15]: datetime.time(8, 45, 20)2.datetime.time.(format)格式化输出In [16]: t.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;)Out[16]: &apos;1900-01-01 08:45:20’time对应的年、月、日为1900、01、01，纪元年的那个时间3.datetime.time.replace([hour[, minute[, second[, microsecond[, tzinfo]]]]]) 返回一个替换后的time对象In [17]: t.replace(hour=9)Out[17]: datetime.time(9, 45, 20)3.datetime.datetime类其实和date的那些方法差不多了，大概看以下，简单说说1.新建一个datetime对象，日期为今天，既可以直接调用datetime.datetime.today()，也可以直接向datetime.datetime()传值，如下：In [21]: d1 = datetime.datetime.today()In [22]: d1Out[22]: datetime.datetime(2014, 8, 15, 8, 12, 34, 790945)In [23]: d2 = datetime.datetime(2014, 8, 15, 8, 12, 34, 790945)In [24]: d2Out[24]: datetime.datetime(2014, 8, 15, 8, 12, 34, 790945)2.datetime.datetime.now([tz]) 当不指定时区时，和datetime.datetime.today()是一样的结果，如下In [25]: datetime.datetime.now()Out[25]: datetime.datetime(2014, 8, 15, 8, 14, 50, 738672)3..datetime.datetime.strftime(format) 格式化为需要的时间，如常用的 “年-月-日 小时：分钟：秒” 格式In [27]: d1Out[27]: datetime.datetime(2014, 8, 15, 8, 12, 34, 790945)In [28]: d1.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;)Out[28]: &apos;2014-08-15 08:12:34’4.datetime.datetime.timple() 转成struct_time格式，这样传递给time.mktime(t) 后，直接转成时间戳格式In [29]: d1Out[29]: datetime.datetime(2014, 8, 15, 8, 12, 34, 790945)In [30]: d1.timetuple()Out[30]: time.struct_time(tm_year=2014, tm_mon=8, tm_mday=15, tm_hour=8, tm_min=12, tm_sec=34, tm_wday=4, tm_yday=227, tm_isdst=-1)In [31]: time.mktime(d1.timetuple())Out[31]: 1408061554.05.datetime.datetime.replace(year, month, day) 返回一个替换后的date对象In [32]: d1Out[32]: datetime.datetime(2014, 8, 15, 8, 12, 34, 790945)In [33]: d1.replace(year=2000)Out[33]: datetime.datetime(2000, 8, 15, 8, 12, 34, 790945)6.datetime.datetime.fromtimestamp(timestamp) 将时间戳转化为datetime对象In [34]: time.time()Out[34]: 1408061894.081552In [35]: datetime.datetime.fromtimestamp(1408061894)Out[35]: datetime.datetime(2014, 8, 15, 8, 18, 14)4.datetime.timedelta类没啥好说的，主要做时间的加减法用，如下：In [78]: today = datetime.datetime.today()In [79]: yesterday = today - datetime.timedelta(days=1)In [80]: yesterdayOut[80]: datetime.datetime(2014, 8, 14, 15, 8, 25, 783471)In [81]: todayOut[81]: datetime.datetime(2014, 8, 15, 15, 8, 25, 783471)#!/usr/bin/python# -*- coding: UTF-8 -*-import datetimei = datetime.datetime.now()print (&quot;当前的日期和时间是 %s&quot; % i)print (&quot;ISO格式的日期和时间是 %s&quot; % i.isoformat() )print (&quot;当前的年份是 %s&quot; %i.year)print (&quot;当前的月份是 %s&quot; %i.month)print (&quot;当前的日期是 %s&quot; %i.day)print (&quot;dd/mm/yyyy 格式是 %s/%s/%s&quot; % (i.day, i.month, i.year) )print (&quot;当前小时是 %s&quot; %i.hour)print (&quot;当前分钟是 %s&quot; %i.minute)print (&quot;当前秒是 %s&quot; %i.second) time1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798991001011021031041051061071081091101111121131141151161171181191201211221231241251261271281291301311321331341351361371381391401411421431441451461471481491501511521531541551561571581591601611621631641651661671681.以元组方式返回本地当前时间&gt;&gt;&gt; time.localtime()time.struct_time(tm_year=2017, tm_mon=5, tm_mday=8, tm_hour=16, tm_min=13, tm_sec=34, tm_wday=0, tm_yday=128, tm_isdst=0)2.以元组方式返回格林威治时间&gt;&gt;&gt; time.gmtime() time.struct_time(tm_year=2017, tm_mon=5, tm_mday=8, tm_hour=8, tm_min=13, tm_sec=38, tm_wday=0, tm_yday=128, tm_isdst=0)3.将元组时间转换为时间戳&gt;&gt;&gt; x = time.localtime()&gt;&gt;&gt; time.mktime(x)1494232890.04.将元组时间转换为字符串格式时间&gt;&gt;&gt; x = time.localtime()&gt;&gt;&gt; time.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;,x)&apos;2017-05-08 16:57:38&apos;5.将字符串格式时间转换为元组格式时间&gt;&gt;&gt; time.strptime(&apos;2017-05-08 17:03:12&apos;,&apos;%Y-%m-%d %H:%M:%S&apos;)time.struct_time(tm_year=2017, tm_mon=5, tm_mday=8, tm_hour=17, tm_min=3, tm_sec=12, tm_wday=0, tm_yday=128, tm_isdst=-1)6.元组格式时间转换为字符串格式时间&gt;&gt;&gt; time.asctime()&apos;Tue May 9 15:23:21 2017&apos;&gt;&gt;&gt; x = time.localtime()&gt;&gt;&gt; time.asctime(x)&apos;Tue May 9 15:23:39 2017&apos;7.时间戳转换成字符串格式时间&gt;&gt;&gt; time.ctime()&apos;Tue May 9 16:07:24 2017&apos;&gt;&gt;&gt; time.ctime(987867475)&apos;Sat Apr 21 23:37:55 2001&apos;格式参照%a 本地（locale）简化星期名称 %A 本地完整星期名称 %b 本地简化月份名称 %B 本地完整月份名称 %c 本地相应的日期和时间表示 %d 一个月中的第几天（01 - 31） %H 一天中的第几个小时（24小时制，00 - 23） %I 第几个小时（12小时制，01 - 12） %j 一年中的第几天（001 - 366） %m 月份（01 - 12） %M 分钟数（00 - 59） %p 本地am或者pm的相应符 %S 秒（01 - 61） %U 一年中的星期数。（00 - 53星期天是一个星期的开始。）第一个星期天之前的所有天数都放在第0周。 %w 一个星期中的第几天（0 - 6，0是星期天）%W 和%U基本相同，不同的是%W以星期一为一个星期的开始。 %x 本地相应日期 %X 本地相应时间 %y 去掉世纪的年份（00 - 99） %Y 完整的年份 %Z 时区的名字（如果不存在为空字符） %% ‘%’字符import time # 当前时间print time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, time.localtime()) t = time.localtime(time.time() - 300) # 5分钟前print time.strftime(&quot;%Y-%m-%d %H:%M:%S&quot;, t)python datetime 获取 几分钟 小时 天之前的时间 print ((datetime.datetime.now()-datetime.timedelta(minutes=2)).strftime(&quot;%Y-%m-%d %H:%M&quot;))可以控制days、seconds、minutes、hours、weeks等------一：经常使用的时间方法1.得到当前时间使用time模块，首先得到当前的时间戳In [42]: time.time()Out[42]: 1408066927.208922将时间戳转换为时间元组 struct_timeIn [43]: time.localtime(time.time())Out[43]: time.struct_time(tm_year=2014, tm_mon=8, tm_mday=15, tm_hour=9, tm_min=42, tm_sec=20, tm_wday=4, tm_yday=227, tm_isdst=0)格式化输出想要的时间In [44]: time.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;,time.localtime(time.time()))Out[44]: &apos;2014-08-15 09:43:04&apos;接上文，不加参数时，默认就是输出当前的时间In [48]: time.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;)Out[48]: &apos;2014-08-15 09:46:53’当然也可以透过datetime模块来实现，如下：In [68]: t = time.time()In [69]: datetime.datetime.fromtimestamp(t).strftime(&apos;%Y-%m-%d %H:%M:%S&apos;)Out[69]: &apos;2014-08-15 10:04:51’同时，也可以只使用datetime模块In [46]: datetime.datetime.now().strftime(&apos;%Y-%m-%d %H:%M:%S&apos;)Out[46]: &apos;2014-08-15 09:45:27’In [47]: datetime.datetime.today().strftime(&apos;%Y-%m-%d %H:%M:%S&apos;)Out[47]: &apos;2014-08-15 09:46:10&apos;2.获取时间差，计算程序的执行时间等：使用time模块：In [75]: def t(): ....: start = time.time() ....: time.sleep(10) ....: end = time.time() ....: print end - start ....:In [76]: t()10.0014948845使用datetime模块：In [49]: starttime = datetime.datetime.now()In [50]: endtime = datetime.datetime.now()In [51]: print (endtime - starttime).seconds63.计算昨天的日期（发散思维，计算其他日期相加、相减等）：In [52]: d1 = datetime.datetime.now()In [53]: d2 = d1 - datetime.timedelta(days=1)In [54]: d1Out[54]: datetime.datetime(2014, 8, 15, 9, 54, 10, 68665)In [55]: d2Out[55]: datetime.datetime(2014, 8, 14, 9, 54, 10, 68665)4.时间元组 struct_time转化为时间戳In [56]: datetime.datetime.now()Out[56]: datetime.datetime(2014, 8, 15, 9, 57, 52, 779893)In [57]: datetime.datetime.now().timetuple()Out[57]: time.struct_time(tm_year=2014, tm_mon=8, tm_mday=15, tm_hour=9, tm_min=58, tm_sec=12, tm_wday=4, tm_yday=227, tm_isdst=-1)In [58]: time.mktime(datetime.datetime.now().timetuple())Out[58]: 1408067904.05.strptime也挺有用的，将时间字符串转换为时间元组struct_timeIn [73]: time.strftime(&apos;%Y-%m-%d %H:%M:%S&apos;)Out[73]: &apos;2014-08-15 10:27:36&apos;In [74]: time.strptime(&apos;2014-08-15 10:27:36&apos;,&apos;%Y-%m-%d %H:%M:%S&apos;)Out[74]: time.struct_time(tm_year=2014, tm_mon=8, tm_mday=15, tm_hour=10, tm_min=27, tm_sec=36, tm_wday=4, tm_yday=227, tm_isdst=-1)]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[python模块-shutl]]></title>
    <url>%2Fposts%2Fe1b5539d.html</url>
    <content type="text"><![CDATA[摘要本文记录shutil模块的常用方法 shutil高级的 文件、文件夹、压缩包 处理模块 shutil.copyfileobj(fsrc, fdst[, length])将文件内容拷贝到另一个文件中 123import shutil shutil.copyfileobj(open(&apos;old.xml&apos;,&apos;r&apos;), open(&apos;new.xml&apos;, &apos;w&apos;)) shutil.copyfile(src, dst)拷贝文件 1shutil.copyfile(&apos;f1.log&apos;, &apos;f2.log&apos;) #目标文件无需存在 shutil.copymode(src, dst)仅拷贝权限。内容、组、用户均不变 1shutil.copymode(&apos;f1.log&apos;, &apos;f2.log&apos;) #目标文件必须存在 shutil.copystat(src, dst)仅拷贝状态的信息，包括：mode bits, atime, mtime, flags 1shutil.copystat(&apos;f1.log&apos;, &apos;f2.log&apos;) #目标文件必须存在 shutil.copy(src, dst)拷贝文件和权限 123import shutil shutil.copy(&apos;f1.log&apos;, &apos;f2.log&apos;) shutil.copy2(src, dst)拷贝文件和状态信息 123import shutil shutil.copy2(&apos;f1.log&apos;, &apos;f2.log&apos;) shutil.ignore_patterns(*patterns)shutil.copytree(src, dst, symlinks=False, ignore=None)递归的去拷贝文件夹 123import shutil shutil.copytree(&apos;folder1&apos;, &apos;folder2&apos;, ignore=shutil.ignore_patterns(&apos;*.pyc&apos;, &apos;tmp*&apos;)) #目标目录不能存在，注意对folder2目录父级目录要有可写权限，ignore的意思是排除 1234567import shutilshutil.copytree(&apos;f1&apos;, &apos;f2&apos;, symlinks=True, ignore=shutil.ignore_patterns(&apos;*.pyc&apos;, &apos;tmp*&apos;))&apos;&apos;&apos;通常的拷贝都把软连接拷贝成硬链接，即对待软连接来说，创建新的文件&apos;&apos;&apos; shutil.rmtree(path[, ignore_errors[, onerror]])递归的去删除文件 123import shutil shutil.rmtree(&apos;folder1&apos;) shutil.move(src, dst)递归的去移动文件，它类似mv命令，其实就是重命名。 123import shutil shutil.move(&apos;folder1&apos;, &apos;folder3&apos;) shutil.make_archive(base_name, format,…)创建压缩包并返回文件路径，例如：zip、tar 12345678base_name： 压缩包的文件名，也可以是压缩包的路径。只是文件名时，则保存至当前目录，否则保存至指定路径，如 data_bak =&gt;保存至当前路径如：/tmp/data_bak =&gt;保存至/tmp/format： 压缩包种类，“zip”, “tar”, “bztar”，“gztar”root_dir： 要压缩的文件夹路径（默认当前目录）owner： 用户，默认当前用户group： 组，默认当前组logger： 用于记录日志，通常是logging.Logger对象 12345678#将 /data 下的文件打包放置当前程序目录import shutilret = shutil.make_archive(&quot;data_bak&quot;, &apos;gztar&apos;, root_dir=&apos;/data&apos;) #将 /data下的文件打包放置 /tmp/目录import shutilret = shutil.make_archive(&quot;/tmp/data_bak&quot;, &apos;gztar&apos;, root_dir=&apos;/data&apos;) shutil 对压缩包的处理是调用 ZipFile 和 TarFile 两个模块来进行的，详细： 1234567891011121314151617181920212223242526272829import zipfile# 压缩z = zipfile.ZipFile(&apos;laxi.zip&apos;, &apos;w&apos;)z.write(&apos;a.log&apos;)z.write(&apos;data.data&apos;)z.close()# 解压z = zipfile.ZipFile(&apos;laxi.zip&apos;, &apos;r&apos;)z.extractall(path=&apos;.&apos;)z.close()zipfile压缩解压缩import tarfile# 压缩&gt;&gt;&gt; t=tarfile.open(&apos;/tmp/egon.tar&apos;,&apos;w&apos;)&gt;&gt;&gt; t.add(&apos;/test1/a.py&apos;,arcname=&apos;a.bak&apos;)&gt;&gt;&gt; t.add(&apos;/test1/b.py&apos;,arcname=&apos;b.bak&apos;)&gt;&gt;&gt; t.close()# 解压&gt;&gt;&gt; t=tarfile.open(&apos;/tmp/egon.tar&apos;,&apos;r&apos;)&gt;&gt;&gt; t.extractall(&apos;/egon&apos;)&gt;&gt;&gt; t.close()tarfile压缩解压缩]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[python模块-re]]></title>
    <url>%2Fposts%2F4333f888.html</url>
    <content type="text"><![CDATA[摘要正则表达式是一个特殊的字符序列，它能帮助你方便的检查一个字符串是否与某种模式匹配。Python自1.5版本起增加了re模块，它提供Perl风格的正则表达式模式。 re模块使Python语言拥有全部的正则表达式功能。 compile函数根据一个模式字符串和可选的标志参数生成一个正则表达式对象。该对象拥有一系列方法用于正则表达式匹配和替换。 re模块也提供了与这些方法功能完全一致的函数，这些函数使用一个模式字符串做为它们的第一个参数。 语法: 1234567891011121314import re #导入模块名p = re.compile(&quot;^[0-9]&quot;)#生成要匹配的正则对象，^代表从开头匹配，[0-9]代表匹配0至9的任意一个数字，所以这里的意思是对传进来的字符串进行匹配，如果这个字符串的开头第一个字符是数字，就代表匹配上了m = p.match(&apos;14534Abc&apos;)#按上面生成的正则对象去匹配字符串，如果能匹配成功，这个m就会有值，否则m为Noneif m: #不为空代表匹配上了 print(m.group()) #m.group()返回匹配上的结果，此处为1，因为匹配上的是1这个字符else: print(&quot;doesn&apos;t match.&quot;) 上面的第2 和第3行也可以合并成一行来写 1m = p.match(&quot;^[0-9]&quot;,&apos;14534Abc&apos;) 效果是一样的，区别在于，第一种方式是提前对要匹配的格式进行了编译（对匹配公式进行解析），这样再去匹配的时候就不用在编译匹配的格式，第2种简写是每次匹配的时候都要进行一次匹配公式的编译，所以，如果你需要从一个5w行的文件中匹配出所有以数字开头的行，建议先把正则公式进行编译再匹配，这样速度会快点。 re.match函数re.match 尝试从字符串的起始位置匹配一个模式，如果不是起始位置匹配成功的话，match()就返回none。 函数语法：1re.match(pattern, string, flags=0) 函数参数说明： 参数 描述 pattern 匹配的正则表达式 string 要匹配的字符串。 flags 标志位，用于控制正则表达式的匹配方式，如：是否区分大小写，多行匹配等等。 匹配成功re.match方法返回一个匹配的对象，否则返回None。 我们可以使用group(num) 或 groups() 匹配对象函数来获取匹配表达式。 匹配对象方法 描述 group(num=0) 匹配的整个表达式的字符串，group() 可以一次输入多个组号，在这种情况下它将返回一个包含那些组所对应值的元组。 groups() 返回一个包含所有小组字符串的元组，从 1 到 所含的小组号。 实例：12345678910111213#!/usr/bin/pythonimport re line = &quot;Cats are smarter than dogs&quot; matchObj = re.match( r&apos;(.*) are (.*?) .*&apos;, line, re.M|re.I) if matchObj: print &quot;matchObj.group() : &quot;, matchObj.group() print &quot;matchObj.group(1) : &quot;, matchObj.group(1) print &quot;matchObj.group(2) : &quot;, matchObj.group(2)else: print &quot;No match!!&quot; 以上实例执行结果如下： 123matchObj.group() : Cats are smarter than dogsmatchObj.group(1) : CatsmatchObj.group(2) : smarter re.search方法re.search 扫描整个字符串并返回第一个成功的匹配。 函数语法：1re.search(pattern, string, flags=0) 函数参数说明： 参数 描述 pattern 匹配的正则表达式 string 要匹配的字符串。 flags 标志位，用于控制正则表达式的匹配方式，如：是否区分大小写，多行匹配等等。 匹配成功re.search方法方法返回一个匹配的对象，否则返回None。 我们可以使用group(num) 或 groups() 匹配对象函数来获取匹配表达式。 匹配对象方法 描述 group(num=0) 匹配的整个表达式的字符串，group() 可以一次输入多个组号，在这种情况下它将返回一个包含那些组所对应值的元组。 groups() 返回一个包含所有小组字符串的元组，从 1 到 所含的小组号。 实例：12345678910111213#!/usr/bin/pythonimport re line = &quot;Cats are smarter than dogs&quot;; matchObj = re.match( r&apos;(.*) are (.*?) .*&apos;, line, re.M|re.I) if matchObj: print &quot;matchObj.group() : &quot;, matchObj.group() print &quot;matchObj.group(1) : &quot;, matchObj.group(1) print &quot;matchObj.group(2) : &quot;, matchObj.group(2)else: print &quot;No match!!&quot; 以上实例执行结果如下： 123matchObj.group() : Cats are smarter than dogsmatchObj.group(1) : CatsmatchObj.group(2) : smarter re.match与re.search的区别re.match只匹配字符串的开始，如果字符串开始不符合正则表达式，则匹配失败，函数返回None；而re.search匹配整个字符串，直到找到一个匹配。 实例：12345678910111213141516#!/usr/bin/pythonimport re line = &quot;Cats are smarter than dogs&quot;; matchObj = re.match( r&apos;dogs&apos;, line, re.M|re.I)if matchObj: print &quot;match --&gt; matchObj.group() : &quot;, matchObj.group()else: print &quot;No match!!&quot; matchObj = re.search( r&apos;dogs&apos;, line, re.M|re.I)if matchObj: print &quot;search --&gt; matchObj.group() : &quot;, matchObj.group()else: print &quot;No match!!&quot; 以上实例运行结果如下： 12No match!!search --&gt; matchObj.group() : dogs 检索和替换 re.subPython 的re模块提供了re.sub用于替换字符串中的匹配项。 语法：1re.sub(pattern, repl, string, max=0) pattern : 正则中的模式字符串。repl : 替换的字符串，也可为一个函数。string : 要被查找替换的原始字符串。count : 模式匹配后替换的最大次数，默认 0 表示替换所有的匹配。 返回的字符串是在字符串中用 RE 最左边不重复的匹配来替换。如果模式没有发现，字符将被没有改变地返回。 可选参数 count 是模式匹配后替换的最大次数；count 必须是非负整数。缺省值是 0 表示替换所有的匹配。 实例：123456789101112#!/usr/bin/pythonimport re phone = &quot;2004-959-559 # This is Phone Number&quot; # Delete Python-style commentsnum = re.sub(r&apos;#.*$&apos;, &quot;&quot;, phone)print &quot;Phone Num : &quot;, num # Remove anything other than digitsnum = re.sub(r&apos;\D&apos;, &quot;&quot;, phone) print &quot;Phone Num : &quot;, num 以上实例执行结果如下： 12Phone Num : 2004-959-559Phone Num : 2004959559 re.findallPython 的re模块提供了re.findall用于找出字符串中所有的匹配项。 实例：12str1 = &quot;This is a apple! This is a pen!&quot;print(re.findall(r&quot;is&quot;, str1)) 执行输出结果为： 1[&apos;is&apos;, &apos;is&apos;, &apos;is&apos;, &apos;is&apos;] repl 参数是一个函数以下实例中将字符串中的匹配的数字乘于 2： 123456789101112#!/usr/bin/python# -*- coding: UTF-8 -*-import re# 将匹配的数字乘于 2def double(matched): value = int(matched.group(&apos;value&apos;)) return str(value * 2)s = &apos;A23G4HFD567&apos;print(re.sub(&apos;(?P&lt;value&gt;\d+)&apos;, double, s)) 执行输出结果为： 1A46G8HFD1134 一些正则实例正则表达式常用5种操作 re.match(pattern, string) # 从头匹配 re.search(pattern, string) # 匹配整个字符串，直到找到一个匹配 re.split() # 将匹配到的格式当做分割点对字符串分割成列表 123&gt;&gt;&gt;m = re.split(&quot;[0-9]&quot;, &quot;alex1rain2jack3helen rachel8&quot;)&gt;&gt;&gt;print(m)输出： [&apos;alex&apos;, &apos;rain&apos;, &apos;jack&apos;, &apos;helen rachel&apos;, &apos;&apos;] re.findall() # 找到所有要匹配的字符并返回列表格式 123&gt;&gt;&gt;m = re.findall(&quot;[0-9]&quot;, &quot;alex1rain2jack3helen rachel8&quot;)&gt;&gt;&gt;print(m)&lt;br&gt;输出：[&apos;1&apos;, &apos;2&apos;, &apos;3&apos;, &apos;8&apos;] re.sub(pattern, repl, string, count,flag) # 替换匹配到的字符 123m=re.sub(&quot;[0-9]&quot;,&quot;|&quot;, &quot;alex1rain2jack3helen rachel8&quot;,count=2 )print(m)输出：alex|rain|jack3helen rachel8 “abbbcccbba” -&gt; “abcba”12345&gt;&gt;&gt; import re&gt;&gt;&gt; p = re.compile(ur&quot;([a-zA-Z])(\1+)&quot;)&gt;&gt;&gt; s = &quot;abbbcccbba&quot;&gt;&gt;&gt; p.sub(ur&quot;\1&quot;,s)&apos;abcba&apos; “abbbcccbba” -&gt; “a1b3c3b2a1”12345&gt;&gt;&gt; import re&gt;&gt;&gt; p = re.compile(ur&quot;([a-zA-Z])(\1*)&quot;)&gt;&gt;&gt; s = &quot;abbbcccbba&quot;&gt;&gt;&gt; p.sub(lambda m: m.group(1)+str(1+len(m.group(2))), s)&apos;a1b3c3b2a1&apos; 手机号123456phone_str = &quot;hey my name is alex, and my phone number is 13651054607, please call me if you are pretty!&quot;phone_str2 = &quot;hey my name is alex, and my phone number is 18651054604, please call me if you are pretty!&quot; m = re.search(&quot;(1)([358]\d&#123;9&#125;)&quot;,phone_str2)if m: print(m.group()) 匹配IP V412345ip_addr = &quot;inet 192.168.60.223 netmask 0xffffff00 broadcast 192.168.60.255&quot; m = re.search(&quot;\d&#123;1,3&#125;\.\d&#123;1,3&#125;\.\d&#123;1,3&#125;\.\d&#123;1,3&#125;&quot;, ip_addr) print(m.group()) 分组匹配地址12345678910111213141516171819contactInfo = &apos;Oldboy School, Beijing Changping Shahe: 010-8343245&apos;match = re.search(r&apos;(\w+), (\w+): (\S+)&apos;, contactInfo) #分组&quot;&quot;&quot;&gt;&gt;&gt; match.group(1) &apos;Doe&apos; &gt;&gt;&gt; match.group(2) &apos;John&apos; &gt;&gt;&gt; match.group(3) &apos;555-1212&apos;&quot;&quot;&quot;match = re.search(r&apos;(?P&lt;last&gt;\w+), (?P&lt;first&gt;\w+): (?P&lt;phone&gt;\S+)&apos;, contactInfo)&quot;&quot;&quot; &gt;&gt;&gt; match.group(&apos;last&apos;) &apos;Doe&apos; &gt;&gt;&gt; match.group(&apos;first&apos;) &apos;John&apos; &gt;&gt;&gt; match.group(&apos;phone&apos;) &apos;555-1212&apos;&quot;&quot;&quot; 匹配email1234email = &quot;alex.li@126.com http://www.oldboyedu.com&quot; m = re.search(r&quot;[0-9.a-z]&#123;0,26&#125;@[0-9.a-z]&#123;0,20&#125;.[0-9a-z]&#123;0,8&#125;&quot;, email)print(m.group()) 正则表达式修饰符 - 可选标志正则表达式可以包含一些可选标志修饰符来控制匹配的模式。修饰符被指定为一个可选的标志。多个标志可以通过按位 OR(|) 它们来指定。如 re.I | re.M 被设置成 I 和 M 标志： 修饰符 描述 re.I 使匹配对大小写不敏感 re.L 做本地化识别（locale-aware）匹配 re.M 多行匹配，影响 ^ 和 $ re.S 使 . 匹配包括换行在内的所有字符 re.U 根据Unicode字符集解析字符。这个标志影响 \w, \W, \b, \B. re.X 该标志通过给予你更灵活的格式以便你将正则表达式写得更易于理解。 正则表达式模式模式字符串使用特殊的语法来表示一个正则表达式： 字母和数字表示他们自身。一个正则表达式模式中的字母和数字匹配同样的字符串。 多数字母和数字前加一个反斜杠时会拥有不同的含义。 标点符号只有被转义时才匹配自身，否则它们表示特殊的含义。 反斜杠本身需要使用反斜杠转义。 由于正则表达式通常都包含反斜杠，所以你最好使用原始字符串来表示它们。模式元素(如 r’/t’，等价于’//t’)匹配相应的特殊字符。 下表列出了正则表达式模式语法中的特殊元素。如果你使用模式的同时提供了可选的标志参数，某些模式元素的含义会改变。 模式 描述 ^ 匹配字符串的开头 $ 匹配字符串的末尾。 . 匹配任意字符，除了换行符，当re.DOTALL标记被指定时，则可以匹配包括换行符的任意字符。 […] 用来表示一组字符,单独列出：[amk] 匹配 ‘a’，’m’或’k’ [^…] 不在[]中的字符：[^abc] 匹配除了a,b,c之外的字符。 re* 匹配0个或多个的表达式。 re+ 匹配1个或多个的表达式。 re? 匹配0个或1个由前面的正则表达式定义的片段，贪婪方式 re{ n} re{ n,} 精确匹配n个前面表达式。 re{ n, m} 匹配 n 到 m 次由前面的正则表达式定义的片段，贪婪方式 a丨b 匹配a或b (re) G匹配括号内的表达式，也表示一个组 (?imx) 正则表达式包含三种可选标志：i, m, 或 x 。只影响括号中的区域。 (?-imx) 正则表达式关闭 i, m, 或 x 可选标志。只影响括号中的区域。 (?: re) 类似 (…), 但是不表示一个组 (?imx: re) 在括号中使用i, m, 或 x 可选标志 (?-imx: re) 在括号中不使用i, m, 或 x 可选标志 (?#…) 注释. (?= re) 前向肯定界定符。如果所含正则表达式，以 … 表示，在当前位置成功匹配时成功，否则失败。但一旦所含表达式已经尝试，匹配引擎根本没有提高；模式的剩余部分还要尝试界定符的右边。 (?! re) 前向否定界定符。与肯定界定符相反；当所含表达式不能在字符串当前位置匹配时成功 (?&gt; re) 匹配的独立模式，省去回溯。 \w 匹配字母数字 \W 匹配非字母数字 \s 匹配任意空白字符，等价于 [\t\n\r\f]. \S 匹配任意非空字符 \d 匹配任意数字，等价于 [0-9]. \D 匹配任意非数字 \A 匹配字符串开始 \Z 匹配字符串结束，如果是存在换行，只匹配到换行前的结束字符串。c \z 匹配字符串结束 \G 匹配最后匹配完成的位置。 \b 匹配一个单词边界，也就是指单词和空格间的位置。例如， ‘er\b’ 可以匹配”never” 中的 ‘er’，但不能匹配 “verb” 中的 ‘er’。 \B 匹配非单词边界。’er\B’ 能匹配 “verb” 中的 ‘er’，但不能匹配 “never” 中的 ‘er’。 \n, \t, 等. 匹配一个换行符。匹配一个制表符。等 \1…\9 匹配第n个分组的子表达式。 \10 匹配第n个分组的子表达式，如果它经匹配。否则指的是八进制字符码的表达式。/ 正则表达式实例字符匹配 实例 描述 python 匹配 “python”. 字符类 实例 描述 [Pp]ython 匹配 “Python” 或 “python” rub[ye] 匹配 “ruby” 或 “rube” [aeiou] 匹配中括号内的任意一个字母 [0-9] 匹配任何数字。类似于 [0123456789] [a-z] 匹配任何小写字母 [A-Z] 匹配任何大写字母 [a-zA-Z0-9] 匹配任何字母及数字 [^aeiou] 除了aeiou字母以外的所有字符 [^0-9] 匹配除了数字外的字符 特殊字符类 实例 描述 . 匹配除 “\n” 之外的任何单个字符。要匹配包括 ‘\n’ 在内的任何字符，请使用象 ‘[.\n]’ 的模式。 \d 匹配一个数字字符。等价于 [0-9]。 \D 匹配一个非数字字符。等价于 [^0-9]。 \s 匹配任何空白字符，包括空格、制表符、换页符等等。等价于 [ \f\n\r\t\v]。 \S 匹配任何非空白字符。等价于 [^ \f\n\r\t\v]。 \w 匹配包括下划线的任何单词字符。等价于’[A-Za-z0-9_]’。 \W 匹配任何非单词字符。等价于 ‘[^A-Za-z0-9_]’。]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[python模块-random]]></title>
    <url>%2Fposts%2F1901393b.html</url>
    <content type="text"><![CDATA[摘要本文记录random常用方法 random123456789101112131415161718192021222324#!/usr/bin/env python#_*_encoding: utf-8_*_import randomprint (random.random()) #0.6445010863311293 #random.random()用于生成一个0到1的随机符点数: 0 &lt;= n &lt; 1.0print (random.randint(1,7)) #4#random.randint()的函数原型为：random.randint(a, b)，用于生成一个指定范围内的整数。# 其中参数a是下限，参数b是上限，生成的随机数n: a &lt;= n &lt;= bprint (random.randrange(1,10)) #5#random.randrange的函数原型为：random.randrange([start], stop[, step])，# 从指定范围内，按指定基数递增的集合中 获取一个随机数。如：random.randrange(10, 100, 2)，# 结果相当于从[10, 12, 14, 16, ... 96, 98]序列中获取一个随机数。# random.randrange(10, 100, 2)在结果上与 random.choice(range(10, 100, 2) 等效。print(random.choice(&apos;liukuni&apos;)) #i#random.choice从序列中获取一个随机元素。# 其函数原型为：random.choice(sequence)。参数sequence表示一个有序类型。# 这里要说明一下：sequence在python不是一种特定的类型，而是泛指一系列的类型。# list, tuple, 字符串都属于sequence。有关sequence可以查看python手册数据模型这一章。# 下面是使用choice的一些例子：print(random.choice(&quot;学习Python&quot;))#学print(random.choice([&quot;JGood&quot;,&quot;is&quot;,&quot;a&quot;,&quot;handsome&quot;,&quot;boy&quot;])) #Listprint(random.choice((&quot;Tuple&quot;,&quot;List&quot;,&quot;Dict&quot;))) #Listprint(random.sample([1,2,3,4,5],3)) #[1, 2, 5]#random.sample的函数原型为：random.sample(sequence, k)，从指定序列中随机获取指定长度的片断。sample函数不会修改原有序列。 实际使用123456789101112131415161718192021222324252627#!/usr/bin/env python# encoding: utf-8import randomimport string#随机整数：print( random.randint(0,99)) #70 #随机选取0到100间的偶数：print(random.randrange(0, 101, 2)) #4 #随机浮点数：print( random.random()) #0.2746445568079129print(random.uniform(1, 10)) #9.887001463194844 #随机字符：print(random.choice(&apos;abcdefg&amp;#%^*f&apos;)) #f #多个字符中选取特定数量的字符：print(random.sample(&apos;abcdefghij&apos;,3)) #[&apos;f&apos;, &apos;h&apos;, &apos;d&apos;] #随机选取字符串：print( random.choice ( [&apos;apple&apos;, &apos;pear&apos;, &apos;peach&apos;, &apos;orange&apos;, &apos;lemon&apos;] )) #apple#洗牌#items = [1,2,3,4,5,6,7]print(items) #[1, 2, 3, 4, 5, 6, 7]random.shuffle(items)print(items) #[1, 4, 7, 2, 5, 3, 6] 生成随机验证码12345678910import randomcheckcode = &apos;&apos;for i in range(4): current = random.randrange(0,4) if current != i: temp = chr(random.randint(65,90)) else: temp = random.randint(0,9) checkcode += str(temp)print (checkcode)]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[python模块-os、sys]]></title>
    <url>%2Fposts%2F5d02f982.html</url>
    <content type="text"><![CDATA[摘要本文记录一些python中os和sys模块的常用方法 os123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107## diros.getcwd()#获取当前工作目录，即当前python脚本工作的目录路径os.chdir(&quot;dirname&quot;)#改变当前脚本工作目录；相当于shell下cdos.curdir#返回当前目录: (&apos;.&apos;)os.pardir#获取当前目录的父目录字符串名：(&apos;..&apos;)os.makedirs(&apos;dirname1/dirname2&apos;)#可生成多层递归目录os.removedirs(&apos;dirname1&apos;)#若目录为空，则删除，并递归到上一级目录，如若也为空，则删除，依此类推os.mkdir(&apos;dirname&apos;)#生成单级目录；相当于shell中mkdir dirnameos.rmdir(&apos;dirname&apos;)#删除单级空目录，若目录不为空则无法删除，报错；相当于shell中rmdir dirnameos.listdir(&apos;dirname&apos;)#列出指定目录下的所有文件和子目录，包括隐藏文件，并以列表方式打印## fileos.remove()#删除一个文件os.rename(&quot;oldname&quot;,&quot;newname&quot;)#重命名文件/目录os.stat(&apos;path/filename&apos;)#获取文件/目录信息## otheros.sep#输出操作系统特定的路径分隔符，win下为&quot;\\&quot;,Linux下为&quot;/&quot;os.linesep#输出当前平台使用的行终止符，win下为&quot;\t\n&quot;,Linux下为&quot;\n&quot;os.pathsep#输出用于分割文件路径的字符串os.name#输出字符串指示当前使用平台。win-&gt;&apos;nt&apos;; Linux-&gt;&apos;posix&apos;os.system(&quot;bash command&quot;)#运行shell命令，直接显示os.environ#获取系统环境变量## os.pathos.path.isfile(path)#如果path是一个存在的文件，返回True。否则返回Falseos.path.isdir(path)#如果path是一个存在的目录，则返回True。否则返回Falseos.path.abspath(path)#返回绝对路径os.path.basename(path)# 返回path最后的文件名。如何path以／或\结尾，那么就会返回空值。即os.path.split(path)的第二个元素os.path.commonprefix(list)#返回list(多个路径)中，所有path共有的最长的路径。os.path.dirname(path)#返回path的目录。其实就是os.path.split(path)的第一个元素os.path.exists(path)#如果path存在，返回True；如果path不存在，返回Falseos.path.lexists#路径存在则返回True,路径损坏也返回Trueos.path.expanduser(path)#把path中包含的&quot;~&quot;和&quot;~user&quot;转换成用户目录os.path.expandvars(path)#根据环境变量的值替换path中包含的”$name”和”$&#123;name&#125;”os.path.getatime(path)#返回path所指向的文件或者目录的最后存取时间os.path.getmtime(path)#返回path所指向的文件或者目录的最后修改时间os.path.getctime(path)#返回path的大小os.path.getsize(path)#返回文件大小，如果文件不存在就返回错误os.path.isabs(path)#判断是否为绝对路径os.path.islink(path)#判断路径是否为链接os.path.ismount(path)#判断路径是否为挂载点（）os.path.join(path1[, path2[, ...]])#把目录和文件名合成一个路径os.path.normcase(path)#转换path的大小写和斜杠os.path.normpath(path)#规范path字符串形式os.path.realpath(path)#返回path的真实路径os.path.relpath(path[, start])#从start开始计算相对路径os.path.samefile(path1, path2)#判断目录或文件是否相同os.path.sameopenfile(fp1, fp2)#判断fp1和fp2是否指向同一文件os.path.samestat(stat1, stat2)#判断stat tuple stat1和stat2是否指向同一个文件os.path.split(path)#把路径分割成dirname和basename，返回一个元组os.path.splitdrive(path)#一般用在windows下，返回驱动器名和路径组成的元组os.path.splitext(path)#分割路径，返回路径名和文件扩展名的元组os.path.splitunc(path)#把路径分割为加载点与文件os.path.walk(path, visit, arg)#遍历path，进入每个目录都调用visit函数，visit函数必须有3个参数(arg, dirname, names)，dirname表示当前目录的目录名，names代表当前目录下的所有文件名，args则为walk的第三个参数os.path.supports_unicode_filenames#设置是否支持unicode路径名 123456789101112在Linux和Mac平台上，该函数会原样返回path，在windows平台上会将路径中所有字符转换为小写，并将所有斜杠转换为饭斜杠。&gt;&gt;&gt; os.path.normcase(&apos;c:/windows\\system32\\&apos;) &apos;c:\\windows\\system32\\&apos; 规范化路径，如..和/&gt;&gt;&gt; os.path.normpath(&apos;c://windows\\System32\\../Temp/&apos;) &apos;c:\\windows\\Temp&apos; &gt;&gt;&gt; a=&apos;/Users/jieli/test1/\\\a1/\\\\aa.py/../..&apos;&gt;&gt;&gt; print(os.path.normpath(a))/Users/jieli/test1 123456简单使用import oscur_path = os.path.dirname(os.path.realpath(__file__)) #当前路径print(cur_path)filename = cur_path + &quot;/scripts.log&quot; #带上文件路径print(filename) 12345678910111213141516os路径处理#方式一：推荐使用import os#具体应用import os,syspossible_topdir = os.path.normpath(os.path.join( os.path.abspath(__file__), os.pardir, #上一级 os.pardir, os.pardir))sys.path.insert(0,possible_topdir)#方式二：不推荐使用os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__)))) sys12345678sys.argv 命令行参数List，第一个元素是程序本身路径sys.exit(n) 退出程序，正常退出时exit(0)sys.version 获取Python解释程序的版本信息sys.maxint 最大的Int值sys.path 返回模块的搜索路径，初始化时使用PYTHONPATH环境变量的值sys.platform 返回操作系统平台名称sys.stdout.write(&apos;please:&apos;)val = sys.stdin.readline()[:-1] 模拟打印进度条 12345678910111213141516171819202122232425262728293031323334353637383940414243#=========知识储备==========#进度条的效果[# ][## ][### ][#### ]#指定宽度print(&apos;[%-15s]&apos; %&apos;#&apos;)print(&apos;[%-15s]&apos; %&apos;##&apos;)print(&apos;[%-15s]&apos; %&apos;###&apos;)print(&apos;[%-15s]&apos; %&apos;####&apos;)#打印%print(&apos;%s%%&apos; %(100)) #第二个%号代表取消第一个%的特殊意义#可传参来控制宽度print(&apos;[%%-%ds]&apos; %50) #[%-50s]print((&apos;[%%-%ds]&apos; %50) %&apos;#&apos;)print((&apos;[%%-%ds]&apos; %50) %&apos;##&apos;)print((&apos;[%%-%ds]&apos; %50) %&apos;###&apos;)#=========实现打印进度条函数==========import sysimport timedef progress(percent,width=50): if percent &gt;= 1: percent=1 show_str=(&apos;[%%-%ds]&apos; %width) %(int(width*percent)*&apos;#&apos;) print(&apos;\r%s %d%%&apos; %(show_str,int(100*percent)),file=sys.stdout,flush=True,end=&apos;&apos;)#=========应用==========data_size=1025recv_size=0while recv_size &lt; data_size: time.sleep(0.1) #模拟数据的传输延迟 recv_size+=1024 #每次收1024 percent=recv_size/data_size #接收的比例 progress(percent,width=70) #进度条的宽度70]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[python模块-logging]]></title>
    <url>%2Fposts%2F8d289766.html</url>
    <content type="text"><![CDATA[摘要本文记录logging模块的使用方法 logging日志级别123456CRITICAL = 50 #FATAL = CRITICALERROR = 40WARNING = 30 #WARN = WARNINGINFO = 20DEBUG = 10NOTSET = 0 #不设置 默认级别为warning，默认打印到终端12345678910111213import logginglogging.debug(&apos;调试debug&apos;)logging.info(&apos;消息info&apos;)logging.warning(&apos;警告warn&apos;)logging.error(&apos;错误error&apos;)logging.critical(&apos;严重critical&apos;)&apos;&apos;&apos;WARNING:root:警告warnERROR:root:错误errorCRITICAL:root:严重critical&apos;&apos;&apos; 为logging模块指定全局配置，针对所有logger有效，控制打印到文件中12345678910111213141516171819202122232425262728可在logging.basicConfig()函数中通过具体参数来更改logging模块默认行为，可用参数有filename：用指定的文件名创建FiledHandler（后边会具体讲解handler的概念），这样日志会被存储在指定的文件中。filemode：文件打开方式，在指定了filename时使用这个参数，默认值为“a”还可指定为“w”。format：指定handler使用的日志显示格式。 datefmt：指定日期时间格式。 level：设置rootlogger（后边会讲解具体概念）的日志级别 stream：用指定的stream创建StreamHandler。可以指定输出到sys.stderr,sys.stdout或者文件，默认为sys.stderr。若同时列出了filename和stream两个参数，则stream参数会被忽略。#格式%(name)s：Logger的名字，并非用户名，详细查看%(levelno)s：数字形式的日志级别%(levelname)s：文本形式的日志级别%(pathname)s：调用日志输出函数的模块的完整路径名，可能没有%(filename)s：调用日志输出函数的模块的文件名%(module)s：调用日志输出函数的模块名%(funcName)s：调用日志输出函数的函数名%(lineno)d：调用日志输出函数的语句所在的代码行%(created)f：当前时间，用UNIX标准的表示时间的浮 点数表示%(relativeCreated)d：输出日志信息时的，自Logger创建以 来的毫秒数%(asctime)s：字符串形式的当前时间。默认格式是 “2003-07-08 16:49:45,896”。逗号后面的是毫秒%(thread)d：线程ID。可能没有%(threadName)s：线程名。可能没有%(process)d：进程ID。可能没有%(message)s：用户输出的消息logging.basicConfig() 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849#======介绍可在logging.basicConfig()函数中可通过具体参数来更改logging模块默认行为，可用参数有filename：用指定的文件名创建FiledHandler（后边会具体讲解handler的概念），这样日志会被存储在指定的文件中。filemode：文件打开方式，在指定了filename时使用这个参数，默认值为“a”还可指定为“w”。format：指定handler使用的日志显示格式。datefmt：指定日期时间格式。level：设置rootlogger（后边会讲解具体概念）的日志级别stream：用指定的stream创建StreamHandler。可以指定输出到sys.stderr,sys.stdout或者文件，默认为sys.stderr。若同时列出了filename和stream两个参数，则stream参数会被忽略。format参数中可能用到的格式化串：%(name)s Logger的名字%(levelno)s 数字形式的日志级别%(levelname)s 文本形式的日志级别%(pathname)s 调用日志输出函数的模块的完整路径名，可能没有%(filename)s 调用日志输出函数的模块的文件名%(module)s 调用日志输出函数的模块名%(funcName)s 调用日志输出函数的函数名%(lineno)d 调用日志输出函数的语句所在的代码行%(created)f 当前时间，用UNIX标准的表示时间的浮 点数表示%(relativeCreated)d 输出日志信息时的，自Logger创建以 来的毫秒数%(asctime)s 字符串形式的当前时间。默认格式是 “2003-07-08 16:49:45,896”。逗号后面的是毫秒%(thread)d 线程ID。可能没有%(threadName)s 线程名。可能没有%(process)d 进程ID。可能没有%(message)s用户输出的消息#========使用import logginglogging.basicConfig(filename=&apos;access.log&apos;, format=&apos;%(asctime)s - %(name)s - %(levelname)s -%(module)s: %(message)s&apos;, datefmt=&apos;%Y-%m-%d %H:%M:%S %p&apos;, level=10)logging.debug(&apos;调试debug&apos;)logging.info(&apos;消息info&apos;)logging.warning(&apos;警告warn&apos;)logging.error(&apos;错误error&apos;)logging.critical(&apos;严重critical&apos;)#========结果access.log内容:2017-07-28 20:32:17 PM - root - DEBUG -test: 调试debug2017-07-28 20:32:17 PM - root - INFO -test: 消息info2017-07-28 20:32:17 PM - root - WARNING -test: 警告warn2017-07-28 20:32:17 PM - root - ERROR -test: 错误error2017-07-28 20:32:17 PM - root - CRITICAL -test: 严重criticalpart2: 可以为logging模块指定模块级的配置,即所有logger的配置 logging模块的Formatter，Handler，Logger，Filter对象1234567#logger：产生日志的对象#Filter：过滤日志的对象#Handler：接收日志然后控制打印到不同的地方，FileHandler用来打印到文件中，StreamHandler用来打印到终端#Formatter对象：可以定制不同的日志格式对象，然后绑定给不同的Handler对象使用，以此来控制不同的Handler的日志格式 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647&apos;&apos;&apos;critical=50error =40warning =30info = 20debug =10&apos;&apos;&apos;import logging#1、logger对象：负责产生日志，然后交给Filter过滤，然后交给不同的Handler输出logger=logging.getLogger(__file__)#2、Filter对象：不常用，略#3、Handler对象：接收logger传来的日志，然后控制输出h1=logging.FileHandler(&apos;t1.log&apos;) #打印到文件h2=logging.FileHandler(&apos;t2.log&apos;) #打印到文件h3=logging.StreamHandler() #打印到终端#4、Formatter对象：日志格式formmater1=logging.Formatter(&apos;%(asctime)s - %(name)s - %(levelname)s -%(module)s: %(message)s&apos;, datefmt=&apos;%Y-%m-%d %H:%M:%S %p&apos;,)formmater2=logging.Formatter(&apos;%(asctime)s : %(message)s&apos;, datefmt=&apos;%Y-%m-%d %H:%M:%S %p&apos;,)formmater3=logging.Formatter(&apos;%(name)s %(message)s&apos;,)#5、为Handler对象绑定格式h1.setFormatter(formmater1)h2.setFormatter(formmater2)h3.setFormatter(formmater3)#6、将Handler添加给logger并设置日志级别logger.addHandler(h1)logger.addHandler(h2)logger.addHandler(h3)logger.setLevel(10)#7、测试logger.debug(&apos;debug&apos;)logger.info(&apos;info&apos;)logger.warning(&apos;warning&apos;)logger.error(&apos;error&apos;)logger.critical(&apos;critical&apos;) Logger与Handler的级别logger是第一级过滤，然后才能到handler，我们可以给logger和handler同时设置level，但是需要注意的是 1234567891011121314151617181920212223Logger is also the first to filter the message based on a level — if you set the logger to INFO, and all handlers to DEBUG, you still won&apos;t receive DEBUG messages on handlers — they&apos;ll be rejected by the logger itself. If you set logger to DEBUG, but all handlers to INFO, you won&apos;t receive any DEBUG messages either — because while the logger says &quot;ok, process this&quot;, the handlers reject it (DEBUG &lt; INFO).#验证import loggingform=logging.Formatter(&apos;%(asctime)s - %(name)s - %(levelname)s -%(module)s: %(message)s&apos;, datefmt=&apos;%Y-%m-%d %H:%M:%S %p&apos;,)ch=logging.StreamHandler()ch.setFormatter(form)# ch.setLevel(10)ch.setLevel(20)l1=logging.getLogger(&apos;root&apos;)# l1.setLevel(20)l1.setLevel(10)l1.addHandler(ch)l1.debug(&apos;l1 debug&apos;)重要，重要，重要！！！ Logger的继承（了解）123456789101112131415161718192021222324252627282930import loggingformatter=logging.Formatter(&apos;%(asctime)s - %(name)s - %(levelname)s -%(module)s: %(message)s&apos;, datefmt=&apos;%Y-%m-%d %H:%M:%S %p&apos;,)ch=logging.StreamHandler()ch.setFormatter(formatter)logger1=logging.getLogger(&apos;root&apos;)logger2=logging.getLogger(&apos;root.child1&apos;)logger3=logging.getLogger(&apos;root.child1.child2&apos;)logger1.addHandler(ch)logger2.addHandler(ch)logger3.addHandler(ch)logger1.setLevel(10)logger2.setLevel(10)logger3.setLevel(10)logger1.debug(&apos;log1 debug&apos;)logger2.debug(&apos;log2 debug&apos;)logger3.debug(&apos;log3 debug&apos;)&apos;&apos;&apos;2017-07-28 22:22:05 PM - root - DEBUG -test: log1 debug2017-07-28 22:22:05 PM - root.child1 - DEBUG -test: log2 debug2017-07-28 22:22:05 PM - root.child1 - DEBUG -test: log2 debug2017-07-28 22:22:05 PM - root.child1.child2 - DEBUG -test: log3 debug2017-07-28 22:22:05 PM - root.child1.child2 - DEBUG -test: log3 debug2017-07-28 22:22:05 PM - root.child1.child2 - DEBUG -test: log3 debug&apos;&apos;&apos; 应用logging配置文件123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778&quot;&quot;&quot;logging配置&quot;&quot;&quot;import osimport logging.config# 定义三种日志输出格式 开始standard_format = &apos;[%(asctime)s][%(threadName)s:%(thread)d][task_id:%(name)s][%(filename)s:%(lineno)d]&apos; \ &apos;[%(levelname)s][%(message)s]&apos; #其中name为getlogger指定的名字simple_format = &apos;[%(levelname)s][%(asctime)s][%(filename)s:%(lineno)d]%(message)s&apos;id_simple_format = &apos;[%(levelname)s][%(asctime)s] %(message)s&apos;# 定义日志输出格式 结束logfile_dir = os.path.dirname(os.path.abspath(__file__)) # log文件的目录logfile_name = &apos;all2.log&apos; # log文件名# 如果不存在定义的日志目录就创建一个if not os.path.isdir(logfile_dir): os.mkdir(logfile_dir)# log文件的全路径logfile_path = os.path.join(logfile_dir, logfile_name)# log配置字典LOGGING_DIC = &#123; &apos;version&apos;: 1, &apos;disable_existing_loggers&apos;: False, &apos;formatters&apos;: &#123; &apos;standard&apos;: &#123; &apos;format&apos;: standard_format &#125;, &apos;simple&apos;: &#123; &apos;format&apos;: simple_format &#125;, &#125;, &apos;filters&apos;: &#123;&#125;, &apos;handlers&apos;: &#123; #打印到终端的日志 &apos;console&apos;: &#123; &apos;level&apos;: &apos;DEBUG&apos;, &apos;class&apos;: &apos;logging.StreamHandler&apos;, # 打印到屏幕 &apos;formatter&apos;: &apos;simple&apos; &#125;, #打印到文件的日志,收集info及以上的日志 &apos;default&apos;: &#123; &apos;level&apos;: &apos;DEBUG&apos;, &apos;class&apos;: &apos;logging.handlers.RotatingFileHandler&apos;, # 保存到文件 &apos;formatter&apos;: &apos;standard&apos;, &apos;filename&apos;: logfile_path, # 日志文件 &apos;maxBytes&apos;: 1024*1024*5, # 日志大小 5M &apos;backupCount&apos;: 5, &apos;encoding&apos;: &apos;utf-8&apos;, # 日志文件的编码，再也不用担心中文log乱码了 &#125;, &#125;, &apos;loggers&apos;: &#123; #logging.getLogger(__name__)拿到的logger配置 &apos;&apos;: &#123; &apos;handlers&apos;: [&apos;default&apos;, &apos;console&apos;], # 这里把上面定义的两个handler都加上，即log数据既写入文件又打印到屏幕 &apos;level&apos;: &apos;DEBUG&apos;, &apos;propagate&apos;: True, # 向上（更高level的logger）传递 &#125;, &#125;,&#125;def load_my_logging_cfg(): logging.config.dictConfig(LOGGING_DIC) # 导入上面定义的logging配置 logger = logging.getLogger(__name__) # 生成一个log实例 logger.info(&apos;It works!&apos;) # 记录该文件的运行状态if __name__ == &apos;__main__&apos;: load_my_logging_cfg() 使用123456789101112131415161718192021222324&quot;&quot;&quot;MyLogging Test&quot;&quot;&quot;import timeimport loggingimport my_logging # 导入自定义的logging配置logger = logging.getLogger(__name__) # 生成logger实例def demo(): logger.debug(&quot;start range... time:&#123;&#125;&quot;.format(time.time())) logger.info(&quot;中文测试开始。。。&quot;) for i in range(10): logger.debug(&quot;i:&#123;&#125;&quot;.format(i)) time.sleep(0.2) else: logger.debug(&quot;over range... time:&#123;&#125;&quot;.format(time.time())) logger.info(&quot;中文测试结束。。。&quot;)if __name__ == &quot;__main__&quot;: my_logging.load_my_logging_cfg() # 在你程序文件的入口加载自定义logging配置 demo() 关于如何拿到logger对象的详细解释12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849注意注意注意：#1、有了上述方式我们的好处是：所有与logging模块有关的配置都写到字典中就可以了，更加清晰，方便管理#2、我们需要解决的问题是： 1、从字典加载配置：logging.config.dictConfig(settings.LOGGING_DIC) 2、拿到logger对象来产生日志 logger对象都是配置到字典的loggers 键对应的子字典中的 按照我们对logging模块的理解，要想获取某个东西都是通过名字，也就是key来获取的 于是我们要获取不同的logger对象就是 logger=logging.getLogger(&apos;loggers子字典的key名&apos;) 但问题是：如果我们想要不同logger名的logger对象都共用一段配置，那么肯定不能在loggers子字典中定义n个key &apos;loggers&apos;: &#123; &apos;l1&apos;: &#123; &apos;handlers&apos;: [&apos;default&apos;, &apos;console&apos;], # &apos;level&apos;: &apos;DEBUG&apos;, &apos;propagate&apos;: True, # 向上（更高level的logger）传递 &#125;, &apos;l2: &#123; &apos;handlers&apos;: [&apos;default&apos;, &apos;console&apos; ], &apos;level&apos;: &apos;DEBUG&apos;, &apos;propagate&apos;: False, # 向上（更高level的logger）传递 &#125;, &apos;l3&apos;: &#123; &apos;handlers&apos;: [&apos;default&apos;, &apos;console&apos;], # &apos;level&apos;: &apos;DEBUG&apos;, &apos;propagate&apos;: True, # 向上（更高level的logger）传递 &#125;,&#125; #我们的解决方式是，定义一个空的key &apos;loggers&apos;: &#123; &apos;&apos;: &#123; &apos;handlers&apos;: [&apos;default&apos;, &apos;console&apos;], &apos;level&apos;: &apos;DEBUG&apos;, &apos;propagate&apos;: True, &#125;,&#125;这样我们再取logger对象时logging.getLogger(__name__)，不同的文件__name__不同，这保证了打印日志时标识信息不同，但是拿着该名字去loggers里找key名时却发现找不到，于是默认使用key=&apos;&apos;的配置 另外一个django的配置，瞄一眼就可以，跟上面的一样123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081#logging_config.pyLOGGING = &#123; &apos;version&apos;: 1, &apos;disable_existing_loggers&apos;: False, &apos;formatters&apos;: &#123; &apos;standard&apos;: &#123; &apos;format&apos;: &apos;[%(asctime)s][%(threadName)s:%(thread)d][task_id:%(name)s][%(filename)s:%(lineno)d]&apos; &apos;[%(levelname)s][%(message)s]&apos; &#125;, &apos;simple&apos;: &#123; &apos;format&apos;: &apos;[%(levelname)s][%(asctime)s][%(filename)s:%(lineno)d]%(message)s&apos; &#125;, &apos;collect&apos;: &#123; &apos;format&apos;: &apos;%(message)s&apos; &#125; &#125;, &apos;filters&apos;: &#123; &apos;require_debug_true&apos;: &#123; &apos;()&apos;: &apos;django.utils.log.RequireDebugTrue&apos;, &#125;, &#125;, &apos;handlers&apos;: &#123; #打印到终端的日志 &apos;console&apos;: &#123; &apos;level&apos;: &apos;DEBUG&apos;, &apos;filters&apos;: [&apos;require_debug_true&apos;], &apos;class&apos;: &apos;logging.StreamHandler&apos;, &apos;formatter&apos;: &apos;simple&apos; &#125;, #打印到文件的日志,收集info及以上的日志 &apos;default&apos;: &#123; &apos;level&apos;: &apos;INFO&apos;, &apos;class&apos;: &apos;logging.handlers.RotatingFileHandler&apos;, # 保存到文件，自动切 &apos;filename&apos;: os.path.join(BASE_LOG_DIR, &quot;xxx_info.log&quot;), # 日志文件 &apos;maxBytes&apos;: 1024 * 1024 * 5, # 日志大小 5M &apos;backupCount&apos;: 3, &apos;formatter&apos;: &apos;standard&apos;, &apos;encoding&apos;: &apos;utf-8&apos;, &#125;, #打印到文件的日志:收集错误及以上的日志 &apos;error&apos;: &#123; &apos;level&apos;: &apos;ERROR&apos;, &apos;class&apos;: &apos;logging.handlers.RotatingFileHandler&apos;, # 保存到文件，自动切 &apos;filename&apos;: os.path.join(BASE_LOG_DIR, &quot;xxx_err.log&quot;), # 日志文件 &apos;maxBytes&apos;: 1024 * 1024 * 5, # 日志大小 5M &apos;backupCount&apos;: 5, &apos;formatter&apos;: &apos;standard&apos;, &apos;encoding&apos;: &apos;utf-8&apos;, &#125;, #打印到文件的日志 &apos;collect&apos;: &#123; &apos;level&apos;: &apos;INFO&apos;, &apos;class&apos;: &apos;logging.handlers.RotatingFileHandler&apos;, # 保存到文件，自动切 &apos;filename&apos;: os.path.join(BASE_LOG_DIR, &quot;xxx_collect.log&quot;), &apos;maxBytes&apos;: 1024 * 1024 * 5, # 日志大小 5M &apos;backupCount&apos;: 5, &apos;formatter&apos;: &apos;collect&apos;, &apos;encoding&apos;: &quot;utf-8&quot; &#125; &#125;, &apos;loggers&apos;: &#123; #logging.getLogger(__name__)拿到的logger配置 &apos;&apos;: &#123; &apos;handlers&apos;: [&apos;default&apos;, &apos;console&apos;, &apos;error&apos;], &apos;level&apos;: &apos;DEBUG&apos;, &apos;propagate&apos;: True, &#125;, #logging.getLogger(&apos;collect&apos;)拿到的logger配置 &apos;collect&apos;: &#123; &apos;handlers&apos;: [&apos;console&apos;, &apos;collect&apos;], &apos;level&apos;: &apos;INFO&apos;, &#125; &#125;,&#125;# -----------# 用法:拿到俩个loggerlogger = logging.getLogger(__name__) #线上正常的日志collect_logger = logging.getLogger(&quot;collect&quot;) #领导说,需要为领导们单独定制领导们看的日志 文件自动截断12345678910111213141516171819202122import loggingfrom logging import handlerslogger = logging.getLogger(__name__)log_file = &quot;timelog.log&quot;#fh = handlers.RotatingFileHandler(filename=log_file,maxBytes=10,backupCount=3)fh = handlers.TimedRotatingFileHandler(filename=log_file,when=&quot;S&quot;,interval=5,backupCount=3)formatter = logging.Formatter(&apos;%(asctime)s %(module)s:%(lineno)d %(message)s&apos;)fh.setFormatter(formatter)logger.addHandler(fh)logger.warning(&quot;test1&quot;)logger.warning(&quot;test12&quot;)logger.warning(&quot;test13&quot;)logger.warning(&quot;test14&quot;) other12345678910111213141516171819202122232425262728293031import logging #create loggerlogger = logging.getLogger(&apos;TEST-LOG&apos;)logger.setLevel(logging.DEBUG) # create console handler and set level to debugch = logging.StreamHandler()ch.setLevel(logging.DEBUG) # create file handler and set level to warningfh = logging.FileHandler(&quot;access.log&quot;)fh.setLevel(logging.WARNING)# create formatterformatter = logging.Formatter(&apos;%(asctime)s - %(name)s - %(levelname)s - %(message)s&apos;) # add formatter to ch and fhch.setFormatter(formatter)fh.setFormatter(formatter) # add ch and fh to loggerlogger.addHandler(ch)logger.addHandler(fh) # &apos;application&apos; codelogger.debug(&apos;debug message&apos;)logger.info(&apos;info message&apos;)logger.warn(&apos;warn message&apos;)logger.error(&apos;error message&apos;)logger.critical(&apos;critical message&apos;)]]></content>
      <categories>
        <category>python</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[gitlab-ci自动部署（二）]]></title>
    <url>%2Fposts%2Fa98a4c62.html</url>
    <content type="text"><![CDATA[下面来说说CI/CD是怎么实现的： 登录gitlab-runner机器切换runner普通用户 [root@localhost ~]# su - gitlab-runner 编写.gitlab-ci.yml文件随便创建一个目录，叫什么无所谓 [gitlab-runner@localhost ~]$ mkdir git 将gitlab上想要发布的项目克隆到这个目录里 [gitlab-runner@localhost git]$ git clone git@gitlab.xxx.com:xxx/xxx.git 因为我们的项目是大工程，里面带着很多子工程，所以就需要通过yml文件，将项目分离出去 比方说我们想发布bb项目，但是bb项目属于aa这个大项目的子项目，所以就进aa大工程目录下 在项目目录里面创建一个.gitlab-ci.yml文件，如下 [gitlab-runner@localhost ~]$ cat .gitlab-ci.yml12345678job 1: stage: test script: - git subtree push -q --prefix=bb git@gitlab.xx.com:bb1/bb.git dev only: - dev tags: - shell 这样就可以将bb项目分离出去，相当于创建了一个新的项目 进入bb目录，也编写.gitlab-ci.yml文件，这个就是我们需要编译的脚本，中间可以穿插maven、node和shell的一系列命令 [gitlab-runner@localhost bb]$ cat .gitlab-ci.yml12345678910job 1: stage: build script: - rm -rf /opt/M2_REPO/com/bb/* - mvn clean package -P test -Dmaven.test.skip - bash -x /opt/bb/shell/bb.sh only: - dev tags: - shell 编写完yml文件后都需要提交下 git add . git commit -m “add gitlab-ci.yml” git push origin dev 另外包括传包，启动等命令都可以在yml文件里面体现，这样只要dev分支有commit的改变了，gitlab-ci就会自动创建job来自动发布]]></content>
      <categories>
        <category>gitlab</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[gitlab-ci自动部署（一）]]></title>
    <url>%2Fposts%2F999ca0ba.html</url>
    <content type="text"><![CDATA[目前GitLab已经有了CI功能，即持续集成的功能。可以实现代码提交后自动测试、编译、发布、部署等自动化工作 下面是我总结的实现内容： 安装runner在root下执行 下载gitlab-runner wget https://mirrors.tuna.tsinghua.edu.cn/gitlab-runner/yum/el7/gitlab-runner-10.5.0-1.x86_64.rpm 安装 rpm -ivh gitlab-runner-10.5.0-1.x86_64.rpm 配置Runner默认情况，Runner是通过gitlab-runner的这个用户来执行一系列操作，其工作目录也是在gitlab-runner的用户目录下面。如果使用默认gitlab-runner用户操作一些文件时经常会遇到权限问题，就需要给gitlab-runner赋权。我们通过以下方式修改。 #在root下执行 #删除服务 gitlab-runner uninstall #添加服务 gitlab-runner install –working-directory /home/builds –user gitlab-ci #重启服务 gitlab-runner restart #查看状态 gitlab-runner status 输出：gitlab-runner: Service is running! #查看是否生效 ps -ef | grep gitlab-runner 注册Runner先打开GitLab上需要自动部署的项目界面，找到该项目的Settings –&gt; CI/CD –&gt; Runners settings 在gitlab上可以看到自己的token信息，用来注册runner #在root下执行gitlab-runner register (会出现注册信息，填url，token，runner的名字) 至此安装部分就完成了]]></content>
      <categories>
        <category>gitlab</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[centos7搭建shadowsock实现vpn翻墙]]></title>
    <url>%2Fposts%2F253bb9c3.html</url>
    <content type="text"><![CDATA[安装使用root用户登录，运行以下命令：123wget --no-check-certificate -O shadowsocks.sh https://cyh.abcdocker.com/vpn/shadowsocks.sh chmod +x shadowsocks.sh ./shadowsocks.sh 2&gt;&amp;1 | tee shadowsocks.log 安装完成后，脚本提示如下： 1234567 Congratulations, Shadowsocks-python server install completed!Your Server IP :your_server_ipYour Server Port :your_server_portYour Password :your_passwordYour Encryption Method:your_encryption_methodWelcome to visit:https://teddysun.com/342.htmlEnjoy it! 卸载方法使用root用户登录，运行以下命令： ./shadowsocks.sh uninstall 配置文件路径：/etc/shadowsocks.json 12345678910&#123; &quot;server&quot;:&quot;0.0.0.0&quot;, &quot;server_port&quot;:your_server_port, &quot;local_address&quot;:&quot;127.0.0.1&quot;, &quot;local_port&quot;:1080, &quot;password&quot;:&quot;your_password&quot;, &quot;timeout&quot;:300, &quot;method&quot;:&quot;your_encryption_method&quot;, &quot;fast_open&quot;: false&#125; 多用户多端口配置文件配置文件路径：/etc/shadowsocks.json 123456789101112131415 &#123; &quot;server&quot;:&quot;0.0.0.0&quot;, &quot;local_address&quot;:&quot;127.0.0.1&quot;, &quot;local_port&quot;:1080, &quot;port_password&quot;:&#123; &quot;8989&quot;:&quot;password0&quot;, &quot;9001&quot;:&quot;password1&quot;, &quot;9002&quot;:&quot;password2&quot;, &quot;9003&quot;:&quot;password3&quot;, &quot;9004&quot;:&quot;password4&quot; &#125;, &quot;timeout&quot;:300, &quot;method&quot;:&quot;your_encryption_method&quot;, &quot;fast_open&quot;: false&#125; 1234启动：/etc/init.d/shadowsocks start停止：/etc/init.d/shadowsocks stop重启：/etc/init.d/shadowsocks restart状态：/etc/init.d/shadowsocks status]]></content>
      <categories>
        <category>vpn</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[pptp]]></title>
    <url>%2Fposts%2F5dcda1e.html</url>
    <content type="text"><![CDATA[安装pptpd$ yum install pptpd 配置本地及远程IP地址$ vi /etc/pptpd.conf localip 192.168.100.1 remoteip 192.168.100.2-245 配置DNS$ vi /etc/ppp/options.pptpd ms-dns 223.5.5.5 ms-dns 223.6.6.6 修改MTU$ vi / etc / ppp / ip-up /sbin/ifconfig $ 1 mtu 1500 用户和密码配置$ vi /etc/ppp/chap-secrets client server secret IP address 注释掉 testin_user1 pptpd testin_user1 * 配置防火墙$ vi /etc/sysctl.conf net.ipv4.ip_forward = 1＃开启IP转发 $ iptables -t nat -A POSTROUTING -s 192.168.100.0/24 -o eth1 -j MASQUERADE＃允许外网连接 开启服务$ service pptpd start $ service iptables start]]></content>
      <categories>
        <category>vpn</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Linux下使用rsync最快删除海量文件的方法]]></title>
    <url>%2Fposts%2F39f911ed.html</url>
    <content type="text"><![CDATA[摘要在linux的web服务器维护过程当中，有些程序会使用本地file缓存或生成大量程序日志。当发布进行版本迭代时，由于上个版本的程序会保留一段时间，因此这些小文件会消耗大量的inode。这个时候，我们常用的删除命令rm -fr * 就不好用了，因为要等待的时间太长。所以必须要采取一些其他手段来删除这些大量的小文件。这个时候，我们可以使用rsync来实现快速删除大量文件。 安装rsync安装很简单，这里我们直接使用yum安装即可 1yum install -y rsync 创建一个空的文件夹1mkdir /tmp/null 用rsync删除目标目录1rsync --delete-before -a -H -v --progress --stats /tmp/null/ /data/web/app/xxx/cache/ 这样我们要删除的cache目录就会被清空了，删除的速度会非常快。 rsync实际上用的是替换原理，处理数十万个文件也是秒删。 参数123456–delete-before 接收者在传输之前进行删除操作–progress 在传输时显示传输过程-a 归档模式，表示以递归方式传输文件，并保持所有文件属性-H 保持硬连接的文件-v 详细输出模式–stats 给出某些文件的传输状态]]></content>
      <categories>
        <category>linux</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[redmine]]></title>
    <url>%2Fposts%2F9afc5d97.html</url>
    <content type="text"><![CDATA[版本： redmine 3.1.1官方文档地址： http://www.redmine.org.cn/category/install Redmine实战下列描述均以操作系统 Centos7 为例部署。 环境介绍OS IP HostName RoleCentOS7 x64 192.168.10.10 node1 Redmine恢复机器CentOS7 x64 10.10.1.17 localhost Redmine机器 准备工作关闭Iptables和SELinux[root@node1 ~]# systemctl stop firewalld[root@node1 ~]# systemctl disable firewalld[root@node1 ~]# setenforce 0[root@node1 ~]# sed -i ‘/^SELINUX=/{ s/enforcing/disabled/ }’ /etc/selinux/config 调整服务器时间[root@node1 ~]# yum -y install ntp[root@node1 ~]# ntpdate -u 202.120.2.101 安装配置 Redmine安装依赖环境[root@node1 ~]# yum install -y zlib-devel openssl-devel ImageMagick-devel wget curl-devel rubygems mod_fcgid 安装RVM[root@node1 ~]# gpg –keyserver hkp://keys.gnupg.net –recv-keys 409B6B1796C275462A1703113804BB82D39DC0E3[root@node1 ~]# curl -L https://get.rvm.io | bash -s stable 载入RVM环境并获取需要的支持安装包[root@node1 ~]# source /etc/profile.d/rvm.sh[root@node1 ~]# rvm requirements 利用rvm安装 Ruby 2.2.3 并设为默认[root@node1 ~]# sed -i -E ‘s!https?://cache.ruby-lang.org/pub/ruby!https://ruby.taobao.org/mirrors/ruby!&#39; /usr/local/rvm/config/db[root@node1 ~]# rvm gemset create[root@node1 ~]# rvm install 2.2.3[root@node1 ~]# rvm use 2.2.3 –default 添加淘宝镜像[root@node1 ~]# gem sources –add https://gems.ruby-china.org/ –remove https://rubygems.org/[root@node1 ~]# gem sources -l CURRENT SOURCES https://gems.ruby-china.org 安装rails[root@node1 ~]# gem install rails -v=4.2 安装mysql和httpd[root@node1 ~]# yum install httpd httpd-devel -y [root@node1 ~]# wget http://dev.mysql.com/get/mysql-community-release-el7-5.noarch.rpm[root@node1 ~]# rpm -ivh mysql-community-release-el7-5.noarch.rpm[root@node1 ~]# yum -y install mysql-community-server mysql-devel[root@node1 ~]# service mysqld restart[root@node1 ~]# mysql -u rootmysql&gt; create database redmine character set utf8;mysql&gt; create user ‘redmine‘@’localhost’ identified by ‘redmine’;mysql&gt; grant all privileges on redmine.* to ‘redmine‘@’localhost’; 安装redmine的apache支持，这样可以通过apache访问[root@node1 ~]# gem install passenger[root@node1 ~]# passenger-install-apache2-module [root@node1 ~]# vim /etc/httpd/conf.d/passenger.confLoadModule passenger_module /usr/local/rvm/gems/ruby-2.2.3/gems/passenger-5.0.30/buildout/apache2/mod_passenger.so PassengerRoot /usr/local/rvm/gems/ruby-2.2.3/gems/passenger-5.0.30 PassengerDefaultRuby /usr/local/rvm/gems/ruby-2.2.3/wrappers/ruby [root@node1 ~]# vim /etc/httpd/conf.d/redmine.conf ServerName www.a.com # !!! Be sure to point DocumentRoot to ‘public’! DocumentRoot /var/www/html/redmine/public ErrorLog logs/redmine_error_log &lt;Directory /var/www/html/redmine/public&gt; Options Indexes ExecCGI FollowSymLinks Order allow,deny Allow from all # This relaxes Apache security settings. AllowOverride all # MultiViews must be turned off. Options -MultiViews # Uncomment this if you’re on Apache &gt;= 2.4: #Require all granted 安装redmine[root@node1 ~]# cd /var/www/html[root@node1 ~]# wget http://www.redmine.org/releases/redmine-3.1.1.tar.gz[root@node1 ~]# tar -zxvf redmine-3.1.1.tar.gz[root@node1 ~]# mv redmine-3.1.1 redmine[root@node1 ~]# cd /var/www/html/redmine/ [root@node1 ~]# vim Gemfile # 修改sourcesource ‘https://rubygems.org&#39; （注释掉）source’https://ruby.taobao.org&#39; [root@node1 ~]# cp config/configuration.yml.example config/configuration.yml[root@node1 ~]# cp config/database.yml.example config/database.yml[root@node1 ~]# vim config/database.yml # 修改数据连接production: adapter: mysql2 database: redmine host: localhost username: redmine password: “redmine” encoding: utf8 [root@node1 redmine]# gem install bundler # 注意是在网站根目录下执行[root@node1 redmine]# gem install rack-cache -v ‘1.4.2’[root@node1 redmine]# bundle install 为Rails生成cookies密钥[root@node1 redmine]# rake generate_secret_token 初始化redmine数据库表名[root@node1 redmine]# RAILS_ENV=production rake db:migrate[root@node1 redmine]# RAILS_ENV=production rake redmine:load_default_data 启动[root@node1 ~]# cd /var/www/html/redmine[root@node1 redmine]# mkdir /var/www/html/logs[root@node1 redmine]# bundle exec rails server webrick -e production -b 0.0.0.0 &amp;&gt;&gt; /var/www/html/logs/redmine.log &amp;访问地址：http://IP:3000 备份[root@node1 ~]# mysqldump -u root redmine &gt; /root/redmine.sql 恢复停止redmine， 步骤：ps -ef | grep rails，找到redmine的进程号，然后kill掉 恢复数据库[root@node1 ~]# mysql -u redmine -p redmine &lt; /root/redmine.sql 把10.10.2.120上的/backup/redmine-back/redmine_file目录下的所有文件拷贝到192.168.100.10中的/var/www/html/redmine/files目录[root@node1 ~]# scp -r root@10.10.2.120:/backup/redmine-back/redmine_file/* /var/www/html/redmine/files[root@node1 ~]# chmod -R 755 /var/www/html/redmine/files 启动redmine[root@node1 redmine]# bundle exec rails server webrick -e production -b 0.0.0.0 &amp;&gt;&gt; /var/www/html/logs/redmine.log &amp; 调整配置配置邮件发送，空格缩进必须如下，不然redmine无法启动[root@node1 ~]# vim /var/www/html/redmine/config/configuration.ymldefault: email_delivery: delivery_method: :smtp smtp_settings: openssl_verify_mode: ‘none’ address: mail.testin.cn port: 587 domain: testin.cn authentication: :login user_name: “project@testin.cn“ password: “m12345678” 重启redmine即可]]></content>
      <categories>
        <category>版本管理工具</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[centos6.4安装kvm]]></title>
    <url>%2Fposts%2F2074d833.html</url>
    <content type="text"><![CDATA[首先检查您的CPU是否支持硬件虚拟化 egrep ‘(vmx|svm)’ –color=always /proc/cpuinfo 应该显示一些东西，例如： [root@server1 ~]# egrep ‘(vmx|svm)’ –color=always /proc/cpuinfoflags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt rdtscp lm 3dnowext 3dnow pni cx16 lahf_lm cmp_legacy svm extapic cr8_legacy misalignsseflags : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt rdtscp lm 3dnowext 3dnow pni cx16 lahf_lm cmp_legacy svm extapic cr8_legacy misalignsse[root@server1 ~]# 现在我们导入软件包的GPG密钥： rpm–import /etc/pki/rpm-gpg/RPM-GPG-KEY* yum install kvm libvirt python-virtinst qemu-kvm /etc/init.d/libvirtd start virsh -c qemu:///system list 导入镜像文件 xterm-253-1.el6.x86_64.rpm 之后xmanager开始kvm就可以了]]></content>
      <categories>
        <category>虚拟化</category>
      </categories>
  </entry>
</search>
